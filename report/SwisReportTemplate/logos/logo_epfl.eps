%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: logo_epfl.eps
%%Creator: Adobe Illustrator(R) 12
%%AI8_CreatorVersion: 12.0.1%AI9_PrintingDataBegin%%For: Swarm-Intelligent Systems Group
%%CreationDate: 7/25/2006
%%BoundingBox: 0 0 157 76
%%HiResBoundingBox: 0 0 156.8174 75.8062
%%CropBox: 0 0 156.8174 75.8062
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%+ procset Adobe_CoolType_Core 2.23 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%ADO_BuildNumber: Adobe Illustrator(R) 12.0.1 x205 R agm 4.3861 ct 5.530
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 64 8
%%BeginData: 14448 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45C3BCC2BCC2BCC2BCC2BCC2BCC2BCC2BCC2BCC2BCC2BCC2BCC2BCC2
%BCC2BCC2BCC2BCC2BCC2BCC2BCC2CAFFFFFF7D7D527D7DFFFFFF527D527D
%FF7D527D527EFD08FF527D527D7DFFA87D527D7DFFFFFFCAC2BCC2BCC2BC
%C2BCC2BCC2BCC2BCC2BCC2BCC2BCC2BCC2BCC2BCC2BCC2BCC2BCC2BCC2BC
%C2BCC2BCC2C393B08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB0
%8CB08DB08CB08DB08CB08DB08CB08DB08DFFFFFFA8272027F87DFFFF7D27
%202727FF7D27F82720A8FD06FF7D27F82720A8FF7D2027F852FFFFFFCA8D
%B08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08C
%B08DB08CB08DB08CB08DBCBC8DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0
%B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0C3FFFFFF7D20272727
%A8FFFFA820272752FFFF5227272752FD06FF522727207DFFFF7D27272752
%FFFFFFCAB5B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0
%B08DB0B0B08DB0B0B08DB0B0B08DB0BC93B08CB08DB08CB08DB08CB08DB0
%8CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB0CAFFFFFF
%2727F82752FFFFFF7D27F82727FFFFA8F827F827A8FD04FFA8F827F8277D
%FFFF7DF827F852FFFFFFCA8CB08DB08CB08DB08CB08DB08CB08DB08CB08D
%B08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CBCBCFD26B0BCFFFF
%FFA8FD0427FD04FFA827272752FFFFFF522727277DFD04FF5227272752FF
%FFFF7D27272752FFFFFFCAB5FD28B0BCBBB08CB08DB08CB08DB08CB08DB0
%8CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CC9FFFFFF7D
%2027F852FD04FF7E27F82727FFFFFF5227F8272EFFFFFFA827F827207DFF
%FFFF7DF8272052FFFFFFCA8DB08DB08CB08DB08CB08DB08CB08DB08CB08D
%B08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CBCBCB0B08DB0B0B0
%8DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0
%B0B5CAFFFFFFFD04277DFD04FFA827272052FFFFFFA827272027FFFFFFA8
%27272027FD04FF7D27202752FFFFFFCAB08DB0B0B08DB0B0B08DB0B0B08D
%B0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B0BB93B0
%8DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB0
%8CB08DB08CB099FFFFFF7D27F82727FD05FF7D27F82727FFFFFF7D27F827
%F8A8FFFF5227F82752FD04FF7EF827F852FFFFFFCA8DB08CB08DB08CB08D
%B08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08C
%B08DBCBCFD25B0C9FFFFFF7D27272753FD05FFA827272752FD04FFFD0427
%A8FFFF52272727A8FD04FF7D27272752FFFFFFCAFD29B0BC93B08DB08CB0
%8DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB0
%8CB0CAFFFFFF2727F8277DFD05FF7D27202727FFFFFFA8272027F8A8FFA8
%F8272027A8FD04FFA82027F852FFFFFFCA8DB08CB08DB08CB08DB08CB08D
%B08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DBCBC
%8DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0
%B0B08DB0B0B0B5FFFFFFA827272720FD06FFA820272752FD04FFFD042784
%FF7D27202752FD05FF7D27272752FFFFFFCAB5B0B08DB0B0B08DB0B0B08D
%B0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0BC
%93B08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB0
%8CB08DB08CB08DBCFFFFFFA8F827F828A8FD05FF7D27F82727FFFFFFA827
%F827F8A8FF52F827F87DFD05FF7DF827F852FFFFFFCA8CB08DB08CB08DB0
%8CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB0
%8DB08CBCBCFD24B0C3FFFFFF7D27272752FD06FFA827272752FFFFFFA8FD
%0427A9FF522727277DFD05FF7D27272752FFFFFFCAB5FD28B0BCBBB08CB0
%8DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB0
%8CB08DC9FFFFFF52F827207DFD06FF7E27F82727FFFFFF7D27F82727FFA8
%272027F8A8FD05FF7DF8272052FFFFFFCA8DB08DB08CB08DB08CB08DB08C
%B08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CBCBC
%B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B0
%8DB0B0B08DB5CAFFFFFF522720277DFD06FFA827272052FFFFFF52272720
%7DFFA820272727A8FD05FF7D27202752FFFFFFCAB08DB0B0B08DB0B0B08D
%B0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0
%B0BB93B08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB0
%8CB08DB08CB08DB08DFFFFFFA827F827F8A8FD06FF7D27F82727FFFFA8F8
%27F8277EFF7D27F82727FD06FF7EF827F852FFFFFFCA8DB08CB08DB08CB0
%8DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB0
%8CB08DBCBCFD23B0BCFD04FFFD04277DFD04A8FFFFA827272752FFFF5327
%272752FFFFA827272752FD05A8FF7D27272752FFFFFFCAFD29B0BC93B08D
%B08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08C
%B08DB093FFFFFFA8272027F8272027F87DFFFF7D27202727FFA827F82720
%A8FFFF7D27F8272027F82720A8FFA82027F852FFFFFFCA8DB08CB08DB08C
%B08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08D
%B08CB08DBCBC8DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B0
%8DB0B0B08DB0B0B08DB0B0BCFFFFFFAFFD04272027272752FFFFA8202727
%52FF7D2752277DFFFFFF7D2727202727272027A8FF7D27272752FFFFFFCA
%B5B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0
%B08DB0B0B08DB0B0B08DB0BC93B08CB08DB08CB08DB08CB08DB08CB08DB0
%8CB08DB08CB08DB08CB08DB08CB08DB08CB099FFFFFFA827F827F827F827
%F852FFFF7D27F82727FFA8FFA8FFA8FFFFFF5327F827F827F827F8A8FF7D
%F827F852FFFFFFCA8CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB0
%8DB08CB08DB08CB08DB08CB08DB08CB08DB08CBCBCFD23B0BCFD04FFFD04
%27527D52527DFFFFA827272752FD09FF7D272727FD045253A8FF7D272727
%52FFFFFFCAB5FD28B0BCBBB08CB08DB08CB08DB08CB08DB08CB08DB08CB0
%8DB08CB08DB08CB08DB08CB08DB08CB0BBFFFFFFA827F82727FD07FF7E27
%F82727FD09FF5927202752FD06FF7DF8272052FFFFFFCA8DB08DB08CB08D
%B08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08C
%B08DB08CBCBCB0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0
%B0B08DB0B0B08DB0B0B08DBCFD04FF27272027A8FD06FFA827272052FD09
%FF7D20272752FD06FF7D27202752FFFFFFCAB58DB0B0B08DB0B0B08DB0B0
%B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B0BB
%93B08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB0
%8DB08CB08DB08DFFFFFFA827F827F8A8FD06FF7D27F82727FD09FF7D27F8
%2752FD06FFA8F827F852FD04FF8DB08CB08DB08CB08DB08CB08DB08CB08D
%B08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DBCBCFD23B0B5
%CAFFFFFF522727277DFD06FFA827272752FD09FF7D27272752FD06FFA8FD
%0427FD04FFBCFD28B0BC93B08DB08CB08DB08CB08DB08CB08DB08CB08DB0
%8CB08DB08CB08DB08CB08DB08CB08DB08CCAFFFFFF522027F87DFD06FF7D
%27202727FD09FF7D27F82752FD07FF2727F827A8FFFFFFBCB08CB08DB08C
%B08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08D
%B08CB08DBCBC8DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B0
%8DB0B0B08DB0B0B08DB0B0B0C3FFFFFF5327272752FD06FFA820272752FD
%09FF7D27272053FD07FF5227272084FFFFFFC3B0B08DB0B0B08DB0B0B08D
%B0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0BC
%93B08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB0
%8CB08DB08CB08DC2FFFFFF7DF827F827A8FD05FF7D27F82727FD09FF5327
%F82752FD07FF5227F82752FFFFFFA1B08DB08CB08DB08CB08DB08CB08DB0
%8CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CBCBCFD24B0
%BBFFFFFFA8FD0427AFFD05FFA827272752FD09FF7D2727277DFD07FFA827
%272752FD04FFB5FD27B0BCBBB08CB08DB08CB08DB08CB08DB08CB08DB08C
%B08DB08CB08DB08CB08DB08CB08DB08CB08DB0CAFFFFFF272720277DFD05
%FF7E27F82727FD09FF5927202752FD07FFA8272027F8A8FFFFFFBC8DB08C
%B08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08D
%B08CB08DB08CBCBCB0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B0
%8DB0B0B08DB0B0B08DB0B0B08DB0B0C9FFFFFF7D20272752FD05FFA82727
%2052FD09FF7D20272752FD08FFFD04277DFFFFFFC3B0B0B08DB0B0B08DB0
%B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B0
%BB93B08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08C
%B08DB08CB08DB08CB099FFFFFF7D27F827F8A8FD04FF7D27F82727FD09FF
%7D27F82752FD08FF7DF827F82EA8FFFFCF8DB08DB08CB08DB08CB08DB08C
%B08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DBCBCFD25
%B0B5CAFFFFFFFD042753FD04FFA827272752FD09FF7D27272752FD08FFA8
%FD0427A8FFFFFFC2FD26B0BC93B08DB08CB08DB08CB08DB08CB08DB08CB0
%8DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DC3FFFFFF7DF8272027
%A8FFFFFF7D27202727FD09FF7D27F82752FD09FF2727202752FFFFFFC9B0
%8DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB0
%8CB08DB08CB08DBCBC8DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08D
%B0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B5FFFFFFA8272027277DFFFFFF
%A820272752FD09FF7D27272053FD09FFA820272727A8FFFFFFBBB0B0B08D
%B0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0B08DB0B0
%B08DB0BC93B08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB0
%8CB08DB08CB08DB08CB08DB08CB0C2FFFFFF5227F82727FFFFFF7D27F827
%27FD09FF5327F82752FD0AFF28F827F852FFFFFFCA8CB08DB08CB08DB08C
%B08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CB08DB08CBCBC
%FD27B0B5CAFFFFFFFD042752FFFFA827272752FD09FF7D27272752FD0AFF
%7DFD0427A8FFFFFFC2FD24B0BBC3C29AC3BCC29AC3BCC29AC3BCC29AC3BC
%C29AC3BCC29AC3BCC29AC3BCC29AC3BCC29AC3BCC29AC3BCCAFFFFFF7E52
%7D5259A8FFA852525353FD09FF7D5252527DFD0BFF525352527DFFFFFFCA
%BCBCBC99C2BCBC99C2BCBC99C2BCBC99C2BCBC99C2BCBC99C2BCBC99C2BC
%BC99C2BCBC99C3FDFCFFFDFCFFFD0AFFA87DFD7CFFA8A87DA8A8FFFFFF7D
%A87DA8FD04FF7D84A8FFFFFFA8A8A8FFFFFFA8A87DA8A8FD04FFFD04A8FD
%04FFA87DA8A8FFFFFFA8A8A8FFA8A8A8FFFFFFA8A87DA8A8A884FFFD05A8
%FFFFFFA8A87DA8A8FFA8A8A8FFFFA8A8FFFFFFA8FFFFFFA8A8A8FFA8A8A8
%FFFFFFA8A87DA8FFFFA8A8A8FFFFFFA8A8A8FFA8A87DFF7D27A853A8FFFF
%53A8A8A852A8FFA859A8A87D52FFFFFF277DFFFFFFA827A853A8FD04FF7D
%527D527DFFFF7D7DA87D527DFFFF7D27FFFFA827A8FFFF52FD047D527D7D
%7DFF277D7D7DFFFF7D7DA8A8527DFFA827FFFFFF7D27A8FFA852FD04FF52
%7DFFFF277EFFFFA87D7DA8527DFFFF7D4CA8FFFF7D52FFA852537D7DA852
%FD04FF52A8FFFFFFA8A8FF27FD04FF5252FFFF527DFFFFFFA852FD08FF27
%FFA827FF7D52FFFFFFA8277DFF7D7DFFFFFF7D52FFA87DFFFFFFA827FD04
%FF7D7EFFA8FF7D52FD04FF7DFFA852FFFFFFA827FFFFA8F852FFFFFF7D7D
%FFFF52A8FFA852A8FFFFFF527DFFA852FFFFFF7E7DFFFF52A8FFFFA952FF
%FFFFA852FD06FF7D7DFD04FFA827FFFF52A8FD04FF52FD08FF52FFFF52FF
%2EA8FD04FF5252FFA852FD04FF527E7EA8FFFFFFA852FD04FF52A8FFFFFF
%52A8FD06FFA927A8A8FF7D52FFFFA884527DFFFF7DA8FFFF52A8FF7D52FD
%04FFA827FF7D52FFFFFFA87DFFFF527DFFFFA8277D52FF7D52FD06FF527D
%FD05FF27AFFF527DFFFFFFA8527D52A8FD05FF2EA852A8A827A8FD04FF7D
%27FF7D7DFD04FF7E2752FD04FFA827FD04FF59527D7DFF27A8FD06FFA827
%FD047D27FFFFA87DFF277DFF7D7DFFFF52A8FF527DFD04FFA827FFA828FF
%FFFF7D7DFFFF527D527DFF52FFA8FF7D52FD06FF527DFD04FFA852FFFF52
%A8FD04FF52FFA8FD06FF52A8FFFFFF27A8FD04FF7D7DFFA852FD05FF27A8
%FD04FFA852FD04FF52A8FFFFFF52A8FD06FFAF52FFFFFFA852FFFFA87DFF
%FF27A87EA8FFFF52A9FF7D52FD05FF27FF7D53FFFFFFA87DFFFF527DFFA8
%A852FD04FF277DFD04FFA8A827FD04FF7D52FFFF527DFFFFFFA852FD08FF
%28FD04FF5252FD04FF527DFF7D7DFD05FF527DFD04FFA827FD04FF527DFF
%FFFF5252FD04FFA8FFA852FFFFFFA827FFFFA87DFFFFA827527DFFFF52A8
%FF7D27A8FFFFFF7D7DFFA827FFFFFF7D7DFFFF52A8FFFFA827A884A8FFA8
%277DA8FF7DA8FF7D52A8A8A852FFFFFF277DFD04A827A8A8A8FD04FF8427
%A8FFFFFFA85253FFA97D52FFFF7D27FFA8A8FFFF277DFD04FF7D27A8FFFF
%FF277DA884FFFF5252A8FF7D7DFFA827FFFFFF7D27A8FF7D7DFFFFFFA827
%A8FFFF27A8FFFF5252A8FF7E52FFFFFF5252FFA87DA8FFFF527DFFFD057D
%A8FFFFA8527D527DA8FFFF7E527D7DFFFFFFA8FD047DFFA87D7D7DA8FD04
%FFA852A8FD04FFA87D527D7DFFFFFFFD047DA8FFA87D7DFD04FFA852A8FF
%FFA8FD047DFFFFFFFD047DA8FF7E7DA8FFFFA852A8FFA87DFD04FFA8A8FF
%A87D7DFFFFFFFD047D5253A8FFFF7D597DA8FFFFFF7D7D7DA8FD71FF7D52
%52A8A8FFA8FD10FFA8FD69FFA8A8527D7DA8A8FD0EFFA87DA8FD0CFF7E7D
%FD68FF84FD04A8FFA8A87DA8FFFF7DA87DA8A8FFFFFFA8A87DA8A8FFA8A8
%7DA8FD06FFA8FFFFFF7DA8A8FFFFFF7EA87DA8FD04FFA8A87DA87DA8FFFF
%FFA87DA87DA8FD04FFA8A8A8FD05FFA8FFFFFFA8A8A8FFFFFF7DA8FFFF7D
%7D84FFFFFFA8FD05FFA8FFFFFFA8A8A8FFA8FD05FF7DA8FFA87DA87DA8A8
%27A87DA8FF7D52AF7DFFFF5252A87D7D52FFFFA827A87DA9FF7D52A8527D
%FD04FF52A8FFFFFF7D27FD04FF5253A87DFD05FF287DA8A8527DFFFFA852
%7D7D7DFD05FF277EFD05FF7DA8FFFFFF277DFFFFA9527DFF7D7D847DFFFF
%FF7D7DFFFFFF7D52FD04FF52A8FFA827FD04FF7D7DFFA8527D7D7DA852FF
%FFA9FF7D52FD04FF527DFFFFFF5252FFA852FD04FF7D7DFFA827FFFFFFA8
%2752FFFFFF7D52FD04FF537DFD07FF527DFFFFFF277DFFFF52AFFD07FF52
%A8FD05FF277DFFFFFF527DFFFFFF52A8FF52A8FFA8FFFFFF2752FFFFFFA8
%2752FFFFFF7DA8FF7E2728FFFFFF7DA8FFFF52A9FFFFFF28FFA8FFFF7D52
%FFA8FFFF7D7DFFFFFFA827FFA927FFA8FFFFA852FFA853FFFFFFA87D52FF
%FFFFA852FD04FF7D7DFFA8FD05FF527DFFFFFFA827FFFF527DFD07FF52A8
%FD04FF7D8452FFFFFF52A8FFFFFF7DA8FF7D52FD04FFA87E52A8FFFFA8A8
%527DFFFF53A8FFA87D5252FFFF7DA8FFFF527DFFFFA8527D59A8FF7D527D
%7DA8FF527DFD04FF27A8A8277D52A8FF7D527D59A8FFFFFF52A82784FFFF
%7D52FD04FF5252527DFD05FF527DFFFFFFA827A8FF527D527EFD05FF5284
%FD04FF52A8527DFFFF527DFFFFFF52A8FFFF5227A8FFFF7D7D5252FFFFA8
%7DFF277DFF7D7EFF7D84FF2752FF7DA8FFFF527D52A8FF52FD04FF7E52FF
%A8FFFF7D53FD04FF52FFFF28FD04FFA852A827A8FFFFA87DA87D52FFFFA8
%52FD04FF7D7DFFA8FD05FF527DFD04FF27FFFF53A8FD07FF52A9FD04FF52
%A85259FFFF52A8FFFFFF7DA8FFFFFF5252FFFF52A87D52FFFF7DA8FFFF27
%A87DA8FFA87DFFA8527DA8A8FFFF59A8FFFFA852FD04FF7D7DFD04FF527D
%FFFFFF7D52FFA852FD04FF7D7DFFA827FFFF7D7DFFA827A8FF7D52FD04FF
%527DFFFFA9FD04FF597DFFFFFF7D7DFFFF52A8FD07FF52A8FFFFFF59A8FF
%FF27AFFF5253FFFFFF52FD05FF27FF7D7DFFFF27A8FF847DFFFFA82752A8
%FF7D7DFFFFA85252A8FFFF52A8FFFFA827FD04FF7D27A97DA8FF5952FFA8
%A852FFFFA827A87DA8FF7D27FFFF7D27A827FFFFFF527DFF8427A87DA8FF
%5252FF7DFD05FF5252A8FF7D7DFFFFFF527DA87DFD05FF277DA87DA852A8
%FFFF5352FFA8527DFF7D7DFFFF52FF7D7DFF527DFFFF7D27FF7D7DFFFFFF
%A827AFFF7D52FFFFFFA827A8FFA84B7DA87DA87DA8FFFFFF7D7D597DA8FF
%FD057DFFFFFFA87E7D7DA8FF7E7DA8FFFFA87D7EA8FFFFA87DFF7E7E7D7D
%A8FF7D7D53A8FD04FFA8847D7D7D84A8FFFFFF7D7D53A8FD04FFA87E7D7D
%7DA87DFFFFFFA87DA8FFA87D7DA8FFFFFFA87D7DFFA87DA8FFFFA87DA8A8
%7DFD04FFA8A8FF7E7EA8FFFFFFA8FFFFA87D7D59A8
%%EndData
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 70 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/set_gvm
{
	currentglobal exch setglobal
}bdf
/reset_gvm
{
	setglobal
}bdf
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup () cvn eq{
						pop (Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/thold_halftone
{ 
	level3
		{sethalftone currenthalftone}
		{
			dup /HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}
			{
				begin
				Width Height mul {
					Thresholds read {pop} if
				} repeat
				end
				currenthalftone
			} ifelse
		}ifelse
} def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		exch () /SubFileDecode filter
	}
	{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
} bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx
			currentdict /srcStr get /readstring cvx /pop cvx
			/dup cvx /length cvx 0 /gt cvx [
				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx
				names_index Names length currentdict /srcStr get length 1 sub {
					1 /index cvx /exch cvx /get cvx
					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx
					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx
				} for
				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx
			] cvx /if cvx
			/end cvx
		] cvx
		bind
		/exec cvx
	] cvx
	end
} bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict /DataSource get def
	/origMultipleDataSources imageDict /MultipleDataSources get def
	/origDecode imageDict /Decode get def
	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def
	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse
	{
		/imbufCnt imageDict /DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub {
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put
		} for
		DeviceN_PS2 {
			imageDict begin
		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def
			/MultipleDataSources false def
			/Decode [0 1] def
			end
		} if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or {
			/srcDataStrs [ imageDict begin
				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
				{
					Width Decode length 2 div mul cvi string
				} repeat
				end ] def		
			imageDict begin
		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def
			/Decode [0 1] def
			end
		}{
			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put
			imageDict /Decode [0 1] put
		} ifelse
	} ifelse
	imageDict exch
	load exec
	imageDict /DataSource origDataSource put
	imageDict /MultipleDataSources origMultipleDataSources put
	imageDict /Decode origDecode put	
	end
} bdf
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 
			pop
			MultipleDataSources {
			 	0 1 DataSource length 1 sub {
					DataSource type dup
					/arraytype eq {
						pop DataSource exch get exec
					}{
						/filetype eq {
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						} ifelse
					} ifelse
					AGMUTIL_imagefile exch writestring
				} for
			}{
				DataSource type dup
				/arraytype eq {
					pop DataSource exec
				}{
					/filetype eq {
						DataSource imbuf readstring pop
					}{
						DataSource
					} ifelse
				} ifelse
				AGMUTIL_imagefile exch writestring
			} ifelse
		}for
		end
		true
	}ifelse
	end
} bdf
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
statusdict /product known userdict /AGMP_current_show known not and{
	/pstr statusdict /product get def
	pstr (HP LaserJet 2200) eq 	
	pstr (HP LaserJet 4000 Series) eq or
	pstr (HP LaserJet 4050 Series ) eq or
	pstr (HP LaserJet 8000 Series) eq or
	pstr (HP LaserJet 8100 Series) eq or
	pstr (HP LaserJet 8150 Series) eq or
	pstr (HP LaserJet 5000 Series) eq or
	pstr (HP LaserJet 5100 Series) eq or
	pstr (HP Color LaserJet 4500) eq or
	pstr (HP Color LaserJet 4600) eq or
	pstr (HP LaserJet 5Si) eq or
	pstr (HP LaserJet 1200 Series) eq or
	pstr (HP LaserJet 1300 Series) eq or
	pstr (HP LaserJet 4100 Series) eq or 
	{
 		userdict /AGMP_current_show /show load put
		userdict /show {
		  currentcolorspace 0 get
		  /Pattern eq
		  {false charpath f}
		  {AGMP_current_show} ifelse
		} put
	}if
	currentdict /pstr undef
} if
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		DataSource 0 get type
		dup /filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch get exec length exch 0 ne {pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup /filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	  2{/exec load}repeat
	  3 1 roll
	  [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs /TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type /dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	dup type /arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch {cvx} if
}bdf
/clonedict
{
	dup length dict
	begin
		{
		dup type /dicttype eq
			{
				clonedict
			} if
		dup type /arraytype eq
			{
				clonearray
			} if
		def
		}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and
} bdf
/Indexed_DeviceN
{ 
	/indexed_colorspace_dict AGMCORE_gget dup null ne {
		dup /CSDBase known {
			/CSDBase get /CSD get_res /Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	} ifelse
} bdf
/DeviceN_NoneName
{	
	/Names where {
		pop
		false Names
		{
			(None) eq or
		} forall
	}{
		false
	}ifelse
} bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup /arraytype eq exch /packedarraytype eq or
		{
			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}
			{
				true
			}ifelse
		}
		{
			true
		} ifelse
	}
	{
		true
	} ifelse
} bdf
/base_colorspace_type
{
	dup type /arraytype eq {0 get} if
} bdf
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5 {cleartomark} bind def
}{
	/pdfmark_5 {pdfmark} bind def
}ifelse
/ReadBypdfmark_5
{
	2 dict begin
	/makerString exch def string /tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
		pop pop cleartomark exit
		}{
			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5
		} ifelse
	}loop
	end
} bdf
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.
%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for
%% definitions of some fundamental procedures.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 201 dict dup begin put
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_in_pattern false def
/AGMCORE_currentpagedevice nd
/knockout_unitsq nd
currentglobal true setglobal
[/CSA /Gradient /Procedure]
{
	/Generic /Category findresource dup length dict copy /Category defineresource pop
} forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/dictstackcount countdictstack def
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub {end}for
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 10 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_&setoverprint /setoverprint ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern /makepattern load def
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	<<
	/MaxPatternItem currentsystemparams /MaxPatternCache get
	>>
	setuserparams
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==
			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf
		} if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias {
				/Name get exch pop
			} if
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse
						not AGMCORE_currentpagedevice/OverrideSeparations known and
						{
							AGMCORE_currentpagedevice/OverrideSeparations get
							{
								/HqnSpots /ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
						}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace
							false
							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				dup true exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup (Cyan) eq exch
						dup (Magenta) eq 3 -1 roll or exch
						dup (Yellow) eq 3 -1 roll or exch
						(Black) eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
					{pop}
					{convert_spot_to_process or}ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{ 
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			  	AGMCORE_magenta_plate{
			  		4 3 roll pop pop pop
			  	}{
			  		AGMCORE_yellow_plate{
			  			4 2 roll pop pop pop
			  		}{
			  			4 1 roll pop pop pop
			  		}ifelse
			  	}ifelse
			}ifelse
			settransfer  
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup /Cyan eq 1 index (Cyan) eq or
					{pop (_cyan_)}if
				dup /Magenta eq 1 index (Magenta) eq or
					{pop (_magenta_)}if
				dup /Yellow eq 1 index (Yellow) eq or
					{pop (_yellow_)}if
				dup /Black eq 1 index (Black) eq or
					{pop (_black_)}if
				}def
			dup type /arraytype eq
				{[exch {filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3 {
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup (Cyan) eq exch /Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup (Magenta) eq exch /Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup (Yellow) eq exch /Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup (Black) eq exch /Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type /stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string /string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in /readstring cvx
						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx
						[/pop cvx ()]cvx /ifelse cvx
					]cvx /ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type /dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict /Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode [1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0 [C0 channel get 1 exch sub] def
							/C1 [C1 channel get 1 exch sub] def
							}{
							/C0 [1] def
							/C1 [1] def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def			
						}if
					currentdict /Range known
						{/Range [0 1] def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict /Function known
					{
					currentdict /Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf
					/ColorSpace [/DeviceGray] def
					}{
					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq
						{
						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get /Separation eq
						{
							{
								[1 /exch cvx /sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx
							}{
								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2 /DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup /ColorSpace get
				dup type /arraytype ne
					{[exch]}if
				dup 0 get /DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get /Separation eq
					{
					exch begin
					ColorSpace 1 get dup /None ne exch /All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get /exec cvx
										4 AGMCORE_plate_ndx sub -1 /roll cvx
										4 1 /roll cvx
										3 [/pop cvx]cvx /repeat cvx
										1 /exch cvx /sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get /DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get /exec cvx
									4 AGMCORE_plate_ndx sub -1 /roll cvx
									4 1 /roll cvx
									3 [/pop cvx]cvx /repeat cvx
									1 /exch cvx /sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace [/DeviceGray] def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type /arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get /CIEBasedA eq
								{
								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def
								}if
							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or
								{
								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def
								}if
							ColorSpace 0 get /CIEBasedDEFG eq
								{
								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup /AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace [/Separation (None) /DeviceGray {}] def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup /AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup /PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading /AGMCORE_ignoreshade known
					currentdict end exch
					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	} bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	} bdf
	/n_color_components
	{
		base_colorspace_type
		dup /DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where {
						begin
						dup 0 get dup /Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[ 
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get [ 
									exch {
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									} forall 
								] 1 xpt
							}if
						}ifelse
						end
					} if
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/devn /setdevicencolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/devncs /setdevicencolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/@ /stroke ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin /clonedict load end def
	/clonearray Adobe_AGM_Utils begin /clonearray load end def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
	/getrampcolor
	{ 
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type /stringtype eq {indx get} if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		} for
		ColorSpaceFamily /Separation eq 
		{sep}
		{
			ColorSpaceFamily /DeviceN eq
			{devn} {setcolor}ifelse
		}ifelse
	} bdf
	/sssetbackground {aload pop setcolor} bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where {pop /setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			newpath
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			newpath
		} if
		c1x c2x eq
		{
			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
		}
		{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
		} ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{ pathbbox } stopped
		{ 0 0 0 0 } if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}
		{
			/max { 2 copy gt { pop } {exch pop} ifelse } bdf
			/min { 2 copy lt { pop } {exch pop} ifelse } bdf
			rampdict begin
			40 dict begin
			background length 0 gt { background sssetbackground gsave clippath fill grestore } if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}
				{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}
						{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{ /theta 89.99 def}
							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}
							{
								/L1maxX 0 def
								/L2maxX 0 def
							} ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						} ifelse
					} ifelse
				} ifelse
			} if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt { exch } if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			} if
		} if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		newpath
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}
		{
			0
			numsteps
			{
				dup
				subsampling { round cvi } if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			} repeat
			pop
		} ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}
			{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}
				{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}
					{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{ /theta 89.99 def}
						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}
						{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					} ifelse
				} ifelse
			} ifelse
		} if
		grestore
		grestore
		end
		end
		end
		} ifelse
	} bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where {pop /setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			newpath
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			newpath
		} if
		x1 x2 eq
		{
			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
		}
		{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{ pathbbox } stopped
		{ 0 0 0 0 } if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}
		{
			rampdict begin
			20 dict begin
			background length 0 gt { background sssetbackground gsave clippath fill grestore } if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt { exch } if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				} if
			} if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				} if
			} if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling { round cvi } if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			} repeat
			pop
			ext1 {
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				} if
			} if
			grestore
			grestore
			end
			end
			end
		} ifelse
	} bdf
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
/capture_currentpagedevice {
	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf
} def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup //Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name /MappedCSA xdf}ifelse
} def
/setsepcolor
{ 
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/setdevicencolor
{ 
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		} for
		TintProc
	end
} def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup () eq exch (All) eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load /exec cvx
								/not cvx /and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							] cvx /if cvx
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc {setcolor} bdf
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/additive_blend
{
  	3 dict begin
  	/numarrays xdf
  	/numcolors xdf
  	0 1 numcolors 1 sub
  		{
  		/c1 xdf
  		1
  		0 1 numarrays 1 sub
  			{
			1 exch add /index cvx
  			c1 /get cvx /mul cvx
  			}for
 		numarrays 1 add 1 /roll cvx 
  		}for
 	numarrays [/pop cvx] cvx /repeat cvx
  	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add /index cvx  
			c1 /get cvx /sub cvx /mul cvx
			}for
		/sub cvx
		numarrays 1 add 1 /roll cvx
		}for
	numarrays [/pop cvx] cvx /repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc [
		/TintTransform cvx /setcolor cvx
	] cvx bdf
	MappedCSA setcolorspace_opt
} bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length {pop} repeat
	end
} bdf
/setdevicencolorspace
{ 
	dup /AliasedColorants known {false}{true}ifelse 
	current_spot_alias and {
		7 dict begin
		/names_index 0 def
		dup /names_len exch /Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup /Names get
		{
			dup map_alias {
				exch pop
				dup /ColorLookup known {
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup /Components known {
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index [null null null null] put
						end
					} ifelse
				} ifelse
				new_names names_index 3 -1 roll /Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup /LookupTables known {
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index [null null null null] put
					end
				} ifelse
			} ifelse
			/names_index names_index 1 add def 
		} forall
		alias_cnt 0 gt {
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def
			0 1 names_len 1 sub {
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {
					/AliasedColorants false def
					exit
				}
				{
					new_LookupTables names_index get 0 get null eq {
						dup /Names get names_index get /name xdf
						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq
						or or or not {
							/AliasedColorants false def
							exit
						} if
					} if
				} ifelse
			} for
			lut_entry_len 1 eq {
				/AliasedColorants false def
			} if
			AliasedColorants {
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict /TTTablesIdx known not {
					/TTTablesIdx -1 def
				} if
				end
			} if
		}if
		end
	} if
	dup /devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict /AliasedColorants known {
		AliasedColorants
	}{
		false
	} ifelse
	dup not {
		CSA map_csa
	} if
	/TintTransform load type /nulltype eq or {
		/TintTransform [
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup (Cyan) eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup (Magenta) eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0 /exch cvx 0 0
							}
							{
							(Yellow) eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1 /roll cvx 0
								}
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1 /roll cvx
								} ifelse
							} ifelse
						} ifelse
					5 -1 /roll cvx /astore cvx
					}
					{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx /mul cvx /round cvx /cvi cvx /get cvx
					} ifelse
					Names length TTTablesIdx add 1 add 1 /roll cvx
				} for
			Names length [/pop cvx] cvx /repeat cvx
			NComponents Names length
  			TintMethod /Subtractive eq
  				{
  				subtractive_blend
  				}
  				{
  				additive_blend
  				} ifelse
		] cvx bdf
	} if
	AGMCORE_host_sep {
		Names convert_to_process {
			exec_tint_transform
		}
		{	
			currentdict /AliasedColorants known {
				AliasedColorants not
			}{
				false
			} ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants {
				/currentspotalias current_spot_alias def
				false set_spot_alias
			} if
			Names {
				AGMCORE_is_cmyk_sep {
					dup (Cyan) eq AGMCORE_cyan_plate and exch
					dup (Magenta) eq AGMCORE_magenta_plate and exch
					dup (Yellow) eq AGMCORE_yellow_plate and exch
					(Black) eq AGMCORE_black_plate and or or or {
						/devicen_colorspace_dict AGMCORE_gget /TintProc [
							Names names_index /devn_makecustomcolor cvx
						] cvx ddf
						/painted? true def
					} if
					painted? {exit} if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {
					/devicen_colorspace_dict AGMCORE_gget /TintProc [
						Names names_index /devn_makecustomcolor cvx
					] cvx ddf
					/painted? true def
					exit
					} if
				} ifelse
				/names_index names_index 1 add def
			} forall
			AvoidAliasedColorants {
				currentspotalias set_spot_alias
			} if
			painted? {
				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget /TintProc [
					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx
 					0 0 0 0 /setcmykcolor cvx
				] cvx ddf
			} ifelse
			end
		} ifelse
	}
	{
		AGMCORE_in_rip_sep {
			Names convert_to_process not
		}{
			level3
		} ifelse
		{
			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and {
				[
					Names /length cvx [/pop cvx] cvx /repeat cvx
				] cvx bdf
			}{
				{setcolor} bdf
			} ifelse
		}{
			exec_tint_transform
		} ifelse
	} ifelse
	set_crd
	/AliasedColorants false def
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict /CSDBase known {
			CSDBase /CSD get_res begin
			currentdict /Names known {
				currentdict devncs
			}{
				1 currentdict sepcs
			} ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt /Names where {pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal {
					/tableIndex xdf
					Lookup dup type /stringtype eq {
						compCnt tableIndex map_index
					}{
						exec
					} ifelse
					/Names where {
						pop setdevicencolor
					}{
						setsepcolor
					} ifelse
					currentgray
					tableIndex exch
					HiVal mul cvi 
					NewLookup 3 1 roll put
				} for
				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt
				end
			}{
				level3
				{
					currentdict /Names known {
						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt
					}{
						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt
					} ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict /Names known {
						Lookup dup type /stringtype eq
							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}
							{/exec cvx}ifelse
							/TintTransform load /exec cvx
					}{
						Lookup dup type /stringtype eq
							{/exch cvx /get cvx 255 /div cvx}
							{/exec cvx}ifelse
							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx
					} ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			} ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
						pop [/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{ 
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval {} forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						} bind
					}{
						Lookup
					}ifelse
				}ifelse
				] setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep {
		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 
			begin
			CSDBase /CSD get_res begin
			currentdict /Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
			end
		}{
			/Lookup get 4 3 -1 roll map_index setcmykcolor
		} ifelse
	}{
		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {
			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		} ifelse
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode [0 1] def
		/DataSource <FF> def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict /image get exec
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup /CSD eq {
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	} ifelse
}def
/del_res
{
	{
		aload pop exch
		dup /CSD eq {
			pop 
			{
				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef
			}forall
		}{
			exch
			{
				1 index undefineresource
			}forall
			pop
		} ifelse
	} forall
}def
/get_res
{
	dup /CSD eq {
		pop
		dup type dup /nametype eq exch /stringtype eq or {
			AGMCORE_CSD_cache exch get
		} if
	}{
		findresource
	} ifelse
}def
/get_csa_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		/CSA get_res
	} if
}def
/pattern_buf_init
{
	/count get 0 0 put
} def
/pattern_buf_next
{
	dup /count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
} def
/cachepattern_compress
{
	5 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq {
			pop
		}{
			patarray dup length 1 sub 3 -1 roll put
		} ifelse
		{string_size}{0}ifelse string
	} /LZWEncode filter def
	{ 		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not {exit} if
	} loop
	LZWFilter closefile
	patarray				
	end
}def
/cachepattern
{
	2 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		patarray dup length 1 sub 3 -1 roll put
		not {exit} if
	} loop
	patarray dup dup length 1 sub () put					
	end	
}def
/wrap_paintproc
{ 
  statusdict /currentfilenameextend known{
	clonedict
	begin
	/OldPaintProc /PaintProc load def
	/PaintProc
	{
		mark exch
		dup /OldPaintProc get stopped
		{closefile restore end} if
		cleartomark
	}  def
	end
  } {pop} ifelse
} def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			  1 index begin
		BBox 0 get XStep div cvi XStep mul /xshift exch neg def
		BBox 1 get YStep div cvi YStep mul /yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[ xshift yshift /translate load null /exec load ] dup
		3 /PaintProc load put cvx /PaintProc exch def
		end
	1 index dup /ID get exch /Pattern add_res
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}{null}ifelse
	Intent ne {
		Intent /ColorRendering {findresource} stopped
		{
			pop pop systemdict /findcolorrendering known
			{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				true
			}
			{false} ifelse
		}
		{true} ifelse
		{
			dup begin
			currentdict /TransformPQR known {
				currentdict /TransformPQR get aload pop
				3 {{} eq 3 1 roll} repeat or or
			}
			{true} ifelse
			currentdict /MatrixPQR known {
				currentdict /MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true} ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR [
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind
				] def
				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def
				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def
				currentdict end
			} if
			setcolorrendering_opt
		} if		
	}if
} def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict /ColorRendering known{
			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type /arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0} ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get /CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		currentdict/TintProc known currentdict/CSA known and 3 1 roll
		//Adobe_AGM_Core begin
		dup /customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			4 -1 roll{
				exch pop /sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
			pop
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
	/PrepsDict where
		{pop}
		{
		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq
			{
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
/set_def_ht
{
	AGMCORE_def_ht sethalftone
} def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.25 0
%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.25 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }
if
userdict /Adobe_CoolType_Core 60 dict dup begin put
/Adobe_CoolType_Version 2.25 def
/Level2?
	systemdict /languagelevel known dup
		{ pop systemdict /languagelevel get 2 ge }
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal /pop load def
	/gcheck { pop false } bind def
	/currentpacking false def
	/setpacking /pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict /Adobe_CoolType_Data 2 copy known not
	 { 2 copy 10 dict put }
if
get
	 begin
	 /@opStackCountByLevel 32 dict def
	 /@opStackLevel 0 def
	 /@dictStackCountByLevel 32 dict def
	 /@dictStackLevel 0 def
	 end
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup /args
			7 index
			5 add array put
			put get
			}
			{
			get dup /args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch /args exch put
				}
				{ pop }
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{ pop count }
			if
			dup /argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{ pop }
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	} bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{ { pop } repeat }
				{ pop }
			ifelse
			args 0 argCount getinterval {} forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{ { end } repeat }
		{ pop }
	ifelse
	} bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	} bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	} bind def
/@ReRaise
	{
	cvx $error /errorname get errordict exch get exec
	stop
	} bind def
/@Stopped
	{
	0 @#Stopped
	} bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{ @_RestoreStackLevels true }
		{ @_PopStackLevels false }
	ifelse
	} bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	} bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					 { (*) { pop stop } 128 string /Category resourceforall }
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup
					 {
						  /@shouldNotDisappearDictValue known
								{
										  {
												end
												currentdict 1 index eq
													 { pop exit }
												if
										  }
									 loop
								}
						  if
					 }
				if
				end
		}
		{ false }
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{ /steveamerige /Category resourcestatus }
		stopped
			{ cleartomark true }
			{ cleartomark currentglobal not }
		ifelse
		}
		{ false }
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
				{ cleartomark false }
				{ { 3 2 roll pop true } { cleartomark false } ifelse }
			ifelse
			end
		} bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad /ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup /CMap CTHasResourceStatusBug
						{ CTResourceStatus }
						{ resourcestatus }
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup /CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{ exit }
								{ stop }
							ifelse
							}
						ifelse
						}
						{ pop }
					ifelse
					}
				128 string /CMap resourceforall
				}
			stopped
				{ cleartomark }
			stopped pop
			setglobal
			}
		if
		}
	if
	} bind def
/doc_setup
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mov /moveto load def
		/nfnt /newencodedfont load def
		/mfnt /makefont load def
		/sfnt /setfont load def
		/ufnt /undefinefont load def
		/chp /charpath load def
		/awsh /awidthshow load def
		/wsh /widthshow load def
		/ash /ashow load def
		/sh /show load def
		end
		currentglobal false setglobal
	  userdict /Adobe_CoolType_Data 2 copy known not
		  { 2 copy 10 dict put }
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	} bind def
/doc_trailer
	{
	currentdict Adobe_CoolType_Core eq
		{ end }
	if
	} bind def
/page_setup
	{
	Adobe_CoolType_Core begin
	} bind def
/page_trailer
	{
	end
	} bind def
/unload
	{
	systemdict /languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{ undef }
				{ pop pop }
			ifelse
			}
		if
		}
	if
	} bind def
/ndf
	{
	1 index where
		{ pop pop pop }
		{ dup xcheck { bind } if def }
	ifelse
	} def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where { /globaldict get begin } if
			dup where pop exch get
		/globaldict where { pop end } if
		end
	end
Adobe_CoolType_Core_Defined
	{ /systemfindfont exch def }
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{ pop } ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq { 0 } { dup length } ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index /FID eq
				{ pop pop }
				{ def }
			ifelse
			}
		forall
		dup null eq
			{ pop }
			{ { def } forall }
		ifelse
		currentdict
		end
	exch setglobal
	} bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	} bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index  known
			{ SharedFontDirectory 3 index get /FontReferenced known }
			{ false }
		ifelse
		}
		{
		FontDirectory 3 index known
			{ FontDirectory 3 index get /FontReferenced known }
			{
			SharedFontDirectory 3 index known
				{ SharedFontDirectory 3 index get /FontReferenced known }
				{ false }
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont /FontReferenced get
		2 index dup type /nametype eq
			{findfont}
		if ne
			{ pop false }
		if
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{ 2 copy get 3 index 3 1 roll put }
		for
		pop pop pop
		}
		{
		dup type /nametype eq
		  { findfont }
	  if
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index /FID ne
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type /stringtype eq { cvn } if def dup
			currentdict
			end
		definefont def
		}
	ifelse
	} bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type /dicttype ne
			{ 0 dict }
		if
		currentdict /$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{ def } forall
					{ def } forall
					currentdict
					dup /$Init known
						{ dup /$Init get exec }
					if
					end
				/$Strategy exch def
				}
				{ pop pop pop }
			ifelse
			}
			{ pop pop }
		ifelse
		end
	} bind def
/scff
	{
	$SubstituteFont
		begin
		dup type /stringtype eq
			{ dup length exch }
			{ null }
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{ $sname }
			ifelse def
		end
		{ findfont }
	@Stopped
		{
		dup length 8 add string exch
		1 index 0 (BadFont:) putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{ findfont }
		@Stopped
			{ pop /Courier findfont }
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	} bind def
/isWidthsOnlyFont
	{
	dup /WidthsOnly known
		{ pop pop true }
		{
		dup /FDepVector known
			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }
			{
			dup /FDArray known
				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }
				{ pop }
			ifelse
			}
		ifelse
		}
	ifelse
	} bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 4 index def
		/$doSmartSub false def
		end
	3 index
	currentglobal false setglobal exch
	/CompatibleFonts /ProcSet resourcestatus
		{
		pop pop
		/CompatibleFonts /ProcSet findresource
			begin
			dup /CompatibleFont currentexception
			1 index /CompatibleFont true setexception
			1 index /Font resourcestatus
				{
				pop pop
				3 2 roll setglobal
				end
				exch
				dup findfont
				/CompatibleFonts /ProcSet findresource
					begin
					3 1 roll exch /CompatibleFont exch setexception
					end
				}
				{
				3 2 roll setglobal
				1 index exch /CompatibleFont exch setexception
				end
				findfont
				$SubstituteFont /$substituteFound true put
				}
			ifelse
		}
		{ exch setglobal findfont }
	ifelse
	$SubstituteFont
		begin
		$substituteFound
			{
		 false
		 (%%[Using embedded font ) print
		 5 index ?str1 cvs print
		 ( to avoid the font substitution problem noted earlier.]%%\n) print
		 }
			{
			dup /FontName known
				{
				dup /FontName get $fontname eq
				1 index /DistillerFauxFont known not and
				/currentdistillerparams where
					{ pop false 2 index isWidthsOnlyFont not and }
				if
				}
				{ false }
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		exch pop exch pop exch
		2 dict dup /Found 3 index put
		exch findfont exch
		}
		{
		exch exec
		exch dup findfont
		dup /FontType get 3 eq
	  {
		  exch ?str1 cvs
		  dup length 1 sub
		  -1 0
		{
			  exch dup 2 index get 42 eq
			{
				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop
				 exit
			  }
			  {exch pop} ifelse
		  }for
		}
		{
		 exch pop
	  } ifelse
		2 dict dup /Downloaded 6 5 roll put
		}
	ifelse
	dup /FontName 4 index put copyfont definefont pop
	} bind def
/?str2 256 string def
/?add
	{
	1 index type /integertype eq
		{ exch true 4 2 }
		{ false 3 1 }
	ifelse
	roll
	1 index findfont
	dup /Widths known
		{
		Adobe_CoolType_Data /AddWidths? true put
		gsave dup 1000 scalefont setfont
		}
	if
	/Downloaded known
		{
		exec
		exch
			{
			exch ?str2 cvs exch
			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length
			?str1 1 index 1 add 3 index putinterval
			exch length 1 add 1 index add
			?str1 2 index (*) putinterval
			?str1 0 2 index getinterval cvn findfont 
			?str1 3 index (+) putinterval
			2 dict dup /FontName ?str1 0 6 index getinterval cvn put
			dup /Downloaded Downloaded put end copyfont
			dup /FontName get exch definefont pop pop pop
			}
			{
			pop
			}
		ifelse
		}
		{
		pop
		exch
			{
			findfont
			dup /Found get
			dup length exch ?str1 cvs pop
			?str1 1 index (+) putinterval
			?str1 1 index 1 add 4 index ?str2 cvs putinterval
			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn
			1 dict exch 1 index exch /FontName exch put copyfont
			dup /FontName get exch definefont pop
			}
			{
			pop
			}
		ifelse
		}
	ifelse
	Adobe_CoolType_Data /AddWidths? get
		{ grestore Adobe_CoolType_Data /AddWidths? false put }
	if
	} bind def
/?sh
	{
	currentfont /Downloaded known { exch } if pop
	} bind def
/?chp
	{
	currentfont /Downloaded known { pop } { false chp } ifelse
	} bind def
/?mv 
	{
	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse
	} bind def
setpacking
userdict /$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{ get }
			{ pop pop { pop /Courier } bind }
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams /CannotEmbedFontPolicy 2 copy known
			{ get /Error eq }
			{ pop pop false }
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup /WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type /stringtype eq { cvn } if def
								/FontType 3 def
								/FontMatrix [ .001 0 0 .001 0 0 ] def
								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
								/FontBBox [ 0 0 0 0 ] def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth /y exch def /x exch def
											x y setcharwidth
											$SubstituteFont /$Strategy get /$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									} bind def
								currentdict
								end
							exch setglobal
							} bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup /WMode known
										{ dup /WMode get }
										{ 0 }
									ifelse
									/$WMode exch def
									$fontname exch
									dup /FontName known
										{
										dup /FontName get
										dup type /stringtype eq { cvn } if
										}
										{ /unnamedfont }
									ifelse
									exch
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
									1 index /FontName get known
										{
										pop
										Adobe_CoolType_Data /InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{ $deepcopyfont }
									ifelse
									exch 1 index exch /FontBasedOn exch put
									dup /FontName $fontname dup type /stringtype eq { cvn } if put
									definefont
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
										begin
										dup /FontBasedOn get 1 index def
										end
									} bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{ /y 1000 def }
										{ /x -1000 def 500 120 translate }
									ifelse
									Level2?
										{
										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]
										setcolorspace
										}
										{ 0 setgray }
									ifelse
									10 setlinewidth
									x .8 mul
									[ 7 3 ]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{ .2 setcolor }
											{ .8 setgray }
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									} bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict /FontName known
											{
											FontName
											dup type /stringtype eq { cvn } if
											}
											{ /unnamedfont }
										ifelse
										def
										/FontName $fontname dup type /stringtype eq { cvn } if def
										/currentdistillerparams where
											{ pop }
											{
											/FontInfo currentdict /FontInfo known
												{ FontInfo null copyfont }
												{ 2 dict }
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									} bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont {} bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type /stringtype eq { cvn } if
						dup /$fontname exch def
						$sname null eq
							{ $str cvs dup length $slen sub $slen getinterval }
							{ pop $sname }
						ifelse
						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont /$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{ /$match exch def exit }
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont /$dstack get
								{
								exch
									{
									1 index eq
										{ pop false }
										{ true }
									ifelse
									}
									{ begin false }
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{ $match (fonts/) anchorsearch pop pop cvn }
							{ /Courier }
						ifelse
						} bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1  [ /Ryumin-Light /HeiseiMin-W3
										  /GothicBBB-Medium /HeiseiKakuGo-W5
										  /HeiseiMaruGo-W4 /Jun101-Light ] def
							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def
							/GB1	  [ /STSong-Light /STHeiti-Regular ] def
							/CNS1	 [ /MKai-Medium /MHei-Medium ] def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup /FontType get 0 eq
							{
							1 dict dup /FontName /copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup /FontName /copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{ $Strategies /$Type3Underprint get exec }
						ifelse
						} bind def
					/$buildfontname
						{
						dup /CIDFont findresource /CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index (-) putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy (-) putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }
							{ pop pop pop pop pop }
						ifelse
						length
						$str 1 index (-) putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						} bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{ get }
								{ pop pop [] }
							ifelse
							}
							{ pop pop [] }
						ifelse
						false exch
							{
							dup /CIDFont resourcestatus
								{
								pop pop
								save
								1 index /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get }
									{ false }
								ifelse
								exch pop
								exch restore
									{ pop }
									{ exch pop true exit }
								ifelse
								}
								{ pop }
							ifelse
							}
						forall
							{ $str cvs $buildfontname }
							{
							false (*)
								{
								save exch
								dup /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get not }
									{ true }
								ifelse
								exch /CIDSystemInfo get
								dup /Registry get Registry eq
								exch /Ordering get Ordering eq and and
									{ exch restore exch pop true exit }
									{ pop restore }
								ifelse
								}
							$str /CIDFont resourceforall
								{ $buildfontname }
								{ $fontname $findfontByEnum }
							ifelse
							}
						ifelse
						} bind def
					end
				end
				currentdict /$error known currentdict /languagelevel known and dup
					{ pop $error /SubstituteFont known }
				if
				dup
					{ $error }
					{ Adobe_CoolType_Core }
				ifelse
				begin
					{
					/SubstituteFont
					/CMap /Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{ dup $str cvs dup length $slen sub $slen getinterval cvn }
									{ $sname }
								ifelse
								Adobe_CoolType_Data /InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{ exch pop true exit }
												{ pop }
											ifelse
											}
											{
											FontDirectory 1 index known
												{ exch pop true exit }
												{
												GlobalFontDirectory 1 index known
													{ exch pop true exit }
													{ pop }
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{ pop pop false }
								ifelse
									{
									exch pop exch pop
									}
									{
									dup /CMap resourcestatus
										{
										pop pop
										dup /$cmapname exch def
										/CMap findresource /CIDSystemInfo get { def } forall
										$findfontByROS
										}
										{
										128 string cvs
										dup (-) search
											{
											3 1 roll search
												{
												3 1 roll pop
													{ dup cvi }
												stopped
													{ pop pop pop pop pop $findfontByEnum }
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup /CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup /$cmapname exch def
															/CMap findresource /CIDSystemInfo get { def } forall
															$findfontByROS
															true exit
															}
															{ pop }
														ifelse
														}
													for
													dup type /booleantype eq
														{ pop }
														{ pop pop pop $findfontByEnum }
													ifelse
													}
												ifelse
												}
												{ pop pop pop $findfontByEnum }
											ifelse
											}
											{ pop pop $findfontByEnum }
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{ //SubstituteFont exec }
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{ $findfontByEnum }
								{ //SubstituteFont exec }
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core /scfindfont /systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup /FontName known
								{ dup /FontName get dup 3 index ne }
								{ /noname true }
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def /$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{ 1 index /FID eq { pop pop } { def } ifelse }
										forall
										currentdict
										end
									definefont
									dup /FontName known { dup /FontName get } { null } ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using ) print
										dup /FontName known
											{ dup /FontName get } { (unspecified font) }
										ifelse
										$str cvs print (.\n) print
										}
									if
									}
									{ exch pop }
								ifelse
								}
								{ exch pop }
							ifelse
							end
						} bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core /findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type /stringtype ne { $str cvs } if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{ dup $inVMIndex $AddInVMFont }
						if
						$doSmartSub
							{
							currentdict /$Strategy known
								{ $Strategy /$BuildFont get exec }
							if
							}
						if
						}
					if
					end
				} bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch /FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data /InVMFontsByCMap get exch
		$DictAdd
		}
		{ pop pop pop }
	ifelse
	} bind def
/$DictAdd
	{
	2 copy known not
		{ 2 copy 4 index length dict put }
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get { forall } def
				2 copy currentdict put
				end
			}
			{ pop }
		ifelse
		}
	if
	get
		begin
			{ def }
		forall
		end
	} bind def
end
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0
%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.
%%Version: 1.21 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 27 add dict copy }
	{ 27 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
				mark
				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put
					 {
					 ((Hex) 57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
					 }
				stopped
					 {
					 cleartomark
					 Adobe_CoolType_Utility /@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						  {
						  2 copy get 3 index eq
								{ 1 index length exch sub 1 sub { end } repeat exit }
								{ pop }
						  ifelse
						  }
					 for
					 pop pop
					 Adobe_CoolType_Utility /@eexecStartData get eexec
					 }
					 { cleartomark }
				ifelse
			} }
			{ {
				Adobe_CoolType_Utility /@eexecStartData get eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 75 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/devnimg /devn_imageormask ldf
	/idximg /indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/AGMIMG_flushfilters
{
	dup type /arraytype ne
		{1 array astore}if
	aload length
		{
		dup type /filetype eq
			{
			dup status 1 index currentfile ne and
				{dup flushfile closefile}
				{pop}
			ifelse
			}{pop}ifelse
		} repeat
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask {
					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint {
		0 get dup type /nametype eq {
			dup /DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			} forall
			not
		} ifelse
	}{
		pop false
	}ifelse
}def
/process_mask_L3
{
	dup begin
	/ImageType 1 def
	end
	4 dict begin
		/DataDict exch def
		/ImageType 3 def
		/InterleaveType 3 def
		/MaskDict 9 dict begin
			/ImageType 1 def
			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def
			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def
			/ImageMatrix [Width 0 0 Height neg 0 Height] def
			/NComponents 1 def
			/BitsPerComponent 1 def
			/Decode [0 1] def
			/DataSource AGMIMG_maskSource def
		currentdict end def
	currentdict end
}def
/use_mask
{
	dup type /dicttype eq
	{
		dup /Mask known	{
			dup /Mask get {
				level3
				{true}
				{
					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch
					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse
					3 -1 roll and
				} ifelse
			}
			{false} ifelse
		}
		{false} ifelse
	}
	{false} ifelse
}def
/make_line_source
{
	begin
	MultipleDataSources {
		[
		Decode length 2 div cvi {Width string} repeat
		]
	}{
		Width Decode length 2 div mul cvi string
	}ifelse
	end
}def
/datasource_to_str
{
	exch dup type
	dup /filetype eq {
		pop exch readstring
	}{
		/arraytype eq {
			exec exch copy
		}{
			pop
		}ifelse
	}ifelse
	pop
}def
/masked_image_simulation
{
	3 dict begin
	dup make_line_source /line_source xdf
	/mask_source AGMIMG_maskSource /LZWDecode filter def
	dup /Width get 8 div ceiling cvi string /mask_str xdf
	begin
	gsave
	0 1 translate 1 -1 Height div scale
	1 1 Height {
		pop
		gsave
		MultipleDataSources {
			0 1 DataSource length 1 sub {
				dup DataSource exch get
				exch line_source exch get
				datasource_to_str
			} for
		}{
			DataSource line_source datasource_to_str
		} ifelse
		<<
			/PatternType 1
			/PaintProc [
				/pop cvx
				<<
					/ImageType 1
					/Width Width
					/Height 1
					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix
					/MultipleDataSources MultipleDataSources
					/DataSource line_source
					/BitsPerComponent BitsPerComponent
					/Decode Decode
				>>
				/image cvx
			] cvx
			/BBox [0 0 Width 1]
			/XStep Width
			/YStep 1
			/PaintType 1
			/TilingType 2
		>>
		matrix makepattern set_pattern
		<<
			/ImageType 1
			/Width Width
			/Height 1
			/ImageMatrix Width 1 matrix scale
			/MultipleDataSources false
			/DataSource mask_source mask_str readstring pop
			/BitsPerComponent 1
			/Decode [0 1]
		>>
		imagemask
		grestore
		0 1 translate
	} for
	grestore
	end
	end
}def
/imageormask
{
	begin
		SkipImageProc {
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq DeviceN_PS2 not and {
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					use_mask {
						level3 {process_mask_L3 image}{masked_image_simulation}ifelse
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not {
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file {
									Names {
										dup (None) ne {
											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq {true setoverprint} if
											/names_index names_index 1 add def
										}{
											pop
										} ifelse
									} forall
									close_image_file
								} if
								grestore
								end
							}{
								Operator /imagemask eq {
									imagemask
								}{
									image
								} ifelse
							} ifelse
						}{
							Operator /imagemask eq {
								imagemask
							}{
								image
							} ifelse
						} ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					/Adobe_AGM_OnHost_Seps where {
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource [
											DataSource 0 get /exec cvx
											DataSource 1 get /exec cvx
											DataSource 2 get /exec cvx
											DataSource 3 get /exec cvx
											/AGMCORE_get_ink_data cvx
										] cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0 () /SubFileDecode filter def
									}ifelse
									/Decode [ Decode 0 get Decode 1 get ] def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator /image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
  			 							1 AGMCORE_&setgray
  			 							currentdict imageormask_sys
  			 						}{
  			 							currentdict ignoreimagedata
  			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								use_mask {
									level3 {process_mask_L3 image}{masked_image_simulation}ifelse
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator /imagemask eq{
 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									[ /Separation Name [/DeviceGray]
	 									{ 
	 										sep_colorspace_proc AGMCORE_get_ink_data
											1 exch sub
	 									} bind
										] AGMCORE_&setcolorspace
										/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
	end
}def
/decode_image_sample
{
	4 1 roll exch dup 5 1 roll
	sub 2 4 -1 roll exp 1 sub div mul add
} bdf
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
} bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub {
			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx
			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx
		} for
	] cvx bind
	end
} bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0 () /SubFileDecode filter
				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0 () /SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx
			}for
		/convProc load /exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2 /add cvx /index cvx
			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx
			}for
	]bind cvx 0 () /SubFileDecode filter
	end
} bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs [ 3 -1 roll begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt {1 add 2 div cvi}{exit}ifelse
			} loop
			string
		} repeat
		end ] def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_producing_seps not {
			level3 not {
				Operator /imagemask ne {
					/DataSource [ [
						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				} if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process {
					CSA get_csa_by_name 0 get /DeviceCMYK eq {
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
							devn_alt_datasource
						filter_cmyk 0 () /SubFileDecode filter def
						/MultipleDataSources false def
						/Decode [1 0] def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate {
							/DataSource
								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				 			currentdict imageormask_sys
				 		}
						{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						} ifelse
 					} ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
	 					Operator/imagemask ne{
	 						MultipleDataSources {
		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						} ifelse
							invert_image_samples
	 					} if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {
					/CSA get get_csa_by_name
				}{
					/Names get
				} ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN {
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					} ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator /imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN {
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget begin
					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {
						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]
						setcolorspace
					} if
					end
				} ifelse
				imageormask
				Indexed_DeviceN {
					end
				} if
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not {
			currentcolorspace 
			dup 1 /DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		} if
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask {
				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
  /OPIimage
  {
  	dup type /dicttype ne{
  		10 dict begin
  			/DataSource xdf
  			/ImageMatrix xdf
  			/BitsPerComponent xdf
  			/Height xdf
  			/Width xdf
  			/ImageType 1 def
  			/Decode [0 1 def]
  			currentdict
  		end
  	}if
  	dup begin
  		/NComponents 1 cdndf
  		/MultipleDataSources false cdndf
  		/SkipImageProc {false} cdndf
  		/HostSepColorImage false cdndf
  		/Decode [
  				0 
  				currentcolorspace 0 get /Indexed eq{
  					2 BitsPerComponent exp 1 sub
  				}{
  					1
  				}ifelse
  		] cdndf
  		/Operator /image cdndf
  	end
  	/sep_colorspace_dict AGMCORE_gget null eq{
  		imageormask
  	}{
  		gsave
  		dup begin invert_image_samples end
  		sep_imageormask
  		grestore
  	}ifelse
  }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter /WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0 (%EndMask) /SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not {exit} if
	}loop
	WriteFilter closefile
	end
}def
/cachemask_level3
{
	currentfile
	<<
		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]
		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]
		/Intent 1
	>>
	/ReusableStreamDecode filter
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat
	}{
	}ifelse
	end
} def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2006-07-25T14:43:09+02:00</xap:CreateDate>
         <xap:ModifyDate>2006-07-25T14:43:09+02:00</xap:ModifyDate>
         <xap:MetadataDate>2006-07-25T14:43:09+02:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>124</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAfAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AINf82eaY9d1GOPWb5ES6&#xA;mVEW5mAAEjAAANmpjyfcNJ2fpzhgTjh9I/hHd7kB/i/zZ/1e7/8A6Spv+asLkfydpv8AU4f6WP6n&#xA;f4v82f8AV7v/APpKm/5qxX+TtN/qcP8ASx/U7/F/mz/q93//AElTf81Yr/J2m/1OH+lj+p3+L/Nn&#xA;/V7v/wDpKm/5qxX+TtN/qcP9LH9Tv8X+bP8Aq93/AP0lTf8ANWK/ydpv9Th/pY/qd/i/zZ/1e7//&#xA;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&#xA;8PX3wq//2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:717DBF20DB1BDB1197CCF8D7DA11A9CD</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:727DBF20DB1BDB1197CCF8D7DA11A9CD</xapMM:InstanceID>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_AGM_Core/capture_currentpagedevice get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -75.8062 translate
[1 0 0 1 0 0 ]  concat
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 75.8062 li
156.817 75.8062 li
156.817 0 li
cp
clp
[1 0 0 1 0 0 ] concat
gsave % PSGState
.134277 75.3452 mo
156.514 75.3452 li
156.514 .36084 li
.134277 .36084 li
.134277 75.3452 li
cp
clp
61.3115 .36377 mo
61.3115 .36377 55.5337 10.4497 55.3159 19.936 cv
60.6577 19.936 li
60.6577 24.5142 li
55.0967 24.5142 li
55.0967 24.5142 54.6606 34.0015 61.3115 44.5757 cv
55.9141 44.5757 li
55.9141 44.5757 42.8311 26.5327 55.9141 .36377 cv
61.3115 .36377 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
f
50.772 44.562 mo
50.772 44.562 37.688 26.5327 50.772 .36377 cv
.45459 .36377 li
.45459 44.562 li
50.772 44.562 li
cp
0 1 1 0 cmyk
f
81.5391 44.5835 mo
86.6289 44.5835 li
86.6289 24.5239 li
92.0605 24.5239 li
92.0605 19.9438 li
86.7148 19.9438 li
86.9336 10.4585 92.7129 .372559 92.7129 .372559 cv
87.3184 .372559 li
83.168 8.66895 81.6504 16.1499 81.5137 22.498 cv
81.5391 44.5835 li
cp
0 0 0 1 cmyk
f
100.102 24.5239 mo
100.102 24.5239 99.6621 34.0093 106.314 44.5854 cv
100.916 44.5854 li
100.916 44.5854 94.8135 36.1694 95.1152 22.4961 cv
95.1152 .36377 li
100.074 .36377 li
100.102 24.5239 li
cp
f
111.502 44.5854 mo
104.852 34.0093 105.287 24.5239 105.287 24.5239 cv
105.26 .36377 li
156.398 .36377 li
156.357 44.5815 li
111.502 44.5854 li
cp
0 1 1 0 cmyk
f
69.6616 44.5835 mo
69.6616 .36377 li
64.6465 .36377 li
64.6465 44.5835 li
69.6616 44.5835 li
cp
0 0 0 1 cmyk
f
76.4219 .36377 mo
71.0801 .36377 li
71.0801 .36377 79.4766 11.3765 71.0801 22.498 cv
76.4219 22.498 li
76.4219 22.498 84.332 12.043 76.4219 .36377 cv
cp
f
1.16064 55.5776 mo
1.16064 53.7417 1.16064 53.4097 1.13623 53.0337 cv
1.11279 52.6343 1.01855 52.4448 .630371 52.3628 cv
.535156 52.3394 .335938 52.3257 .22998 52.3257 cv
.183105 52.3257 .135254 52.3042 .135254 52.2554 cv
.135254 52.1851 .194336 52.1597 .324219 52.1597 cv
.854004 52.1597 1.59521 52.1968 1.6543 52.1968 cv
1.73633 52.1968 4.0791 52.1968 4.35059 52.1851 cv
4.57324 52.1733 4.76221 52.1479 4.85498 52.1255 cv
4.91406 52.1138 4.96191 52.0688 5.02002 52.0688 cv
5.05566 52.0688 5.06836 52.1138 5.06836 52.1733 cv
5.06836 52.2554 5.00928 52.397 4.97363 52.728 cv
4.96191 52.8452 4.93848 53.3628 4.91406 53.5044 cv
4.90332 53.564 4.87939 53.6362 4.83203 53.6362 cv
4.76221 53.6362 4.73926 53.5757 4.73926 53.4819 cv
4.73926 53.3989 4.72656 53.1968 4.66699 53.0562 cv
4.58496 52.8687 4.46777 52.728 3.83203 52.6597 cv
3.63135 52.6343 2.34912 52.6226 2.21924 52.6226 cv
2.17236 52.6226 2.14844 52.6597 2.14844 52.7417 cv
2.14844 55.9858 li
2.14844 56.0698 2.16064 56.105 2.21924 56.105 cv
2.37207 56.105 3.81982 56.105 4.09082 56.0815 cv
4.37354 56.0581 4.53857 56.0327 4.64404 55.9175 cv
4.72656 55.8257 4.77295 55.7671 4.82129 55.7671 cv
4.85498 55.7671 4.87939 55.7905 4.87939 55.8608 cv
4.87939 55.9253 4.82129 56.1284 4.78564 56.519 cv
4.76221 56.7573 4.73926 57.187 4.73926 57.269 cv
4.73926 57.3667 4.73926 57.4956 4.65625 57.4956 cv
4.59717 57.4956 4.57324 57.4487 4.57324 57.3882 cv
4.57324 57.269 4.57324 57.1519 4.52588 56.9995 cv
4.47949 56.8374 4.37354 56.6382 3.91455 56.5913 cv
3.5957 56.5542 2.43115 56.5308 2.23047 56.5308 cv
2.17236 56.5308 2.14844 56.5659 2.14844 56.6128 cv
2.14844 57.6499 li
2.14844 58.0464 2.13672 59.4136 2.14844 59.6636 cv
2.18311 60.4741 2.36084 60.6284 3.51367 60.6284 cv
3.81982 60.6284 4.33789 60.6284 4.64404 60.4976 cv
4.9502 60.3687 5.09131 60.1304 5.17383 59.6519 cv
5.19727 59.521 5.2207 59.4741 5.2793 59.4741 cv
5.3501 59.4741 5.3501 59.5679 5.3501 59.6519 cv
5.3501 59.7437 5.25635 60.5444 5.19727 60.7886 cv
5.11475 61.0972 5.02002 61.0972 4.56152 61.0972 cv
2.78418 61.0972 1.99512 61.0249 1.6543 61.0249 cv
1.59521 61.0249 .854004 61.0601 .501465 61.0601 cv
.370605 61.0601 .3125 61.0366 .3125 60.9663 cv
.3125 60.9312 .335938 60.894 .406738 60.894 cv
.512207 60.894 .653809 60.8706 .759277 60.8472 cv
.995605 60.8003 1.05371 60.5444 1.10107 60.2026 cv
1.16064 59.7104 1.16064 58.7788 1.16064 57.6499 cv
1.16064 55.5776 li
cp
4.57324 50.562 mo
4.63232 50.6694 4.57324 50.7026 4.52588 50.7026 cv
4.49121 50.7026 4.37354 50.6812 4.17285 50.7026 cv
3.5957 50.7632 2.77344 51.0317 2.38379 51.1968 cv
2.30176 51.23 2.23047 51.2554 2.20752 51.2554 cv
2.18311 51.2554 2.14844 51.23 2.14844 51.1831 cv
2.14844 51.1489 2.17236 51.1265 2.23047 51.0923 cv
2.65479 50.8003 3.75 50.1372 3.83203 50.0913 cv
4.03174 49.9722 4.10254 49.937 4.16162 49.937 cv
4.19629 49.937 4.2207 49.9604 4.27881 50.0435 cv
4.36084 50.1616 4.44336 50.3257 4.57324 50.562 cv
cp
f
8.42236 59.9546 mo
7.28076 58.9272 6.99805 57.5913 6.99805 56.4722 cv
6.99805 55.6831 7.26855 54.3042 8.31641 53.2554 cv
9.02246 52.5522 10.0942 51.9976 11.9058 51.9976 cv
12.377 51.9976 13.0361 52.0337 13.6128 52.1392 cv
14.0605 52.2202 14.4375 52.2925 14.8145 52.314 cv
14.9434 52.3257 14.9663 52.3745 14.9663 52.4448 cv
14.9663 52.5405 14.9316 52.6812 14.9082 53.104 cv
14.8848 53.4927 14.8848 54.1382 14.873 54.3159 cv
14.8604 54.4937 14.8374 54.5659 14.7666 54.5659 cv
14.6846 54.5659 14.6719 54.4819 14.6719 54.3159 cv
14.6719 53.8569 14.4834 53.3745 14.1777 53.1147 cv
13.7656 52.7651 12.8604 52.4448 11.8232 52.4448 cv
10.2588 52.4448 9.52832 52.9048 9.11719 53.3022 cv
8.25732 54.1265 8.05664 55.1753 8.05664 56.3765 cv
8.05664 58.6265 9.78809 60.687 12.3066 60.687 cv
13.1895 60.687 13.8838 60.5815 14.3545 60.0952 cv
14.6016 59.8354 14.7549 59.3198 14.79 59.1069 cv
14.8145 58.9761 14.8374 58.9272 14.9082 58.9272 cv
14.9663 58.9272 14.9902 59.0112 14.9902 59.1069 cv
14.9902 59.1909 14.8486 60.2124 14.7305 60.6167 cv
14.6611 60.8354 14.6377 60.8589 14.4248 60.9526 cv
13.9551 61.1421 13.0596 61.2261 12.3066 61.2261 cv
10.541 61.2261 9.35254 60.7886 8.42236 59.9546 cv
cp
f
16.4727 56.603 mo
16.4727 58.7202 17.8154 61.2261 21.04 61.2261 cv
23.877 61.2261 25.7373 59.0464 25.7373 56.4116 cv
25.7373 53.6714 23.7598 51.9976 21.1113 51.9976 cv
17.8633 51.9976 16.4727 54.6948 16.4727 56.603 cv
cp
17.5918 56.271 mo
17.5918 53.6948 19.0635 52.397 21.0288 52.397 cv
22.8887 52.397 24.6074 53.9175 24.6074 56.7437 cv
24.6074 60.1675 22.418 60.7788 21.3584 60.7788 cv
19.2393 60.7788 17.5918 59.0112 17.5918 56.271 cv
cp
f
29.5742 57.6733 mo
29.5742 59.4019 29.6211 60.1558 29.833 60.3687 cv
30.022 60.5562 30.3281 60.6401 31.2456 60.6401 cv
31.8696 60.6401 32.3867 60.6284 32.6694 60.2847 cv
32.8228 60.0952 32.9409 59.8003 32.9756 59.5796 cv
32.9873 59.4858 33.0107 59.4272 33.0825 59.4272 cv
33.1411 59.4272 33.1519 59.4741 33.1519 59.605 cv
33.1519 59.7319 33.0698 60.439 32.9756 60.7788 cv
32.8931 61.0503 32.8589 61.0972 32.2344 61.0972 cv
30.5391 61.0972 29.7622 61.0249 29.0791 61.0249 cv
28.9736 61.0249 28.2793 61.0601 27.9258 61.0601 cv
27.7969 61.0601 27.7378 61.0366 27.7378 60.9663 cv
27.7378 60.9312 27.7607 60.894 27.8325 60.894 cv
27.9385 60.894 28.0796 60.8706 28.1855 60.8472 cv
28.4209 60.8003 28.4785 60.5444 28.5264 60.2026 cv
28.585 59.7104 28.585 58.7788 28.585 57.6499 cv
28.585 55.5776 li
28.585 53.7417 28.585 53.4097 28.562 53.0337 cv
28.5376 52.6343 28.4438 52.4448 28.0562 52.3628 cv
27.9614 52.3394 27.7607 52.3257 27.6553 52.3257 cv
27.6084 52.3257 27.561 52.3042 27.561 52.2554 cv
27.561 52.1851 27.6201 52.1597 27.75 52.1597 cv
28.2793 52.1597 29.02 52.1968 29.0791 52.1968 cv
29.1387 52.1968 29.9976 52.1597 30.3516 52.1597 cv
30.48 52.1597 30.5391 52.1851 30.5391 52.2554 cv
30.5391 52.3042 30.4927 52.3257 30.4453 52.3257 cv
30.3623 52.3257 30.1973 52.3394 30.0566 52.3628 cv
29.7148 52.4214 29.6211 52.6226 29.5977 53.0337 cv
29.5742 53.4097 29.5742 53.7417 29.5742 55.5776 cv
29.5742 57.6733 li
cp
f
35.5532 55.5776 mo
35.5532 53.7417 35.5532 53.4097 35.5298 53.0337 cv
35.5063 52.6343 35.4121 52.4448 35.0239 52.3628 cv
34.9297 52.3394 34.7305 52.3257 34.6235 52.3257 cv
34.5762 52.3257 34.5298 52.3042 34.5298 52.2554 cv
34.5298 52.1851 34.5884 52.1597 34.7178 52.1597 cv
35.2476 52.1597 35.9888 52.1968 36.0474 52.1968 cv
36.1299 52.1968 38.4731 52.1968 38.7437 52.1851 cv
38.9673 52.1733 39.1558 52.1479 39.2495 52.1255 cv
39.3086 52.1138 39.355 52.0688 39.4146 52.0688 cv
39.4497 52.0688 39.4604 52.1138 39.4604 52.1733 cv
39.4604 52.2554 39.4028 52.397 39.3677 52.728 cv
39.355 52.8452 39.332 53.3628 39.3086 53.5044 cv
39.2959 53.564 39.2725 53.6362 39.2261 53.6362 cv
39.1558 53.6362 39.1323 53.5757 39.1323 53.4819 cv
39.1323 53.3989 39.1206 53.1968 39.0615 53.0562 cv
38.978 52.8687 38.8613 52.728 38.2251 52.6597 cv
38.0249 52.6343 36.7427 52.6226 36.6133 52.6226 cv
36.5659 52.6226 36.5415 52.6597 36.5415 52.7417 cv
36.5415 55.9858 li
36.5415 56.0698 36.5542 56.105 36.6133 56.105 cv
36.7651 56.105 38.2144 56.105 38.4839 56.0815 cv
38.7671 56.0581 38.9321 56.0327 39.0371 55.9175 cv
39.1206 55.8257 39.1675 55.7671 39.2134 55.7671 cv
39.2495 55.7671 39.2725 55.7905 39.2725 55.8608 cv
39.2725 55.9253 39.2134 56.1284 39.1802 56.519 cv
39.1558 56.7573 39.1323 57.187 39.1323 57.269 cv
39.1323 57.3667 39.1323 57.4956 39.0498 57.4956 cv
38.9907 57.4956 38.9673 57.4487 38.9673 57.3882 cv
38.9673 57.269 38.9673 57.1519 38.9204 56.9995 cv
38.8726 56.8374 38.7671 56.6382 38.3076 56.5913 cv
37.9897 56.5542 36.8247 56.5308 36.625 56.5308 cv
36.5659 56.5308 36.5415 56.5659 36.5415 56.6128 cv
36.5415 57.6499 li
36.5415 58.0464 36.5308 59.4136 36.5415 59.6636 cv
36.5776 60.4741 36.7544 60.6284 37.9077 60.6284 cv
38.2144 60.6284 38.731 60.6284 39.0371 60.4976 cv
39.3447 60.3687 39.4849 60.1304 39.5674 59.6519 cv
39.5918 59.521 39.6147 59.4741 39.6738 59.4741 cv
39.7437 59.4741 39.7437 59.5679 39.7437 59.6519 cv
39.7437 59.7437 39.6499 60.5444 39.5918 60.7886 cv
39.5093 61.0972 39.4146 61.0972 38.9546 61.0972 cv
37.1782 61.0972 36.3896 61.0249 36.0474 61.0249 cv
35.9888 61.0249 35.2476 61.0601 34.895 61.0601 cv
34.7651 61.0601 34.7061 61.0366 34.7061 60.9663 cv
34.7061 60.9312 34.7305 60.894 34.8003 60.894 cv
34.9063 60.894 35.0483 60.8706 35.1533 60.8472 cv
35.3877 60.8003 35.4473 60.5444 35.4946 60.2026 cv
35.5532 59.7104 35.5532 58.7788 35.5532 57.6499 cv
35.5532 55.5776 li
cp
f
46.5591 55.5776 mo
46.5591 53.7417 46.5591 53.4097 46.5356 53.0337 cv
46.5122 52.6343 46.4175 52.4448 46.0288 52.3628 cv
45.936 52.3394 45.7354 52.3257 45.6299 52.3257 cv
45.5825 52.3257 45.5347 52.3042 45.5347 52.2554 cv
45.5347 52.1851 45.5942 52.1597 45.7231 52.1597 cv
46.2529 52.1597 46.959 52.1968 47.0537 52.1968 cv
47.3115 52.1968 47.9946 52.1597 48.5361 52.1597 cv
50.0088 52.1597 50.5376 52.6597 50.7256 52.8335 cv
50.9854 53.0796 51.3145 53.6108 51.3145 54.2319 cv
51.3145 55.9058 50.0908 57.0347 48.4189 57.0347 cv
48.3599 57.0347 48.231 57.0347 48.1719 57.021 cv
48.1128 57.021 48.042 56.9995 48.042 56.939 cv
48.042 56.8491 48.1128 56.8374 48.3599 56.8374 cv
49.501 56.8374 50.3965 55.9976 50.3965 54.9155 cv
50.3965 54.5288 50.3613 53.7417 49.7373 53.104 cv
49.1128 52.4692 48.3955 52.5161 48.1245 52.5161 cv
47.9248 52.5161 47.7241 52.5405 47.6187 52.5874 cv
47.5479 52.6108 47.5239 52.6929 47.5239 52.8101 cv
47.5239 57.6499 li
47.5239 58.7788 47.5239 59.7104 47.583 60.2026 cv
47.6187 60.5444 47.6885 60.8003 48.042 60.8472 cv
48.207 60.8706 48.4653 60.894 48.5723 60.894 cv
48.6426 60.894 48.666 60.9312 48.666 60.9663 cv
48.666 61.0249 48.6069 61.0601 48.478 61.0601 cv
47.8301 61.0601 47.0889 61.0249 47.0298 61.0249 cv
46.9946 61.0249 46.2529 61.0601 45.9004 61.0601 cv
45.7705 61.0601 45.7114 61.0366 45.7114 60.9663 cv
45.7114 60.9312 45.7354 60.894 45.8052 60.894 cv
45.9116 60.894 46.0522 60.8706 46.1587 60.8472 cv
46.394 60.8003 46.4531 60.5444 46.5 60.2026 cv
46.5591 59.7104 46.5591 58.7788 46.5591 57.6499 cv
46.5591 55.5776 li
cp
f
52.7734 56.603 mo
52.7734 58.7202 54.1152 61.2261 57.3403 61.2261 cv
60.1782 61.2261 62.0381 59.0464 62.0381 56.4116 cv
62.0381 53.6714 60.0596 51.9976 57.4121 51.9976 cv
54.1636 51.9976 52.7734 54.6948 52.7734 56.603 cv
cp
53.8926 56.271 mo
53.8926 53.6948 55.3643 52.397 57.3296 52.397 cv
59.1899 52.397 60.9077 53.9175 60.9077 56.7437 cv
60.9077 60.1675 58.7183 60.7788 57.6592 60.7788 cv
55.5396 60.7788 53.8926 59.0112 53.8926 56.271 cv
cp
f
65.6396 57.6733 mo
65.6396 59.4019 65.6865 60.1558 65.8975 60.3687 cv
66.0859 60.5562 66.3926 60.6401 67.3105 60.6401 cv
67.9355 60.6401 68.4521 60.6284 68.7344 60.2847 cv
68.8887 60.0952 69.0059 59.8003 69.04 59.5796 cv
69.0527 59.4858 69.0762 59.4272 69.1475 59.4272 cv
69.2046 59.4272 69.2173 59.4741 69.2173 59.605 cv
69.2173 59.7319 69.1357 60.439 69.04 60.7788 cv
68.9575 61.0503 68.9243 61.0972 68.2988 61.0972 cv
66.6045 61.0972 65.8271 61.0249 65.1445 61.0249 cv
65.0396 61.0249 64.3447 61.0601 63.9912 61.0601 cv
63.8618 61.0601 63.8032 61.0366 63.8032 60.9663 cv
63.8032 60.9312 63.8267 60.894 63.8965 60.894 cv
64.0039 60.894 64.1436 60.8706 64.251 60.8472 cv
64.4863 60.8003 64.5454 60.5444 64.5913 60.2026 cv
64.6504 59.7104 64.6504 58.7788 64.6504 57.6499 cv
64.6504 55.5776 li
64.6504 53.7417 64.6504 53.4097 64.627 53.0337 cv
64.603 52.6343 64.5098 52.4448 64.1206 52.3628 cv
64.0273 52.3394 63.8267 52.3257 63.7207 52.3257 cv
63.6738 52.3257 63.6255 52.3042 63.6255 52.2554 cv
63.6255 52.1851 63.6846 52.1597 63.8149 52.1597 cv
64.3447 52.1597 65.0854 52.1968 65.1445 52.1968 cv
65.2041 52.1968 66.063 52.1597 66.416 52.1597 cv
66.5454 52.1597 66.6045 52.1851 66.6045 52.2554 cv
66.6045 52.3042 66.5566 52.3257 66.5107 52.3257 cv
66.4277 52.3257 66.2632 52.3394 66.1211 52.3628 cv
65.7803 52.4214 65.6865 52.6226 65.6631 53.0337 cv
65.6396 53.4097 65.6396 53.7417 65.6396 55.5776 cv
65.6396 57.6733 li
cp
f
72.6904 58.0112 mo
72.6904 57.3765 72.5732 57.1187 72.4189 56.7788 cv
72.3374 56.5913 70.7598 53.9985 70.3486 53.3872 cv
70.0527 52.9517 69.7588 52.6597 69.5469 52.5161 cv
69.3711 52.397 69.1475 52.3257 69.04 52.3257 cv
68.9814 52.3257 68.9243 52.3042 68.9243 52.2437 cv
68.9243 52.1968 68.9702 52.1597 69.0762 52.1597 cv
69.2998 52.1597 70.1831 52.1968 70.2412 52.1968 cv
70.3242 52.1968 70.7715 52.1597 71.2295 52.1597 cv
71.3608 52.1597 71.3838 52.1968 71.3838 52.2437 cv
71.3838 52.2925 71.3125 52.3042 71.2061 52.3511 cv
71.1138 52.397 71.0547 52.4692 71.0547 52.562 cv
71.0547 52.7065 71.1138 52.8452 71.2061 53.0229 cv
71.395 53.3628 73.1611 56.3999 73.3721 56.7437 cv
73.5957 56.2476 75.0908 53.6714 75.3262 53.2808 cv
75.4805 53.0337 75.5254 52.8335 75.5254 52.6812 cv
75.5254 52.5161 75.4805 52.3862 75.3379 52.3511 cv
75.2334 52.314 75.1621 52.2925 75.1621 52.2319 cv
75.1621 52.1851 75.2334 52.1597 75.3506 52.1597 cv
75.6563 52.1597 76.0322 52.1968 76.127 52.1968 cv
76.1982 52.1968 77.0449 52.1597 77.2676 52.1597 cv
77.3506 52.1597 77.4229 52.1851 77.4229 52.2319 cv
77.4229 52.2925 77.3633 52.3257 77.2676 52.3257 cv
77.1396 52.3257 76.916 52.3745 76.7266 52.4937 cv
76.4912 52.6343 76.3623 52.7769 76.1035 53.0903 cv
75.7158 53.564 74.0664 56.3296 73.8545 56.8374 cv
73.6787 57.2593 73.6787 57.6265 73.6787 58.0112 cv
73.6787 59.0249 li
73.6787 59.2124 73.6787 59.7104 73.7139 60.2026 cv
73.7383 60.5444 73.8428 60.8003 74.1973 60.8472 cv
74.3613 60.8706 74.6201 60.894 74.7266 60.894 cv
74.7959 60.894 74.8203 60.9312 74.8203 60.9663 cv
74.8203 61.0249 74.7627 61.0601 74.6318 61.0601 cv
73.9854 61.0601 73.2441 61.0249 73.1846 61.0249 cv
73.125 61.0249 72.3828 61.0601 72.0313 61.0601 cv
71.9004 61.0601 71.8428 61.0366 71.8428 60.9663 cv
71.8428 60.9312 71.8662 60.894 71.9355 60.894 cv
72.043 60.894 72.1826 60.8706 72.29 60.8472 cv
72.5254 60.8003 72.6309 60.5444 72.6543 60.2026 cv
72.6904 59.7104 72.6904 59.2124 72.6904 59.0249 cv
72.6904 58.0112 li
cp
f
81.8242 57.6499 mo
81.8242 58.7788 81.8242 59.7104 81.8809 60.2026 cv
81.916 60.5444 81.9883 60.8003 82.3418 60.8472 cv
82.5078 60.8706 82.7656 60.894 82.8691 60.894 cv
82.9414 60.894 82.9629 60.9312 82.9629 60.9663 cv
82.9629 61.0249 82.9043 61.0601 82.7783 61.0601 cv
82.1299 61.0601 81.3906 61.0249 81.332 61.0249 cv
81.2715 61.0249 80.5313 61.0601 80.1758 61.0601 cv
80.0449 61.0601 79.9863 61.0366 79.9863 60.9663 cv
79.9863 60.9312 80.0098 60.894 80.0801 60.894 cv
80.1875 60.894 80.3301 60.8706 80.4355 60.8472 cv
80.6699 60.8003 80.7305 60.5444 80.7754 60.2026 cv
80.8359 59.7104 80.8359 58.7788 80.8359 57.6499 cv
80.8359 52.6694 li
79.0918 52.6929 li
78.3633 52.7065 78.0811 52.7886 77.8936 53.0698 cv
77.7627 53.269 77.7275 53.3511 77.6924 53.4341 cv
77.6572 53.5288 77.6221 53.5522 77.5742 53.5522 cv
77.5391 53.5522 77.5146 53.5171 77.5146 53.4458 cv
77.5146 53.3276 77.751 52.314 77.7744 52.2202 cv
77.7979 52.1479 77.8457 51.9976 77.8936 51.9976 cv
77.9746 51.9976 78.0928 52.1138 78.4121 52.1392 cv
78.751 52.1733 79.1982 52.1968 79.3408 52.1968 cv
83.7549 52.1968 li
84.5078 52.1968 84.8223 52.0806 84.918 52.0806 cv
84.9785 52.0806 84.9785 52.1479 84.9785 52.2202 cv
84.9785 52.5737 84.9434 53.3872 84.9434 53.5171 cv
84.9434 53.6226 84.9082 53.6714 84.8594 53.6714 cv
84.8008 53.6714 84.7773 53.6362 84.7637 53.4702 cv
84.7529 53.3394 li
84.709 52.9878 84.4395 52.7183 83.3086 52.6929 cv
81.8242 52.6694 li
81.8242 57.6499 li
cp
f
87.4492 55.5776 mo
87.4492 53.7417 87.4492 53.4097 87.4277 53.0337 cv
87.4043 52.6343 87.3105 52.4448 86.9199 52.3628 cv
86.8262 52.3394 86.627 52.3257 86.5195 52.3257 cv
86.4727 52.3257 86.4277 52.3042 86.4277 52.2554 cv
86.4277 52.1851 86.4834 52.1597 86.6143 52.1597 cv
87.1426 52.1597 87.8848 52.1968 87.9434 52.1968 cv
88.0283 52.1968 90.3682 52.1968 90.6387 52.1851 cv
90.8623 52.1733 91.0527 52.1479 91.1484 52.1255 cv
91.207 52.1138 91.2539 52.0688 91.3125 52.0688 cv
91.3467 52.0688 91.3564 52.1138 91.3564 52.1733 cv
91.3564 52.2554 91.2988 52.397 91.2656 52.728 cv
91.2539 52.8452 91.2305 53.3628 91.207 53.5044 cv
91.1934 53.564 91.1719 53.6362 91.125 53.6362 cv
91.0527 53.6362 91.0273 53.5757 91.0273 53.4819 cv
91.0273 53.3989 91.0176 53.1968 90.957 53.0562 cv
90.876 52.8687 90.7578 52.728 90.123 52.6597 cv
89.9219 52.6343 88.6377 52.6226 88.5088 52.6226 cv
88.4619 52.6226 88.4375 52.6597 88.4375 52.7417 cv
88.4375 55.9858 li
88.4375 56.0698 88.4502 56.105 88.5088 56.105 cv
88.6602 56.105 90.1113 56.105 90.3818 56.0815 cv
90.6621 56.0581 90.8281 56.0327 90.9346 55.9175 cv
91.0176 55.8257 91.0645 55.7671 91.1133 55.7671 cv
91.1484 55.7671 91.1719 55.7905 91.1719 55.8608 cv
91.1719 55.9253 91.1133 56.1284 91.0762 56.519 cv
91.0527 56.7573 91.0273 57.187 91.0273 57.269 cv
91.0273 57.3667 91.0273 57.4956 90.9473 57.4956 cv
90.8867 57.4956 90.8623 57.4487 90.8623 57.3882 cv
90.8623 57.269 90.8623 57.1519 90.8184 56.9995 cv
90.7695 56.8374 90.6621 56.6382 90.2051 56.5913 cv
89.8877 56.5542 88.7207 56.5308 88.5225 56.5308 cv
88.4619 56.5308 88.4375 56.5659 88.4375 56.6128 cv
88.4375 57.6499 li
88.4375 58.0464 88.4277 59.4136 88.4375 59.6636 cv
88.4736 60.4741 88.6494 60.6284 89.8027 60.6284 cv
90.1113 60.6284 90.625 60.6284 90.9346 60.4976 cv
91.2422 60.3687 91.3828 60.1304 91.4639 59.6519 cv
91.4883 59.521 91.5127 59.4741 91.5693 59.4741 cv
91.6387 59.4741 91.6387 59.5679 91.6387 59.6519 cv
91.6387 59.7437 91.5449 60.5444 91.4883 60.7886 cv
91.4053 61.0972 91.3125 61.0972 90.8516 61.0972 cv
89.0752 61.0972 88.2871 61.0249 87.9434 61.0249 cv
87.8848 61.0249 87.1426 61.0601 86.7891 61.0601 cv
86.6631 61.0601 86.6045 61.0366 86.6045 60.9663 cv
86.6045 60.9312 86.627 60.894 86.6963 60.894 cv
86.8008 60.894 86.9434 60.8706 87.0498 60.8472 cv
87.2871 60.8003 87.3457 60.5444 87.3926 60.2026 cv
87.4492 59.7104 87.4492 58.7788 87.4492 57.6499 cv
87.4492 55.5776 li
cp
f
94.7109 59.9546 mo
93.5684 58.9272 93.2871 57.5913 93.2871 56.4722 cv
93.2871 55.6831 93.5566 54.3042 94.6035 53.2554 cv
95.3125 52.5522 96.3828 51.9976 98.1992 51.9976 cv
98.668 51.9976 99.3242 52.0337 99.9063 52.1392 cv
100.348 52.2202 100.729 52.2925 101.105 52.314 cv
101.23 52.3257 101.256 52.3745 101.256 52.4448 cv
101.256 52.5405 101.219 52.6812 101.199 53.104 cv
101.172 53.4927 101.172 54.1382 101.162 54.3159 cv
101.152 54.4937 101.129 54.5659 101.061 54.5659 cv
100.977 54.5659 100.965 54.4819 100.965 54.3159 cv
100.965 53.8569 100.775 53.3745 100.469 53.1147 cv
100.059 52.7651 99.1523 52.4448 98.1172 52.4448 cv
96.5488 52.4448 95.8203 52.9048 95.4053 53.3022 cv
94.5449 54.1265 94.3477 55.1753 94.3477 56.3765 cv
94.3477 58.6265 96.0801 60.687 98.5957 60.687 cv
99.4785 60.687 100.174 60.5815 100.643 60.0952 cv
100.895 59.8354 101.047 59.3198 101.082 59.1069 cv
101.105 58.9761 101.129 58.9272 101.199 58.9272 cv
101.256 58.9272 101.277 59.0112 101.277 59.1069 cv
101.277 59.1909 101.141 60.2124 101.023 60.6167 cv
100.953 60.8354 100.93 60.8589 100.715 60.9526 cv
100.242 61.1421 99.3477 61.2261 98.5957 61.2261 cv
96.8301 61.2261 95.6406 60.7886 94.7109 59.9546 cv
cp
f
111.215 57.6499 mo
111.215 58.7788 111.215 59.7104 111.273 60.2026 cv
111.309 60.5444 111.381 60.8003 111.734 60.8472 cv
111.896 60.8706 112.154 60.894 112.262 60.894 cv
112.334 60.894 112.355 60.9312 112.355 60.9663 cv
112.355 61.0249 112.297 61.0601 112.168 61.0601 cv
111.521 61.0601 110.781 61.0249 110.723 61.0249 cv
110.664 61.0249 109.92 61.0601 109.566 61.0601 cv
109.438 61.0601 109.379 61.0366 109.379 60.9663 cv
109.379 60.9312 109.4 60.894 109.473 60.894 cv
109.58 60.894 109.723 60.8706 109.828 60.8472 cv
110.061 60.8003 110.119 60.5444 110.166 60.2026 cv
110.227 59.7104 110.227 58.7788 110.227 57.6499 cv
110.227 56.4116 li
110.227 56.3647 110.189 56.3413 110.154 56.3413 cv
105.162 56.3413 li
105.127 56.3413 105.094 56.353 105.094 56.4116 cv
105.094 57.6499 li
105.094 58.7788 105.094 59.7104 105.15 60.2026 cv
105.186 60.5444 105.258 60.8003 105.613 60.8472 cv
105.779 60.8706 106.035 60.894 106.139 60.894 cv
106.211 60.894 106.236 60.9312 106.236 60.9663 cv
106.236 61.0249 106.176 61.0601 106.047 61.0601 cv
105.4 61.0601 104.658 61.0249 104.6 61.0249 cv
104.541 61.0249 103.801 61.0601 103.447 61.0601 cv
103.316 61.0601 103.256 61.0366 103.256 60.9663 cv
103.256 60.9312 103.281 60.894 103.352 60.894 cv
103.457 60.894 103.598 60.8706 103.705 60.8472 cv
103.943 60.8003 104.002 60.5444 104.049 60.2026 cv
104.105 59.7104 104.105 58.7788 104.105 57.6499 cv
104.105 55.5776 li
104.105 53.7417 104.105 53.4097 104.082 53.0337 cv
104.059 52.6343 103.967 52.4448 103.576 52.3628 cv
103.482 52.3394 103.281 52.3257 103.174 52.3257 cv
103.127 52.3257 103.082 52.3042 103.082 52.2554 cv
103.082 52.1851 103.139 52.1597 103.268 52.1597 cv
103.801 52.1597 104.541 52.1968 104.6 52.1968 cv
104.658 52.1968 105.4 52.1597 105.754 52.1597 cv
105.887 52.1597 105.943 52.1851 105.943 52.2554 cv
105.943 52.3042 105.896 52.3257 105.85 52.3257 cv
105.768 52.3257 105.695 52.3394 105.553 52.3628 cv
105.234 52.4214 105.141 52.6226 105.115 53.0337 cv
105.094 53.4097 105.094 53.7417 105.094 55.5776 cv
105.094 55.8257 li
105.094 55.8823 105.127 55.8921 105.162 55.8921 cv
110.154 55.8921 li
110.189 55.8921 110.227 55.8823 110.227 55.8257 cv
110.227 55.5776 li
110.227 53.7417 110.227 53.4097 110.201 53.0337 cv
110.178 52.6343 110.084 52.4448 109.699 52.3628 cv
109.604 52.3394 109.4 52.3257 109.297 52.3257 cv
109.248 52.3257 109.199 52.3042 109.199 52.2554 cv
109.199 52.1851 109.26 52.1597 109.391 52.1597 cv
109.92 52.1597 110.664 52.1968 110.723 52.1968 cv
110.781 52.1968 111.521 52.1597 111.873 52.1597 cv
112.002 52.1597 112.061 52.1851 112.061 52.2554 cv
112.061 52.3042 112.014 52.3257 111.967 52.3257 cv
111.885 52.3257 111.816 52.3394 111.678 52.3628 cv
111.355 52.4214 111.26 52.6226 111.238 53.0337 cv
111.215 53.4097 111.215 53.7417 111.215 55.5776 cv
111.215 57.6499 li
cp
f
115.725 59.4604 mo
115.748 60.4272 115.861 60.7319 116.182 60.8237 cv
116.406 60.8843 116.666 60.894 116.77 60.894 cv
116.828 60.894 116.861 60.9175 116.861 60.9663 cv
116.861 61.0366 116.793 61.0601 116.654 61.0601 cv
115.98 61.0601 115.514 61.0249 115.406 61.0249 cv
115.299 61.0249 114.805 61.0601 114.275 61.0601 cv
114.156 61.0601 114.086 61.0503 114.086 60.9663 cv
114.086 60.9175 114.121 60.894 114.18 60.894 cv
114.275 60.894 114.488 60.8843 114.666 60.8237 cv
114.957 60.7437 115.016 60.4038 115.016 59.3315 cv
115.029 52.5874 li
115.029 52.1255 115.064 51.9976 115.158 51.9976 cv
115.252 51.9976 115.455 52.2554 115.572 52.3745 cv
115.748 52.5737 117.502 54.4702 119.314 56.4116 cv
120.48 57.6616 121.762 59.0933 122.139 59.4858 cv
122.008 53.5044 li
121.998 52.7417 121.912 52.48 121.551 52.3862 cv
121.34 52.3394 121.068 52.3257 120.973 52.3257 cv
120.891 52.3257 120.877 52.2925 120.877 52.2437 cv
120.877 52.1733 120.973 52.1597 121.113 52.1597 cv
121.643 52.1597 122.209 52.1968 122.34 52.1968 cv
122.471 52.1968 122.857 52.1597 123.34 52.1597 cv
123.469 52.1597 123.551 52.1733 123.551 52.2437 cv
123.551 52.2925 123.504 52.3257 123.424 52.3257 cv
123.363 52.3257 123.281 52.3257 123.139 52.3628 cv
122.75 52.4448 122.701 52.7065 122.701 53.4097 cv
122.678 60.3081 li
122.678 61.0854 122.654 61.1421 122.572 61.1421 cv
122.48 61.1421 122.342 61.0132 121.713 60.3901 cv
121.586 60.271 119.889 58.5444 118.645 57.2007 cv
117.277 55.7319 115.945 54.2456 115.572 53.8218 cv
115.725 59.4604 li
cp
f
127.539 57.6499 mo
127.539 58.7788 127.539 59.7104 127.6 60.2026 cv
127.635 60.5444 127.705 60.8003 128.061 60.8472 cv
128.225 60.8706 128.482 60.894 128.588 60.894 cv
128.658 60.894 128.682 60.9312 128.682 60.9663 cv
128.682 61.0249 128.623 61.0601 128.494 61.0601 cv
127.846 61.0601 127.105 61.0249 127.047 61.0249 cv
126.988 61.0249 126.248 61.0601 125.893 61.0601 cv
125.762 61.0601 125.703 61.0366 125.703 60.9663 cv
125.703 60.9312 125.727 60.894 125.797 60.894 cv
125.904 60.894 126.047 60.8706 126.152 60.8472 cv
126.387 60.8003 126.447 60.5444 126.492 60.2026 cv
126.549 59.7104 126.549 58.7788 126.549 57.6499 cv
126.549 55.5776 li
126.549 53.7417 126.549 53.4097 126.527 53.0337 cv
126.506 52.6343 126.387 52.4331 126.129 52.3745 cv
126 52.3394 125.844 52.3257 125.762 52.3257 cv
125.715 52.3257 125.668 52.3042 125.668 52.2554 cv
125.668 52.1851 125.727 52.1597 125.855 52.1597 cv
126.248 52.1597 126.988 52.1968 127.047 52.1968 cv
127.105 52.1968 127.846 52.1597 128.203 52.1597 cv
128.33 52.1597 128.389 52.1851 128.389 52.2554 cv
128.389 52.3042 128.34 52.3257 128.295 52.3257 cv
128.213 52.3257 128.143 52.3394 128.002 52.3628 cv
127.68 52.4214 127.586 52.6226 127.563 53.0337 cv
127.539 53.4097 127.539 53.7417 127.539 55.5776 cv
127.539 57.6499 li
cp
f
138.818 61.9194 mo
140.725 62.9683 142.24 63.4995 143.668 63.4995 cv
145.41 63.4995 146.729 62.9917 147.398 62.687 cv
147.471 62.6499 147.494 62.6167 147.494 62.5698 cv
147.494 62.5347 147.471 62.4995 147.422 62.4995 cv
147.387 62.4995 147.328 62.5229 147.256 62.5483 cv
146.447 62.8726 145.527 63.0034 144.938 63.0034 cv
144.35 63.0034 142.563 62.9429 139.982 61.6187 cv
137.568 60.3687 li
138.346 59.8569 139.654 58.4839 139.654 56.4116 cv
139.654 53.6831 137.676 51.9976 135.029 51.9976 cv
131.779 51.9976 130.389 54.6948 130.389 56.603 cv
130.389 58.7202 131.73 61.2261 134.994 61.2261 cv
135.615 61.2261 136.416 61.0503 136.84 60.8237 cv
138.818 61.9194 li
cp
131.506 56.271 mo
131.506 53.6948 132.98 52.397 134.945 52.397 cv
136.805 52.397 138.523 53.9175 138.523 56.7437 cv
138.523 60.1675 136.332 60.7788 135.273 60.7788 cv
133.154 60.7788 131.506 59.0112 131.506 56.271 cv
cp
f
141.879 55.5776 mo
141.879 53.7417 141.879 53.4097 141.855 53.0337 cv
141.832 52.6343 141.738 52.4448 141.346 52.3628 cv
141.252 52.3394 141.053 52.3257 140.947 52.3257 cv
140.902 52.3257 140.854 52.3042 140.854 52.2554 cv
140.854 52.1851 140.914 52.1597 141.041 52.1597 cv
141.572 52.1597 142.289 52.1968 142.396 52.1968 cv
142.502 52.1968 143.205 52.1597 143.561 52.1597 cv
143.693 52.1597 143.75 52.1851 143.75 52.2554 cv
143.75 52.3042 143.701 52.3257 143.658 52.3257 cv
143.572 52.3257 143.502 52.3394 143.359 52.3628 cv
143.041 52.4087 142.949 52.6226 142.926 53.0337 cv
142.902 53.4097 142.902 53.7417 142.902 55.5776 cv
142.902 57.2241 li
142.902 58.9175 143.277 59.6519 143.787 60.1304 cv
144.361 60.6753 144.893 60.7788 145.563 60.7788 cv
146.279 60.7788 146.984 60.439 147.41 59.9292 cv
147.951 59.2612 148.092 58.2593 148.092 57.0464 cv
148.092 55.5776 li
148.092 53.7417 148.092 53.4097 148.068 53.0337 cv
148.045 52.6343 147.951 52.4448 147.564 52.3628 cv
147.471 52.3394 147.27 52.3257 147.162 52.3257 cv
147.113 52.3257 147.068 52.3042 147.068 52.2554 cv
147.068 52.1851 147.125 52.1597 147.256 52.1597 cv
147.787 52.1597 148.436 52.1968 148.506 52.1968 cv
148.588 52.1968 149.139 52.1597 149.496 52.1597 cv
149.625 52.1597 149.682 52.1851 149.682 52.2554 cv
149.682 52.3042 149.637 52.3257 149.59 52.3257 cv
149.508 52.3257 149.436 52.3257 149.293 52.3628 cv
148.973 52.4214 148.881 52.6226 148.857 53.0337 cv
148.832 53.4097 148.832 53.7417 148.832 55.5776 cv
148.832 56.8374 li
148.832 58.105 148.693 59.521 147.75 60.3569 cv
146.904 61.1089 146.021 61.2261 145.324 61.2261 cv
144.928 61.2261 143.738 61.1792 142.902 60.3901 cv
142.324 59.8354 141.879 59.0112 141.879 57.2944 cv
141.879 55.5776 li
cp
f
152.33 55.5776 mo
152.33 53.7417 152.33 53.4097 152.307 53.0337 cv
152.283 52.6343 152.189 52.4448 151.799 52.3628 cv
151.707 52.3394 151.508 52.3257 151.4 52.3257 cv
151.354 52.3257 151.307 52.3042 151.307 52.2554 cv
151.307 52.1851 151.365 52.1597 151.494 52.1597 cv
152.023 52.1597 152.766 52.1968 152.824 52.1968 cv
152.904 52.1968 155.25 52.1968 155.52 52.1851 cv
155.742 52.1733 155.93 52.1479 156.025 52.1255 cv
156.084 52.1138 156.133 52.0688 156.191 52.0688 cv
156.229 52.0688 156.238 52.1138 156.238 52.1733 cv
156.238 52.2554 156.18 52.397 156.143 52.728 cv
156.133 52.8452 156.107 53.3628 156.084 53.5044 cv
156.072 53.564 156.049 53.6362 156.002 53.6362 cv
155.93 53.6362 155.906 53.5757 155.906 53.4819 cv
155.906 53.3989 155.896 53.1968 155.836 53.0562 cv
155.756 52.8687 155.637 52.728 155.002 52.6597 cv
154.803 52.6343 153.52 52.6226 153.389 52.6226 cv
153.344 52.6226 153.318 52.6597 153.318 52.7417 cv
153.318 55.9858 li
153.318 56.0698 153.332 56.105 153.389 56.105 cv
153.541 56.105 154.988 56.105 155.262 56.0815 cv
155.543 56.0581 155.707 56.0327 155.811 55.9175 cv
155.896 55.8257 155.941 55.7671 155.99 55.7671 cv
156.025 55.7671 156.049 55.7905 156.049 55.8608 cv
156.049 55.9253 155.99 56.1284 155.955 56.519 cv
155.93 56.7573 155.906 57.187 155.906 57.269 cv
155.906 57.3667 155.906 57.4956 155.824 57.4956 cv
155.768 57.4956 155.742 57.4487 155.742 57.3882 cv
155.742 57.269 155.742 57.1519 155.697 56.9995 cv
155.648 56.8374 155.543 56.6382 155.084 56.5913 cv
154.768 56.5542 153.602 56.5308 153.402 56.5308 cv
153.344 56.5308 153.318 56.5659 153.318 56.6128 cv
153.318 57.6499 li
153.318 58.0464 153.309 59.4136 153.318 59.6636 cv
153.354 60.4741 153.533 60.6284 154.684 60.6284 cv
154.988 60.6284 155.508 60.6284 155.811 60.4976 cv
156.121 60.3687 156.264 60.1304 156.344 59.6519 cv
156.369 59.521 156.393 59.4741 156.449 59.4741 cv
156.521 59.4741 156.521 59.5679 156.521 59.6519 cv
156.521 59.7437 156.428 60.5444 156.369 60.7886 cv
156.287 61.0972 156.191 61.0972 155.73 61.0972 cv
153.951 61.0972 153.166 61.0249 152.824 61.0249 cv
152.766 61.0249 152.023 61.0601 151.672 61.0601 cv
151.543 61.0601 151.484 61.0366 151.484 60.9663 cv
151.484 60.9312 151.508 60.894 151.578 60.894 cv
151.684 60.894 151.824 60.8706 151.926 60.8472 cv
152.164 60.8003 152.223 60.5444 152.271 60.2026 cv
152.33 59.7104 152.33 58.7788 152.33 57.6499 cv
152.33 55.5776 li
cp
f
1.24756 69.6987 mo
1.24756 67.8647 1.24756 67.5366 1.22412 67.1577 cv
1.20068 66.7554 1.10693 66.5718 .718262 66.4897 cv
.624512 66.4663 .424316 66.4546 .317383 66.4546 cv
.270996 66.4546 .224121 66.4312 .224121 66.3843 cv
.224121 66.312 .283203 66.2886 .412598 66.2886 cv
.941895 66.2886 1.68311 66.3257 1.74219 66.3257 cv
1.97754 66.3257 4.3667 66.3257 4.63818 66.312 cv
4.86182 66.3003 5.0498 66.3003 5.15527 66.2651 cv
5.22754 66.2417 5.27393 66.1948 5.32031 66.1948 cv
5.36865 66.1948 5.3916 66.2417 5.3916 66.3003 cv
5.3916 66.3843 5.33252 66.5249 5.29688 66.8511 cv
5.28613 66.9702 5.26221 67.4897 5.23779 67.6265 cv
5.22754 67.6851 5.20313 67.7573 5.14453 67.7573 cv
5.08545 67.7573 5.0625 67.6987 5.0625 67.6147 cv
5.0625 67.5229 5.02686 67.3237 4.95605 67.1714 cv
4.88525 67.0171 4.61377 66.8042 4.15576 66.7925 cv
2.34229 66.7554 li
2.27246 66.7554 2.23633 66.7925 2.23633 66.8882 cv
2.23633 70.1382 li
2.23633 70.2104 2.24902 70.2437 2.31885 70.2437 cv
3.82617 70.2319 li
4.02588 70.2319 4.19141 70.2319 4.35596 70.2202 cv
4.63818 70.1968 4.7915 70.1616 4.89648 70.0073 cv
4.94434 69.9468 4.97949 69.8882 5.02686 69.8882 cv
5.07324 69.8882 5.08545 69.9253 5.08545 69.9839 cv
5.08545 70.0542 5.02686 70.2573 4.99072 70.6401 cv
4.96777 70.8765 4.94434 71.3511 4.94434 71.4331 cv
4.94434 71.5347 4.94434 71.6538 4.86182 71.6538 cv
4.80273 71.6538 4.77979 71.6069 4.77979 71.5483 cv
4.76807 71.4331 4.75537 71.269 4.70898 71.1265 cv
4.64941 70.9604 4.46191 70.7476 4.09668 70.7007 cv
3.80225 70.6655 2.51953 70.6655 2.31885 70.6655 cv
2.25977 70.6655 2.23633 70.687 2.23633 70.771 cv
2.23633 71.7729 li
2.23633 72.9019 2.23633 73.8315 2.2959 74.3276 cv
2.33154 74.6675 2.40137 74.9272 2.75488 74.9741 cv
2.91943 74.9995 3.1792 75.0229 3.28467 75.0229 cv
3.35449 75.0229 3.37744 75.0581 3.37744 75.0933 cv
3.37744 75.1538 3.31982 75.187 3.18994 75.187 cv
2.54297 75.187 1.80176 75.1538 1.74219 75.1538 cv
1.68311 75.1538 .941895 75.187 .588867 75.187 cv
.458496 75.187 .400879 75.1655 .400879 75.0933 cv
.400879 75.0581 .424316 75.0229 .494629 75.0229 cv
.600586 75.0229 .741699 74.9995 .848633 74.9741 cv
1.08301 74.9272 1.14209 74.6675 1.18896 74.3276 cv
1.24756 73.8315 1.24756 72.9019 1.24756 71.7729 cv
1.24756 69.6987 li
cp
f
8.21582 69.6987 mo
8.21582 67.8647 8.21582 67.5366 8.19238 67.1577 cv
8.16943 66.7554 8.0752 66.5718 7.68701 66.4897 cv
7.5918 66.4663 7.39258 66.4546 7.28564 66.4546 cv
7.23926 66.4546 7.19189 66.4312 7.19189 66.3843 cv
7.19189 66.312 7.25098 66.2886 7.38086 66.2886 cv
7.91064 66.2886 8.65186 66.3257 8.71094 66.3257 cv
8.79199 66.3257 11.1357 66.3257 11.4072 66.312 cv
11.6299 66.3003 11.8184 66.2769 11.9126 66.2534 cv
11.9707 66.2417 12.0186 66.1948 12.0771 66.1948 cv
12.1123 66.1948 12.124 66.2417 12.124 66.3003 cv
12.124 66.3843 12.0654 66.5249 12.0303 66.8511 cv
12.0186 66.9702 11.9951 67.4897 11.9707 67.6265 cv
11.959 67.6851 11.9355 67.7573 11.8887 67.7573 cv
11.8184 67.7573 11.7944 67.6987 11.7944 67.605 cv
11.7944 67.5229 11.7832 67.3237 11.7236 67.1831 cv
11.6416 66.9917 11.5234 66.8511 10.8887 66.7808 cv
10.688 66.7554 9.40527 66.7437 9.27539 66.7437 cv
9.22803 66.7437 9.20508 66.7808 9.20508 66.8628 cv
9.20508 70.1128 li
9.20508 70.1968 9.2168 70.2319 9.27539 70.2319 cv
9.42871 70.2319 10.876 70.2319 11.1475 70.2104 cv
11.4302 70.1851 11.5947 70.1616 11.7002 70.0444 cv
11.7832 69.9468 11.8301 69.8882 11.877 69.8882 cv
11.9126 69.8882 11.9355 69.9116 11.9355 69.9839 cv
11.9355 70.0542 11.877 70.2573 11.8418 70.6401 cv
11.8184 70.8765 11.7944 71.3159 11.7944 71.396 cv
11.7944 71.4897 11.7944 71.6167 11.7119 71.6167 cv
11.6543 71.6167 11.6299 71.5698 11.6299 71.5112 cv
11.6299 71.396 11.6299 71.2808 11.582 71.1265 cv
11.5361 70.9604 11.4302 70.7593 10.9707 70.7124 cv
10.6523 70.6772 9.48779 70.6538 9.28711 70.6538 cv
9.22803 70.6538 9.20508 70.687 9.20508 70.7358 cv
9.20508 71.7729 li
9.20508 72.1753 9.19336 73.5366 9.20508 73.7847 cv
9.24072 74.5972 9.41699 74.7495 10.5703 74.7495 cv
10.876 74.7495 11.3945 74.7495 11.7002 74.6187 cv
12.0068 74.4897 12.1484 74.2573 12.2305 73.7729 cv
12.2539 73.6421 12.2773 73.5952 12.3359 73.5952 cv
12.4067 73.5952 12.4067 73.6909 12.4067 73.7729 cv
12.4067 73.8687 12.3125 74.6675 12.2539 74.9155 cv
12.1709 75.2222 12.0771 75.2222 11.6182 75.2222 cv
9.84082 75.2222 9.05176 75.1538 8.71094 75.1538 cv
8.65186 75.1538 7.91064 75.187 7.55713 75.187 cv
7.42725 75.187 7.36816 75.1655 7.36816 75.0933 cv
7.36816 75.0581 7.39258 75.0229 7.46289 75.0229 cv
7.56836 75.0229 7.70996 74.9995 7.81543 74.9741 cv
8.05078 74.9272 8.11035 74.6675 8.15771 74.3276 cv
8.21582 73.8315 8.21582 72.9019 8.21582 71.7729 cv
8.21582 69.6987 li
cp
11.6299 64.6851 mo
11.6875 64.7905 11.6299 64.8276 11.582 64.8276 cv
11.5479 64.8276 11.4302 64.8022 11.2295 64.8276 cv
10.6523 64.8862 9.8291 65.1577 9.44043 65.3237 cv
9.3584 65.3589 9.28711 65.3823 9.26367 65.3823 cv
9.24072 65.3823 9.20508 65.3589 9.20508 65.312 cv
9.20508 65.2769 9.22803 65.2515 9.28711 65.2163 cv
9.71191 64.9214 10.8066 64.2632 10.8887 64.2163 cv
11.0884 64.0972 11.1592 64.062 11.2178 64.062 cv
11.2529 64.062 11.2764 64.0854 11.335 64.1694 cv
11.4175 64.2866 11.5 64.4526 11.6299 64.6851 cv
cp
f
15.3965 71.7729 mo
15.3965 72.9019 15.3965 73.8315 15.3369 74.3276 cv
15.291 74.6675 15.2314 74.9272 14.9951 74.9741 cv
14.8896 74.9995 14.749 75.0229 14.6426 75.0229 cv
14.5723 75.0229 14.5488 75.0581 14.5488 75.0933 cv
14.5488 75.1655 14.6074 75.187 14.7373 75.187 cv
15.0898 75.187 15.832 75.1538 15.8906 75.1538 cv
16.0078 75.1538 17.4912 75.2925 18.5039 75.2925 cv
20.5049 75.2925 21.5635 74.4663 22.0713 73.939 cv
22.73 73.2456 23.3413 72.103 23.3413 70.6187 cv
23.3413 69.2202 22.7881 68.2437 22.2002 67.6265 cv
20.7988 66.1812 18.6455 66.2886 17.4805 66.2886 cv
16.7734 66.2886 16.0322 66.3257 15.8906 66.3257 cv
15.8311 66.3257 15.0898 66.2886 14.5605 66.2886 cv
14.4316 66.2886 14.3721 66.312 14.3721 66.3843 cv
14.3721 66.4312 14.4199 66.4546 14.4668 66.4546 cv
14.5723 66.4546 14.7725 66.4663 14.8662 66.4897 cv
15.2549 66.5718 15.3486 66.7554 15.373 67.1577 cv
15.3965 67.5366 15.3965 67.8647 15.3965 69.6987 cv
15.3965 71.7729 li
cp
16.3857 69.5112 mo
16.3857 68.603 16.3857 67.4077 16.3975 67.0054 cv
16.3975 66.8745 16.4316 66.8159 16.5376 66.769 cv
16.6328 66.7222 17.0684 66.6851 17.3027 66.6851 cv
18.7041 66.6851 20.0469 66.8511 21.1519 68.019 cv
21.6353 68.5249 22.2822 69.4897 22.2822 70.9839 cv
22.2822 72.0679 21.9531 73.1987 21.3408 73.7964 cv
20.6465 74.4897 19.6338 74.8921 18.5391 74.8921 cv
17.1504 74.8921 16.6904 74.644 16.5376 74.4214 cv
16.4434 74.2905 16.4199 73.8218 16.4092 73.5249 cv
16.3975 73.3062 16.3857 72.2222 16.3857 70.9722 cv
16.3857 69.5112 li
cp
f
25.7188 69.6987 mo
25.7188 67.8647 25.7188 67.5366 25.6953 67.1577 cv
25.6719 66.7554 25.5771 66.5718 25.1895 66.4897 cv
25.0957 66.4663 24.8955 66.4546 24.7891 66.4546 cv
24.7422 66.4546 24.6953 66.4312 24.6953 66.3843 cv
24.6953 66.312 24.7539 66.2886 24.8838 66.2886 cv
25.4121 66.2886 26.1543 66.3257 26.2139 66.3257 cv
26.2959 66.3257 28.6377 66.3257 28.9092 66.312 cv
29.1328 66.3003 29.3203 66.2769 29.4155 66.2534 cv
29.4746 66.2417 29.521 66.1948 29.5801 66.1948 cv
29.6162 66.1948 29.627 66.2417 29.627 66.3003 cv
29.627 66.3843 29.5674 66.5249 29.5327 66.8511 cv
29.521 66.9702 29.498 67.4897 29.4746 67.6265 cv
29.4619 67.6851 29.439 67.7573 29.3926 67.7573 cv
29.3203 67.7573 29.2974 67.6987 29.2974 67.605 cv
29.2974 67.5229 29.2856 67.3237 29.2266 67.1831 cv
29.1445 66.9917 29.0269 66.8511 28.3906 66.7808 cv
28.1909 66.7554 26.9082 66.7437 26.7783 66.7437 cv
26.731 66.7437 26.708 66.7808 26.708 66.8628 cv
26.708 70.1128 li
26.708 70.1968 26.7207 70.2319 26.7783 70.2319 cv
26.9316 70.2319 28.3799 70.2319 28.6504 70.2104 cv
28.9331 70.1851 29.0977 70.1616 29.2036 70.0444 cv
29.2856 69.9468 29.333 69.8882 29.3799 69.8882 cv
29.4155 69.8882 29.439 69.9116 29.439 69.9839 cv
29.439 70.0542 29.3799 70.2573 29.3447 70.6401 cv
29.3203 70.8765 29.2974 71.3159 29.2974 71.396 cv
29.2974 71.4897 29.2974 71.6167 29.2148 71.6167 cv
29.1563 71.6167 29.1328 71.5698 29.1328 71.5112 cv
29.1328 71.396 29.1328 71.2808 29.0859 71.1265 cv
29.0386 70.9604 28.9331 70.7593 28.4731 70.7124 cv
28.1563 70.6772 26.9907 70.6538 26.79 70.6538 cv
26.731 70.6538 26.708 70.687 26.708 70.7358 cv
26.708 71.7729 li
26.708 72.1753 26.6963 73.5366 26.708 73.7847 cv
26.7437 74.5972 26.9199 74.7495 28.0737 74.7495 cv
28.3799 74.7495 28.8975 74.7495 29.2036 74.6187 cv
29.5093 74.4897 29.6499 74.2573 29.7324 73.7729 cv
29.7563 73.6421 29.7808 73.5952 29.8389 73.5952 cv
29.9097 73.5952 29.9097 73.6909 29.9097 73.7729 cv
29.9097 73.8687 29.8145 74.6675 29.7563 74.9155 cv
29.6743 75.2222 29.5801 75.2222 29.1211 75.2222 cv
27.3433 75.2222 26.5557 75.1538 26.2139 75.1538 cv
26.1543 75.1538 25.4121 75.187 25.0601 75.187 cv
24.9297 75.187 24.8721 75.1655 24.8721 75.0933 cv
24.8721 75.0581 24.8955 75.0229 24.9658 75.0229 cv
25.0713 75.0229 25.2129 74.9995 25.3193 74.9741 cv
25.5537 74.9272 25.6133 74.6675 25.6602 74.3276 cv
25.7188 73.8315 25.7188 72.9019 25.7188 71.7729 cv
25.7188 69.6987 li
cp
29.1328 64.6851 mo
29.1919 64.7905 29.1328 64.8276 29.0859 64.8276 cv
29.0503 64.8276 28.9331 64.8022 28.7324 64.8276 cv
28.1563 64.8862 27.3315 65.1577 26.9434 65.3237 cv
26.8608 65.3589 26.79 65.3823 26.7671 65.3823 cv
26.7437 65.3823 26.708 65.3589 26.708 65.312 cv
26.708 65.2769 26.731 65.2515 26.79 65.2163 cv
27.2139 64.9214 28.3081 64.2632 28.3906 64.2163 cv
28.5908 64.0972 28.6621 64.062 28.7207 64.062 cv
28.7559 64.062 28.7798 64.0854 28.8379 64.1694 cv
28.9204 64.2866 29.0029 64.4526 29.1328 64.6851 cv
cp
f
32.8989 71.7729 mo
32.8989 72.9019 32.8989 73.8315 32.8403 74.3276 cv
32.793 74.6675 32.7344 74.9272 32.499 74.9741 cv
32.3936 74.9995 32.251 75.0229 32.1455 75.0229 cv
32.0757 75.0229 32.0518 75.0581 32.0518 75.0933 cv
32.0518 75.1655 32.1108 75.187 32.2402 75.187 cv
32.5933 75.187 33.3354 75.1538 33.3467 75.1538 cv
33.4048 75.1538 34.147 75.187 34.7944 75.187 cv
34.9238 75.187 34.9819 75.1538 34.9819 75.0933 cv
34.9819 75.0581 34.959 75.0229 34.8892 75.0229 cv
34.7827 75.0229 34.5239 74.9995 34.3579 74.9741 cv
34.0059 74.9272 33.9355 74.6675 33.8999 74.3276 cv
33.8408 73.8315 33.8408 72.9019 33.8408 71.7729 cv
33.8408 71.4897 li
33.8408 71.4331 33.8638 71.396 33.9229 71.396 cv
35.3706 71.4194 li
35.4414 71.4194 35.4771 71.4448 35.5239 71.4897 cv
35.7603 71.7964 36.313 72.5835 36.8071 73.2339 cv
37.478 74.1167 37.8906 74.6909 38.396 74.9644 cv
38.7021 75.1304 38.9966 75.187 39.6558 75.187 cv
40.4912 75.187 li
40.7036 75.187 40.7734 75.1655 40.7734 75.0933 cv
40.7734 75.0581 40.7271 75.0229 40.6675 75.0229 cv
40.5972 75.0229 40.4321 75.0229 40.2085 74.9858 cv
39.915 74.939 39.4087 74.8081 38.7729 74.1421 cv
38.0908 73.4097 37.2896 72.3628 36.3237 71.1265 cv
37.3838 70.1499 37.7485 69.2808 37.7485 68.4077 cv
37.7485 67.5933 37.231 67.0171 36.937 66.8042 cv
36.313 66.3608 35.5239 66.2886 34.7827 66.2886 cv
34.417 66.2886 33.5234 66.3257 33.3931 66.3257 cv
33.3354 66.3257 32.5933 66.2886 32.0635 66.2886 cv
31.9341 66.2886 31.8755 66.312 31.8755 66.3843 cv
31.8755 66.4312 31.9214 66.4546 31.9692 66.4546 cv
32.0757 66.4546 32.2754 66.4663 32.3696 66.4897 cv
32.7588 66.5718 32.8521 66.7554 32.875 67.1577 cv
32.8989 67.5366 32.8989 67.8647 32.8989 69.6987 cv
32.8989 71.7729 li
cp
33.8408 66.8745 mo
33.8408 66.8042 33.8765 66.7554 33.9355 66.7339 cv
34.0522 66.6968 34.3706 66.6616 34.7236 66.6616 cv
35.9839 66.6616 36.7598 67.5483 36.7598 69.0171 cv
36.7598 69.9116 36.4536 70.5464 36.0415 70.8296 cv
35.771 71.021 35.4414 71.0542 35.1592 71.0542 cv
34.6411 71.0542 34.1001 70.9722 33.9229 70.8667 cv
33.8638 70.8296 33.8408 70.7847 33.8408 70.7241 cv
33.8408 66.8745 li
cp
f
40.7979 73.8901 mo
40.5854 74.478 40.3501 74.9272 39.8086 74.9995 cv
39.7144 75.0112 39.5488 75.0229 39.4663 75.0229 cv
39.4087 75.0229 39.3608 75.0464 39.3608 75.0933 cv
39.3608 75.1655 39.4316 75.187 39.585 75.187 cv
40.1382 75.187 40.7852 75.1538 40.9146 75.1538 cv
41.0449 75.1538 41.5503 75.187 41.8335 75.187 cv
41.939 75.187 42.0098 75.1655 42.0098 75.0933 cv
42.0098 75.0464 41.9746 75.0229 41.8921 75.0229 cv
41.7744 75.0229 li
41.5747 75.0229 41.3267 74.9155 41.3267 74.6792 cv
41.3267 74.4663 41.3857 74.189 41.4912 73.8901 cv
42.1973 71.8062 li
42.2217 71.7495 42.2568 71.7144 42.3159 71.7144 cv
44.8462 71.7144 li
44.9053 71.7144 44.9287 71.7358 44.9526 71.7827 cv
46.0474 74.6792 li
46.1182 74.8687 46.0474 74.9741 45.9766 74.9995 cv
45.9292 75.0112 45.8945 75.0347 45.8945 75.0815 cv
45.8945 75.1538 46.0229 75.1538 46.2471 75.1655 cv
47.0596 75.187 47.9189 75.187 48.0952 75.187 cv
48.2251 75.187 48.3306 75.1655 48.3306 75.0933 cv
48.3306 75.0347 48.2842 75.0229 48.2124 75.0229 cv
48.0952 75.0229 47.9189 75.0112 47.7417 74.9526 cv
47.4946 74.8804 47.1538 74.6909 46.7305 73.6421 cv
46.0127 71.855 44.1631 66.9917 43.9868 66.5464 cv
43.8462 66.1812 43.7988 66.1226 43.728 66.1226 cv
43.6572 66.1226 43.6108 66.1948 43.4697 66.5815 cv
40.7979 73.8901 li
cp
42.4443 71.2925 mo
42.4106 71.2925 42.3862 71.269 42.4106 71.2085 cv
43.4463 68.0288 li
43.5044 67.8511 43.5625 67.8511 43.6216 68.0288 cv
44.7407 71.2085 li
44.7524 71.2573 44.7524 71.2925 44.6929 71.2925 cv
42.4443 71.2925 li
cp
f
51.0024 71.7964 mo
51.0024 73.5249 51.0503 74.2827 51.2612 74.4897 cv
51.4502 74.6792 51.7563 74.7612 52.6738 74.7612 cv
53.2979 74.7612 53.8149 74.7495 54.0981 74.4077 cv
54.251 74.2241 54.3691 73.9272 54.4038 73.7026 cv
54.4155 73.6069 54.4399 73.5483 54.5107 73.5483 cv
54.5698 73.5483 54.5806 73.5952 54.5806 73.7261 cv
54.5806 73.8569 54.498 74.5601 54.4038 74.9038 cv
54.3228 75.1772 54.2871 75.2222 53.6631 75.2222 cv
51.9678 75.2222 51.1904 75.1538 50.5078 75.1538 cv
50.4023 75.1538 49.7085 75.187 49.355 75.187 cv
49.2251 75.187 49.166 75.1655 49.166 75.0933 cv
49.166 75.0581 49.1899 75.0229 49.2607 75.0229 cv
49.3662 75.0229 49.5078 74.9995 49.6133 74.9741 cv
49.8486 74.9272 49.9082 74.6675 49.9556 74.3276 cv
50.0137 73.8315 50.0137 72.9019 50.0137 71.7729 cv
50.0137 69.6987 li
50.0137 67.8647 50.0137 67.5366 49.9902 67.1577 cv
49.9663 66.7554 49.873 66.5718 49.4849 66.4897 cv
49.3896 66.4663 49.1899 66.4546 49.0835 66.4546 cv
49.0361 66.4546 48.9897 66.4312 48.9897 66.3843 cv
48.9897 66.312 49.0488 66.2886 49.1787 66.2886 cv
49.7085 66.2886 50.4497 66.3257 50.5078 66.3257 cv
50.5669 66.3257 51.4272 66.2886 51.7798 66.2886 cv
51.9087 66.2886 51.9678 66.312 51.9678 66.3843 cv
51.9678 66.4312 51.9209 66.4546 51.8726 66.4546 cv
51.791 66.4546 51.6255 66.4663 51.4849 66.4897 cv
51.144 66.5464 51.0503 66.7437 51.0259 67.1577 cv
51.0024 67.5366 51.0024 67.8647 51.0024 69.6987 cv
51.0024 71.7964 li
cp
f
56.9819 69.6987 mo
56.9819 67.8647 56.9819 67.5366 56.958 67.1577 cv
56.9346 66.7554 56.8413 66.5718 56.4521 66.4897 cv
56.3579 66.4663 56.1582 66.4546 56.0518 66.4546 cv
56.0049 66.4546 55.958 66.4312 55.958 66.3843 cv
55.958 66.312 56.0171 66.2886 56.1455 66.2886 cv
56.6758 66.2886 57.418 66.3257 57.4761 66.3257 cv
57.5581 66.3257 59.9023 66.3257 60.1724 66.312 cv
60.396 66.3003 60.584 66.2769 60.6777 66.2534 cv
60.7368 66.2417 60.7832 66.1948 60.8428 66.1948 cv
60.8789 66.1948 60.8901 66.2417 60.8901 66.3003 cv
60.8901 66.3843 60.8311 66.5249 60.7959 66.8511 cv
60.7832 66.9702 60.7598 67.4897 60.7368 67.6265 cv
60.7251 67.6851 60.7012 67.7573 60.6548 67.7573 cv
60.584 67.7573 60.5605 67.6987 60.5605 67.605 cv
60.5605 67.5229 60.5488 67.3237 60.4897 67.1831 cv
60.4077 66.9917 60.2891 66.8511 59.6543 66.7808 cv
59.4536 66.7554 58.1709 66.7437 58.0415 66.7437 cv
57.9946 66.7437 57.9702 66.7808 57.9702 66.8628 cv
57.9702 70.1128 li
57.9702 70.1968 57.9829 70.2319 58.0415 70.2319 cv
58.1943 70.2319 59.6426 70.2319 59.9126 70.2104 cv
60.1953 70.1851 60.3604 70.1616 60.4653 70.0444 cv
60.5488 69.9468 60.5957 69.8882 60.6431 69.8882 cv
60.6777 69.8882 60.7012 69.9116 60.7012 69.9839 cv
60.7012 70.0542 60.6431 70.2573 60.6074 70.6401 cv
60.584 70.8765 60.5605 71.3159 60.5605 71.396 cv
60.5605 71.4897 60.5605 71.6167 60.478 71.6167 cv
60.4194 71.6167 60.396 71.5698 60.396 71.5112 cv
60.396 71.396 60.396 71.2808 60.3486 71.1265 cv
60.3008 70.9604 60.1953 70.7593 59.7368 70.7124 cv
59.4185 70.6772 58.2529 70.6538 58.0522 70.6538 cv
57.9946 70.6538 57.9702 70.687 57.9702 70.7358 cv
57.9702 71.7729 li
57.9702 72.1753 57.9595 73.5366 57.9702 73.7847 cv
58.0059 74.5972 58.1836 74.7495 59.3359 74.7495 cv
59.6426 74.7495 60.1597 74.7495 60.4653 74.6187 cv
60.7715 74.4897 60.9141 74.2573 60.9961 73.7729 cv
61.0195 73.6421 61.043 73.5952 61.1025 73.5952 cv
61.1719 73.5952 61.1719 73.6909 61.1719 73.7729 cv
61.1719 73.8687 61.0791 74.6675 61.0195 74.9155 cv
60.9375 75.2222 60.8428 75.2222 60.3838 75.2222 cv
58.6064 75.2222 57.8179 75.1538 57.4761 75.1538 cv
57.418 75.1538 56.6758 75.187 56.3232 75.187 cv
56.1934 75.187 56.1343 75.1655 56.1343 75.0933 cv
56.1343 75.0581 56.1582 75.0229 56.2285 75.0229 cv
56.334 75.0229 56.4766 74.9995 56.5815 74.9741 cv
56.8174 74.9272 56.875 74.6675 56.9238 74.3276 cv
56.9819 73.8315 56.9819 72.9019 56.9819 71.7729 cv
56.9819 69.6987 li
cp
f
67.9868 71.7729 mo
67.9868 72.9019 67.9868 73.8315 67.9287 74.3276 cv
67.8818 74.6675 67.8223 74.9272 67.5869 74.9741 cv
67.4805 74.9995 67.3398 75.0229 67.2349 75.0229 cv
67.1641 75.0229 67.1406 75.0581 67.1406 75.0933 cv
67.1406 75.1655 67.1992 75.187 67.3281 75.187 cv
67.6816 75.187 68.4238 75.1538 68.4819 75.1538 cv
68.5996 75.1538 70.083 75.2925 71.0957 75.2925 cv
73.0947 75.2925 74.1553 74.4663 74.6621 73.939 cv
75.3203 73.2456 75.9326 72.103 75.9326 70.6187 cv
75.9326 69.2202 75.3799 68.2437 74.79 67.6265 cv
73.3896 66.1812 71.2363 66.2886 70.0713 66.2886 cv
69.3652 66.2886 68.624 66.3257 68.4819 66.3257 cv
68.4238 66.3257 67.6816 66.2886 67.1523 66.2886 cv
67.022 66.2886 66.9639 66.312 66.9639 66.3843 cv
66.9639 66.4312 67.0107 66.4546 67.0566 66.4546 cv
67.1641 66.4546 67.3643 66.4663 67.458 66.4897 cv
67.8457 66.5718 67.9414 66.7554 67.9644 67.1577 cv
67.9868 67.5366 67.9868 67.8647 67.9868 69.6987 cv
67.9868 71.7729 li
cp
68.9756 69.5112 mo
68.9756 68.603 68.9756 67.4077 68.9873 67.0054 cv
68.9873 66.8745 69.0225 66.8159 69.1299 66.769 cv
69.2227 66.7222 69.6597 66.6851 69.8945 66.6851 cv
71.2949 66.6851 72.6367 66.8511 73.7432 68.019 cv
74.2266 68.5249 74.873 69.4897 74.873 70.9839 cv
74.873 72.0679 74.5435 73.1987 73.9316 73.7964 cv
73.2373 74.4897 72.2246 74.8921 71.1299 74.8921 cv
69.7412 74.8921 69.2822 74.644 69.1299 74.4214 cv
69.0352 74.2905 69.0107 73.8218 68.999 73.5249 cv
68.9873 73.3062 68.9756 72.2222 68.9756 70.9722 cv
68.9756 69.5112 li
cp
f
78.7813 69.6987 mo
78.7813 67.8647 78.7813 67.5366 78.7578 67.1577 cv
78.7334 66.7554 78.6406 66.5718 78.251 66.4897 cv
78.1582 66.4663 77.9561 66.4546 77.8516 66.4546 cv
77.8037 66.4546 77.7568 66.4312 77.7568 66.3843 cv
77.7568 66.312 77.8154 66.2886 77.9453 66.2886 cv
78.4746 66.2886 79.2158 66.3257 79.2754 66.3257 cv
79.3584 66.3257 81.7002 66.3257 81.9688 66.312 cv
82.1943 66.3003 82.3848 66.2769 82.4785 66.2534 cv
82.5371 66.2417 82.583 66.1948 82.6416 66.1948 cv
82.6777 66.1948 82.6904 66.2417 82.6904 66.3003 cv
82.6904 66.3843 82.6299 66.5249 82.5947 66.8511 cv
82.583 66.9702 82.5586 67.4897 82.5371 67.6265 cv
82.5254 67.6851 82.502 67.7573 82.457 67.7573 cv
82.3848 67.7573 82.3594 67.6987 82.3594 67.605 cv
82.3594 67.5229 82.3496 67.3237 82.291 67.1831 cv
82.2061 66.9917 82.0889 66.8511 81.4551 66.7808 cv
81.2539 66.7554 79.9688 66.7437 79.8408 66.7437 cv
79.7939 66.7437 79.7715 66.7808 79.7715 66.8628 cv
79.7715 70.1128 li
79.7715 70.1968 79.7813 70.2319 79.8408 70.2319 cv
79.9922 70.2319 81.4414 70.2319 81.7119 70.2104 cv
81.9941 70.1851 82.1592 70.1616 82.2666 70.0444 cv
82.3496 69.9468 82.3965 69.8882 82.4434 69.8882 cv
82.4785 69.8882 82.502 69.9116 82.502 69.9839 cv
82.502 70.0542 82.4434 70.2573 82.4082 70.6401 cv
82.3848 70.8765 82.3594 71.3159 82.3594 71.396 cv
82.3594 71.4897 82.3594 71.6167 82.2773 71.6167 cv
82.2188 71.6167 82.1943 71.5698 82.1943 71.5112 cv
82.1943 71.396 82.1943 71.2808 82.1475 71.1265 cv
82.1006 70.9604 81.9941 70.7593 81.5371 70.7124 cv
81.2178 70.6772 80.0508 70.6538 79.8525 70.6538 cv
79.7939 70.6538 79.7715 70.687 79.7715 70.7358 cv
79.7715 71.7729 li
79.7715 72.1753 79.7578 73.5366 79.7715 73.7847 cv
79.8057 74.5972 79.9785 74.7495 81.1348 74.7495 cv
81.4414 74.7495 81.959 74.7495 82.2666 74.6187 cv
82.5703 74.4897 82.7129 74.2573 82.7949 73.7729 cv
82.8164 73.6421 82.8398 73.5952 82.8984 73.5952 cv
82.9707 73.5952 82.9707 73.6909 82.9707 73.7729 cv
82.9707 73.8687 82.875 74.6675 82.8164 74.9155 cv
82.7363 75.2222 82.6416 75.2222 82.1836 75.2222 cv
80.4063 75.2222 79.6191 75.1538 79.2754 75.1538 cv
79.2158 75.1538 78.4746 75.187 78.1221 75.187 cv
77.9922 75.187 77.9346 75.1655 77.9346 75.0933 cv
77.9346 75.0581 77.9561 75.0229 78.0273 75.0229 cv
78.1348 75.0229 78.2754 74.9995 78.3818 74.9741 cv
78.6172 74.9272 78.6748 74.6675 78.7217 74.3276 cv
78.7813 73.8315 78.7813 72.9019 78.7813 71.7729 cv
78.7813 69.6987 li
cp
f
90.7754 71.7964 mo
90.7754 73.5249 90.8223 74.2827 91.0352 74.4897 cv
91.2227 74.6792 91.5273 74.7612 92.4473 74.7612 cv
93.0703 74.7612 93.5859 74.7495 93.8711 74.4077 cv
94.0254 74.2241 94.1426 73.9272 94.1777 73.7026 cv
94.1895 73.6069 94.2129 73.5483 94.2822 73.5483 cv
94.3408 73.5483 94.3535 73.5952 94.3535 73.7261 cv
94.3535 73.8569 94.2705 74.5601 94.1777 74.9038 cv
94.0977 75.1772 94.0605 75.2222 93.4355 75.2222 cv
91.7402 75.2222 90.9639 75.1538 90.2832 75.1538 cv
90.1758 75.1538 89.4814 75.187 89.1289 75.187 cv
88.998 75.187 88.9385 75.1655 88.9385 75.0933 cv
88.9385 75.0581 88.9629 75.0229 89.0322 75.0229 cv
89.1387 75.0229 89.2832 74.9995 89.3867 74.9741 cv
89.6201 74.9272 89.6797 74.6675 89.7266 74.3276 cv
89.7871 73.8315 89.7871 72.9019 89.7871 71.7729 cv
89.7871 69.6987 li
89.7871 67.8647 89.7871 67.5366 89.7617 67.1577 cv
89.7383 66.7554 89.6445 66.5718 89.2578 66.4897 cv
89.1641 66.4663 88.9629 66.4546 88.8574 66.4546 cv
88.8086 66.4546 88.7617 66.4312 88.7617 66.3843 cv
88.7617 66.312 88.8223 66.2886 88.9512 66.2886 cv
89.4814 66.2886 90.2246 66.3257 90.2832 66.3257 cv
90.3398 66.3257 91.2012 66.2886 91.5527 66.2886 cv
91.6797 66.2886 91.7402 66.312 91.7402 66.3843 cv
91.7402 66.4312 91.6914 66.4546 91.6445 66.4546 cv
91.5635 66.4546 91.3994 66.4663 91.2598 66.4897 cv
90.916 66.5464 90.8223 66.7437 90.7988 67.1577 cv
90.7754 67.5366 90.7754 67.8647 90.7754 69.6987 cv
90.7754 71.7964 li
cp
f
96.0156 73.8901 mo
95.8008 74.478 95.5645 74.9272 95.0273 74.9995 cv
94.9297 75.0112 94.7646 75.0229 94.6816 75.0229 cv
94.623 75.0229 94.5742 75.0464 94.5742 75.0933 cv
94.5742 75.1655 94.6465 75.187 94.8008 75.187 cv
95.3535 75.187 96.002 75.1538 96.1328 75.1538 cv
96.2617 75.1538 96.7656 75.187 97.0527 75.187 cv
97.1582 75.187 97.2266 75.1655 97.2266 75.0933 cv
97.2266 75.0464 97.1934 75.0229 97.1113 75.0229 cv
96.9922 75.0229 li
96.7891 75.0229 96.541 74.9155 96.541 74.6792 cv
96.541 74.4663 96.5996 74.189 96.707 73.8901 cv
97.4121 71.8062 li
97.4355 71.7495 97.4707 71.7144 97.5293 71.7144 cv
100.064 71.7144 li
100.123 71.7144 100.145 71.7358 100.17 71.7827 cv
101.262 74.6792 li
101.332 74.8687 101.262 74.9741 101.191 74.9995 cv
101.145 75.0112 101.111 75.0347 101.111 75.0815 cv
101.111 75.1538 101.236 75.1538 101.463 75.1655 cv
102.273 75.187 103.133 75.187 103.311 75.187 cv
103.439 75.187 103.547 75.1655 103.547 75.0933 cv
103.547 75.0347 103.498 75.0229 103.428 75.0229 cv
103.311 75.0229 103.133 75.0112 102.961 74.9526 cv
102.711 74.8804 102.367 74.6909 101.947 73.6421 cv
101.227 71.855 99.3789 66.9917 99.2051 66.5464 cv
99.0645 66.1812 99.0176 66.1226 98.9453 66.1226 cv
98.875 66.1226 98.8262 66.1948 98.6855 66.5815 cv
96.0156 73.8901 li
cp
97.6602 71.2925 mo
97.625 71.2925 97.6016 71.269 97.625 71.2085 cv
98.6602 68.0288 li
98.7188 67.8511 98.7793 67.8511 98.8398 68.0288 cv
99.957 71.2085 li
99.9707 71.2573 99.9707 71.2925 99.9102 71.2925 cv
97.6602 71.2925 li
cp
f
104.547 69.6987 mo
104.547 67.8647 104.547 67.5366 104.523 67.1577 cv
104.498 66.7554 104.406 66.5718 104.02 66.4897 cv
103.926 66.4663 103.725 66.4546 103.617 66.4546 cv
103.568 66.4546 103.521 66.4312 103.521 66.3843 cv
103.521 66.312 103.582 66.2886 103.713 66.2886 cv
104.24 66.2886 104.961 66.3257 105.064 66.3257 cv
105.17 66.3257 105.879 66.2886 106.229 66.2886 cv
106.359 66.2886 106.416 66.312 106.416 66.3843 cv
106.416 66.4312 106.373 66.4546 106.324 66.4546 cv
106.24 66.4546 106.17 66.4663 106.029 66.4897 cv
105.713 66.5347 105.617 66.7437 105.594 67.1577 cv
105.572 67.5366 105.572 67.8647 105.572 69.6987 cv
105.572 71.3511 li
105.572 73.0464 105.949 73.7729 106.453 74.2573 cv
107.031 74.7983 107.561 74.9038 108.23 74.9038 cv
108.947 74.9038 109.658 74.5601 110.078 74.0581 cv
110.621 73.3862 110.762 72.3843 110.762 71.1733 cv
110.762 69.6987 li
110.762 67.8647 110.762 67.5366 110.74 67.1577 cv
110.719 66.7554 110.621 66.5718 110.23 66.4897 cv
110.137 66.4663 109.936 66.4546 109.834 66.4546 cv
109.789 66.4546 109.74 66.4312 109.74 66.3843 cv
109.74 66.312 109.799 66.2886 109.926 66.2886 cv
110.455 66.2886 111.102 66.3257 111.174 66.3257 cv
111.256 66.3257 111.811 66.2886 112.162 66.2886 cv
112.291 66.2886 112.352 66.312 112.352 66.3843 cv
112.352 66.4312 112.305 66.4546 112.256 66.4546 cv
112.174 66.4546 112.104 66.4546 111.959 66.4897 cv
111.648 66.5464 111.551 66.7437 111.527 67.1577 cv
111.504 67.5366 111.504 67.8647 111.504 69.6987 cv
111.504 70.9604 li
111.504 72.2358 111.361 73.6421 110.422 74.478 cv
109.574 75.2358 108.693 75.3511 107.996 75.3511 cv
107.598 75.3511 106.406 75.3042 105.572 74.5132 cv
104.996 73.9624 104.547 73.1401 104.547 71.4194 cv
104.547 69.6987 li
cp
f
114.244 75.0347 mo
114.08 74.9526 114.068 74.9038 114.068 74.5854 cv
114.068 73.9976 114.115 73.5249 114.129 73.3394 cv
114.141 73.2124 114.164 73.1519 114.223 73.1519 cv
114.293 73.1519 114.305 73.187 114.305 73.2808 cv
114.305 73.3862 114.305 73.5483 114.34 73.7144 cv
114.518 74.5854 115.295 74.9155 116.082 74.9155 cv
117.213 74.9155 117.764 74.105 117.764 73.3511 cv
117.764 72.5366 117.426 72.0679 116.412 71.2339 cv
115.881 70.7944 li
114.637 69.771 114.352 69.0425 114.352 68.2437 cv
114.352 66.9819 115.295 66.1226 116.787 66.1226 cv
117.248 66.1226 117.59 66.1694 117.883 66.2417 cv
118.105 66.2886 118.201 66.3003 118.295 66.3003 cv
118.389 66.3003 118.416 66.3257 118.416 66.3843 cv
118.416 66.4429 118.367 66.8276 118.367 67.6265 cv
118.367 67.8179 118.344 67.8999 118.283 67.8999 cv
118.213 67.8999 118.201 67.8394 118.189 67.7456 cv
118.178 67.605 118.105 67.2886 118.035 67.1577 cv
117.965 67.0288 117.648 66.5347 116.568 66.5347 cv
115.752 66.5347 115.115 67.0405 115.115 67.8999 cv
115.115 68.5698 115.447 68.9702 116.557 69.8765 cv
116.881 70.1382 li
118.271 71.2339 118.602 71.9624 118.602 72.9019 cv
118.602 73.3862 118.416 74.2827 117.602 74.8569 cv
117.094 75.2124 116.461 75.3511 115.824 75.3511 cv
115.27 75.3511 114.73 75.269 114.244 75.0347 cv
cp
f
120.73 73.8901 mo
120.521 74.478 120.285 74.9272 119.74 74.9995 cv
119.646 75.0112 119.484 75.0229 119.404 75.0229 cv
119.344 75.0229 119.297 75.0464 119.297 75.0933 cv
119.297 75.1655 119.367 75.187 119.52 75.187 cv
120.072 75.187 120.717 75.1538 120.848 75.1538 cv
120.977 75.1538 121.486 75.187 121.766 75.187 cv
121.871 75.187 121.941 75.1655 121.941 75.0933 cv
121.941 75.0464 121.906 75.0229 121.826 75.0229 cv
121.705 75.0229 li
121.508 75.0229 121.264 74.9155 121.264 74.6792 cv
121.264 74.4663 121.322 74.189 121.428 73.8901 cv
122.133 71.8062 li
122.156 71.7495 122.193 71.7144 122.252 71.7144 cv
124.781 71.7144 li
124.838 71.7144 124.861 71.7358 124.885 71.7827 cv
125.98 74.6792 li
126.051 74.8687 125.98 74.9741 125.91 74.9995 cv
125.863 75.0112 125.826 75.0347 125.826 75.0815 cv
125.826 75.1538 125.957 75.1538 126.184 75.1655 cv
126.994 75.187 127.852 75.187 128.031 75.187 cv
128.162 75.187 128.268 75.1655 128.268 75.0933 cv
128.268 75.0347 128.219 75.0229 128.148 75.0229 cv
128.031 75.0229 127.852 75.0112 127.676 74.9526 cv
127.428 74.8804 127.088 74.6909 126.662 73.6421 cv
125.945 71.855 124.098 66.9917 123.92 66.5464 cv
123.779 66.1812 123.73 66.1226 123.66 66.1226 cv
123.592 66.1226 123.545 66.1948 123.404 66.5815 cv
120.73 73.8901 li
cp
122.381 71.2925 mo
122.346 71.2925 122.322 71.269 122.346 71.2085 cv
123.383 68.0288 li
123.441 67.8511 123.498 67.8511 123.555 68.0288 cv
124.674 71.2085 li
124.686 71.2573 124.686 71.2925 124.625 71.2925 cv
122.381 71.2925 li
cp
f
130.266 73.5835 mo
130.291 74.5503 130.406 74.8569 130.725 74.9526 cv
130.951 75.0112 131.207 75.0229 131.313 75.0229 cv
131.371 75.0229 131.408 75.0464 131.408 75.0933 cv
131.408 75.1655 131.336 75.187 131.197 75.187 cv
130.523 75.187 130.057 75.1538 129.949 75.1538 cv
129.842 75.1538 129.348 75.187 128.818 75.187 cv
128.699 75.187 128.629 75.1772 128.629 75.0933 cv
128.629 75.0464 128.664 75.0229 128.723 75.0229 cv
128.818 75.0229 129.031 75.0112 129.207 74.9526 cv
129.498 74.8687 129.559 74.5249 129.559 73.4565 cv
129.568 66.7085 li
129.568 66.2534 129.605 66.1226 129.699 66.1226 cv
129.795 66.1226 129.996 66.3843 130.115 66.5015 cv
130.291 66.6968 132.045 68.5933 133.855 70.5366 cv
135.023 71.7827 136.301 73.2241 136.682 73.6069 cv
136.551 67.6265 li
136.537 66.8628 136.457 66.605 136.094 66.5132 cv
135.881 66.4663 135.607 66.4546 135.514 66.4546 cv
135.432 66.4546 135.42 66.4194 135.42 66.3726 cv
135.42 66.3003 135.514 66.2886 135.656 66.2886 cv
136.186 66.2886 136.752 66.3257 136.883 66.3257 cv
137.012 66.3257 137.396 66.2886 137.883 66.2886 cv
138.012 66.2886 138.094 66.3003 138.094 66.3726 cv
138.094 66.4194 138.047 66.4546 137.965 66.4546 cv
137.906 66.4546 137.824 66.4546 137.682 66.4897 cv
137.291 66.5718 137.246 66.8276 137.246 67.5366 cv
137.223 74.4331 li
137.223 75.2124 137.197 75.269 137.117 75.269 cv
137.025 75.269 136.883 75.1401 136.258 74.5132 cv
136.127 74.396 134.432 72.6655 133.184 71.3276 cv
131.82 69.855 130.488 68.3726 130.115 67.9468 cv
130.266 73.5835 li
cp
f
141.41 73.5835 mo
141.436 74.5503 141.555 74.8569 141.873 74.9526 cv
142.096 75.0112 142.354 75.0229 142.461 75.0229 cv
142.52 75.0229 142.555 75.0464 142.555 75.0933 cv
142.555 75.1655 142.484 75.187 142.34 75.187 cv
141.672 75.187 141.199 75.1538 141.094 75.1538 cv
140.988 75.1538 140.494 75.187 139.965 75.187 cv
139.848 75.187 139.777 75.1772 139.777 75.0933 cv
139.777 75.0464 139.814 75.0229 139.873 75.0229 cv
139.965 75.0229 140.176 75.0112 140.352 74.9526 cv
140.646 74.8687 140.707 74.5249 140.707 73.4565 cv
140.719 66.7085 li
140.719 66.2534 140.754 66.1226 140.848 66.1226 cv
140.941 66.1226 141.143 66.3843 141.258 66.5015 cv
141.436 66.6968 143.189 68.5933 145.002 70.5366 cv
146.166 71.7827 147.451 73.2241 147.828 73.6069 cv
147.701 67.6265 li
147.688 66.8628 147.605 66.605 147.24 66.5132 cv
147.025 66.4663 146.756 66.4546 146.664 66.4546 cv
146.582 66.4546 146.57 66.4194 146.57 66.3726 cv
146.57 66.3003 146.664 66.2886 146.805 66.2886 cv
147.334 66.2886 147.898 66.3257 148.027 66.3257 cv
148.156 66.3257 148.545 66.2886 149.027 66.2886 cv
149.156 66.2886 149.238 66.3003 149.238 66.3726 cv
149.238 66.4194 149.193 66.4546 149.107 66.4546 cv
149.049 66.4546 148.967 66.4546 148.828 66.4897 cv
148.441 66.5718 148.393 66.8276 148.393 67.5366 cv
148.369 74.4331 li
148.369 75.2124 148.344 75.269 148.264 75.269 cv
148.168 75.269 148.027 75.1401 147.406 74.5132 cv
147.273 74.396 145.582 72.6655 144.33 71.3276 cv
142.967 69.855 141.637 68.3726 141.258 67.9468 cv
141.41 73.5835 li
cp
f
152.242 69.6987 mo
152.242 67.8647 152.242 67.5366 152.219 67.1577 cv
152.193 66.7554 152.1 66.5718 151.713 66.4897 cv
151.619 66.4663 151.42 66.4546 151.313 66.4546 cv
151.264 66.4546 151.219 66.4312 151.219 66.3843 cv
151.219 66.312 151.277 66.2886 151.406 66.2886 cv
151.934 66.2886 152.68 66.3257 152.736 66.3257 cv
152.818 66.3257 155.162 66.3257 155.434 66.312 cv
155.654 66.3003 155.84 66.2769 155.938 66.2534 cv
155.996 66.2417 156.043 66.1948 156.104 66.1948 cv
156.139 66.1948 156.15 66.2417 156.15 66.3003 cv
156.15 66.3843 156.092 66.5249 156.055 66.8511 cv
156.043 66.9702 156.02 67.4897 155.996 67.6265 cv
155.984 67.6851 155.961 67.7573 155.912 67.7573 cv
155.84 67.7573 155.818 67.6987 155.818 67.605 cv
155.818 67.5229 155.805 67.3237 155.75 67.1831 cv
155.666 66.9917 155.549 66.8511 154.91 66.7808 cv
154.713 66.7554 153.432 66.7437 153.303 66.7437 cv
153.254 66.7437 153.23 66.7808 153.23 66.8628 cv
153.23 70.1128 li
153.23 70.1968 153.244 70.2319 153.303 70.2319 cv
153.455 70.2319 154.9 70.2319 155.174 70.2104 cv
155.457 70.1851 155.621 70.1616 155.727 70.0444 cv
155.805 69.9468 155.854 69.8882 155.9 69.8882 cv
155.938 69.8882 155.961 69.9116 155.961 69.9839 cv
155.961 70.0542 155.9 70.2573 155.865 70.6401 cv
155.84 70.8765 155.818 71.3159 155.818 71.396 cv
155.818 71.4897 155.818 71.6167 155.738 71.6167 cv
155.678 71.6167 155.654 71.5698 155.654 71.5112 cv
155.654 71.396 155.654 71.2808 155.607 71.1265 cv
155.563 70.9604 155.457 70.7593 154.996 70.7124 cv
154.676 70.6772 153.514 70.6538 153.314 70.6538 cv
153.254 70.6538 153.23 70.687 153.23 70.7358 cv
153.23 71.7729 li
153.23 72.1753 153.219 73.5366 153.23 73.7847 cv
153.266 74.5972 153.445 74.7495 154.598 74.7495 cv
154.9 74.7495 155.422 74.7495 155.727 74.6187 cv
156.031 74.4897 156.172 74.2573 156.258 73.7729 cv
156.279 73.6421 156.303 73.5952 156.363 73.5952 cv
156.434 73.5952 156.434 73.6909 156.434 73.7729 cv
156.434 73.8687 156.338 74.6675 156.279 74.9155 cv
156.197 75.2222 156.104 75.2222 155.643 75.2222 cv
153.863 75.2222 153.076 75.1538 152.736 75.1538 cv
152.68 75.1538 151.934 75.187 151.586 75.187 cv
151.453 75.187 151.396 75.1655 151.396 75.0933 cv
151.396 75.0581 151.42 75.0229 151.488 75.0229 cv
151.594 75.0229 151.736 74.9995 151.842 74.9741 cv
152.076 74.9272 152.135 74.6675 152.182 74.3276 cv
152.242 73.8315 152.242 72.9019 152.242 71.7729 cv
152.242 69.6987 li
cp
f
grestore % PSGState
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 12.0
%%AI8_CreatorVersion: 12.0.1
%%For: (Swarm-Intelligent Systems Group) (EPFL)
%%Title: (logo_epfl.eps)
%%CreationDate: 7/25/2006 2:43 PM
%AI9_DataStream
%Gb"-6gMS$'Fs-W65l\Wd#2I!.O`?Fq(^;lW8WUpY$i2X=JMCiZ.TNt5U/XsSWnm7YkO!YWT*G:uZgJEn)1.R3k]-KmPn;'NG%P:'
%MKN8V,(B0ZWt1iZJ,T*>n#ekPb>0b'CDW\UMbqPb9_IM*+8tE<^A[/_n$Y/\[[\l)H!,O=E-o;M20sME>c+aPK@_2OJ%C.$rqg&M
%r:'R-GMaE*]_h3g]:W@+o[WC1q!-jg^3TJ@_]LP7hS"76#Isa%GNlTGDr87=rUB@Veb9mQEZq+I^V0L9p>+=bqfMj6Da)%MQUL?4
%>AEUcha)$B\Y-\@rcdg<^\dZrRpSFmDnc4_HhdS%qPO1V55a]jpYWkRTHaq.H2Qq,r;5NPn%Sg@:Mg)2Y.shR?bZ@0hu<9n4S$79
%/5?0@c2G-??@Dj.Z-_cI\qkgG%(2DG7st@A6oQcc%WKqG`E17EP-Ra[,.3*>E`&UDCb\n7VPEP'%r^A'nL#.Qp!'P@hg?+P*BnrP
%X1/*JL5_2jOto1,CTDKn00d-soC4d.hgR4'4T&Jp<;lI,f5KM3[sLKOmp7.Y(:mcN.<k^de]6R\q&Um__n/_%^]![$-PppQmpJ3E
%?N'-5a5J=/s7X_7?[qk>e7Ak1'PiAN!G:>F9.=+&+:k(N\*_&C/FRZP:+,F<,M7Z-NemV\0459=rpfCEhS0#H>:s+^1qIX/S'*Rl
%J,Ad'f6pt`^Sq'_7WV^fs%WMdVZ?tYJ,eZENWQ0Hps\*JZ<[D$=7VAYruNTXrN!DX6KdZ'NYb+E=)Xa9f<;o<"lL5-L"Z<hMlT'j
%:IM\-^C]mIcM4_'r-:CS1^*^s!e)'iIN&?<H[ADHo4'f@D)pXSSFO%Xn[=s+Dme!Dn=J5#*l(UIa'6I9>/T+a0Dp[9*KPI"nVE5I
%O8-uiM"f]]ijZD+3Rd#t[s5gX/O.1Ejt:_9pmq=75-!Lq!0?.n]FDo85OgWOQ]@BH_a36W]E\[q5ABJA%Xo88Kg5)@%LR\p;iE8F
%)@(s\C$bU"JoP&j<lQT_!,ocKiD7,Lp(h't9@S7,1uj`rKg5B1*^($a]?e1NpJ^6tWq7)+LUZ4ZnL$66'?MK^mptGI&%i@lW&)\s
%iJ2E3p_,mN!1=>dVfWtGp_.S`1#c!#9I:QF0)#A'WO+p]=%^o?j"<+TnMWk.ieBtL"/*q\fD*VG[S@e!UAs^(*2(_.%ZhapOn70a
%7f8+P0s0IQ))(nArks/&JFL'H\T/=XO5Id<Y2lZPUNB"sB9H\t:aXT#AaFL<)#*r?7NQ\Y-Uu.sh8e:BrS0Lo^u+`Jkr^aO;`;rb
%,D_i!V121]Sbr4#G[.ego9gf'o)Ve$nj'*@HG!1?EdjWt`H@d^m$"0-*q(N)mV8*]c.k!;lJ+`+n@+3G-i^jBYPN2:(F+Ft^\Js6
%Se?\PDuNfFJ*t)I?`j7:<dT1YItn,UeUR2*X"42)J+GmLr;)jJrAXbg\`(m52ud+KT?);J6i>'tbFeG@s2HeiG`:l(Y)Z$PeGo%5
%\Z_&!IS74(f?*&Kreu?eJ!saD'E6nE?8&^9M)QOAqSD3#Hi_[hPIl5%nRH7kC8ohSs7j+]nG%XF9",>](Vf`c>Bq@Qg7nh'+99j1
%>Irom!=*lP_,']Bnqr-YW-`nnpV6OorE%%?,C[Mqgi%N:r%7mA0dme+J8+@0/j]ttG\"qffC4X$+J5!\2#`f^L(SEj*o@M,D.>eU
%bE6Js$g)m.>Bp84^$tCRI+iBQ`X2X(s+qZR#SEB=7i4(E`2!2"<3h)@p=a/tM0,?#"5SR<9BU->DT>>%*n'f#Uu#;<f8niH_HSM(
%"XN!s@fG!oahi%N2!S8T)=c!XV9_)kD4(co!`t`oIrSl9Ij`I$FGXLW&s^c[2CT7/"R6]C'\\Z@Zf:(CKkLe2W4V1f_\A\f^PIfG
%GQ$e63Dmfq\^G@_2U)NEB)d0K>;#97ES`4(.j^9P5W^Urid!a3W0n5`g)Yt:',(Q;rkO<=2kFKB[*"+Q;t`<Zbr:i7dYI#%]Mb<C
%4efR<M5\mkW_)P5;;J@)\gZ@7_WTpgN?3H_NpDq"<kJTg@N@C@^gYr3'[t.5X<VO+31lW!=T>)8F@HEth)%1XkXC\8Ra;Am*L,TK
%$t-/:/15`$+jKbL$@5M>b]@c8_5n'0XmX(mU#?G:G\A$rG[gNXHLJCTSVd_C+)*F;/8sZK%R7"a<u)eFrA]4Lb,Tib^3c#C\c9?T
%=OVCL$]E4qhJ53\1?!4r3RgYA8b?FspLP<lio97&:<5Ga+.NjOVmU_Wp*S$GM<::e@a'n\EmLVURH"@:RtE\26cE;bJVd94:W`Yf
%242=/3ihM:bEH[LX2Xd-T5(uU=djs10&Pmh4f%P\K]=t#J#)E)329I7]hG*)Pg.T"DBK""jN*#>jNE3.W[N];-e!mBrs\X?`Gotl
%pDD`\81gUfB'7%IWoUFd7<&:1oR4>tP]:+]nu3,W;]0c$Oi25ZVnnue^2&/.n92;lN)M.rIS'c-6g(YUel\i!'\7_J<>P"9C4hM2
%+4bY^(jO`DG`VZK>"-U+$nSa8Ftd1/._EfjVtqu.Q";$,RmNR9X5@O\rYYTGZm[u<>AhGEKXRe8asVEG_E=2k?5Y#"B9;I^BBZC"
%Q/#MW[9d]t[4`:r6iU,&#s-<^>[paE=Lr.C@LEM>cX083?&qm,A(MZT+QiQs/EC]8DDfun9G?Q:pbR!0NYZY?"W>d\BuI:qB6ac4
%0^#uZTXrrto=>KU-HFf"+F@Q:lkiiZ8@Fm%3BG`eB?K9-bbL#<N,G#TO]^&gCiDH#R^*BI0]P8WbC#&AGqekF"JNCVZ$E$.lS(3p
%Q9&.?"5BoHs)L'foDPU$R,>ml7G#I@gQ343#ff!qg'uC!OgWH#;;G4#UhQ3_6rn\#cWIuBq+SjA`.^VZ++qof\Uco@U0`nk67ZDW
%YA[V-2)AChF%;(ZWbWY'kJn_'+p*]%dF\[nfkR%c#u%S-\9]2J1Y?i2EdaN-kDr!'j[=WI<&uq`5fCB#m,`V?cq+qhQ>Q?cKItXm
%K\n.N'@G`$L8/Yl:9Dil;\&[%/\Bo/<55,#-ok^qI7A>!;G_sRpP^*!lfAKD&)WemVB.Q;Tf(&G5P6ru5(MS)\*3V1:INN[XN5G#
%^[U\Zm4;!hO!'^`2<pNQg\A6?BF^u/`;GA_c&@Q`",C'jJ]+j3g]$]pq"UrTh;bhZlg9LJ,TN2F^u(mp*;Gi\Ab$bsWjLW:_kGeZ
%Jgp8`\MSnXM*2\?CM6MCP-#iYVN=V%^-QNb\-_M]"@38><T;G[XuoGgh!f[cnc&N4e>O,mLF=tB4ecMlV%Hk_SAMZTTOU6P'H<ms
%_2bT!Vj2.HWJJ967&%UPkdDG%=h7>3.duW2oB[Di:rcj?UfaG4Y8\lKr+<Y&d"Vt=N$h8R9g.55Jd8E6OX[*cJXcYHi`8:]4)[/P
%4'Z2^2AR0D34">AHDJPEKh=<F9?(sUh!7LX.#>VQjC\COk<7cD*d4lJ\#Ls16c;cU3p%qq9ah:plWV?-Z\p`M((@<t+@:4A23\2(
%dI:7,@+mm)B-";XIB5O2SqHE4[/lgZ[V^+eDma)'C;uAS+Xsk"Z-7#bLFKq(F.uTJV$kq9Op=+tXNU5GqIC3)EC/pWrOl^o5f^H6
%_i//Hi^T)2@_K4l9KT<dpDCsD\XkTlV`sJO@`B%[?1D_WgkJ[_l<"io7Z<a$Ikka3*q]@51R(XFN@UKaKcorW,)^/4<CTJpn#]8'
%^6o'4L^!4c>YKA;-T&#Dlb(F$2a.&7@T)Zf#%11o6&uGS2rWfWS!^H[&#`):6/CYU[[N7!@m#fmOSegYf,F#u5j@#"VG20D'T7;7
%/r`9J1cB3&dDjupNi,uIV8VAsh86pJj7[a81=nI>_!C+'I3XKk'o>1S=/2J)l?[4*gkp4tmH&59XK8=hd<*gW[<Y'/Ja=_KYVSAA
%pPn%4JZVk3oXL#m?\^ltUR`QO\Q',,P]AKlk;9]P.9gpPZ''(E-n7L!_.j!u*K:i3"mUK%.qG@_*ApU(AX0>pW!\ZdGq`D66Z5GN
%Vd`hda7T6O>N7+E[gIK*`!;2tDr2QlYgj]A5p1LH44Q*#Zl[9^Z[OtE$)XtP@In[)1N7Lq"N&<6*k$fVAbsH4fgW?(I`I72HWKTC
%H<?Y+"*t.T0f3SoUNAM7IRKN?C[1=97:"Ol5!<de,:H!]+hA8G.M&",.4hg6*`s;a.F`:sLU:u%kp'.d&r_*Q]5d-eUg0A&k@,SZ
%d]WN!o?IhjT-#)D8=RF4\mZj6EK$Yo&lK*2-I.DiF;p"VA!#pNDA<o(gX"*RT[MskkIV2K#\hjJS+"XFr*@peWY`8\.M`.3:rT/(
%f7kc7Z-<aENm<Tmqkl:d%TI'cC0gNAL5F<g%'#_Q<,5\5Bl2=uUNRbc1n$sI)KhM:K[NSg_'BVHR2QT9bsEXLjY7c3_Kp&N^8Ao!
%+,uiU9BUZ/D=jMfg)&9oep/MJ`V\APf>#oiEGq9JDM5U/(WhmQYOl+9,=.:nnRXasU=.qg-HJmZDu/lk]LX&WGO*Yr@pRLb+ko*F
%EC#PtIB]HWU@)eF7a=q]+)Id]hq0#?.YF4?FS#KI>`1"[*^AH?6;h'FaQjOinaXN/&&4<HqZluc=)YhQo^,:XKh6gPrp0_LnFf#J
%Km`^UBDc'6m4[=EJhR/tj+gFfrn[Hi5.l:5=,3tDr6q-n?bH77pD6p"hRrmb],tAcN'CY<,65E(qh"r'?bQF3`t($&l]85U_oj]^
%r_NRlk4SK<]E%e8^\[Trq_sRMl5-tSoAf_?^ZTK`r:Jh607NlY_`R1ag`Ts,Nt3>Ik@ad1?=Gk>?3"@3q)3\Lp$UYjhgKnFmI/rH
%T!^fYhHk<`fuLc!=0DqrZT#&%ZBssNq"&_@,5Re<n%XTIM"!Lg52:XG$hQ*$p%qhJ+rKd]*U\;Ks0(=-oASa.0Xh1uH2kdOG9=PI
%e):LV"Y]cqY<IF4.-1<jrguBeHi)WIa2n=d^E:qSmCQFAL[NMZq#([$IMA-_HhIBg`s_a\H:*k[(U$*XD57o_HF)kF+?;s6psiI/
%AS/ZdH9^9V[i\t*r>((W:QTj.J+_t&=0LMqH1th8h=0rD\UXq"IehtF?bZ=$QS372D7qO1q)7'KgMlIsh(AE-2`E\I2ohDgS&7t4
%WLt."9tH0?iPscbRg&H(c1Uc&nbVPIE8@ZIBSh,-Y2aZ7##jmBTa,tX3F3ega/e7ZfT,W,Nqo'&&X+A.G?h:gYAUMG.1Ld:C01).
%>ii#.'sGK>^N*E!iV%53\3:lC=,4]:(C,nVQU<s46Tg$S5IeVZDVImtDT?qN%^!.m9$8fofL#2S[ADa2RsJA$oa8'1_p&6tY,TDZ
%.eL!W$FUWtdUTg;LXJdHV<!e3/>;ju$@(D&-=>qG^<25dEm5onS8ugsqs6(?,O$O\Vdm;1cpodGC+:[1PTlr+>QW_"DrPn%`iF??
%/V7Sq3MmX'Ld&D[K\LGZY/;u!KgTOIL(\Mt+bgQ$O26Ohhte:Am>q7h++3[ILWX!J73B2:c7eV:h7.6EFB@ngR]EU$m#m8Z3:Ch^
%.no(,e$/mF?bTVB/IMu'JZ^TOpraJ'"2IRFN[J!1pp4;T@Xc$!>("?@2D(6X\Y-oSC?\-Eouf"%E<ed5Gko3^r91Uk+,Ltfn].]$
%\IN8T/%qUpX3GcLF'YEKj<(b=s*&hd\m8';N\:s"DK>P/=#bIo]V*5'^!`<!T=dF(6&XjC<R4oe]P+lbN^6Vi&/bX>7fs?D"et&r
%7*;W=5eM=Q1D.Q"`qU(#T*'nC,D`*6)"[mhab-7D+L!U,XpP6s&7CMaS6^bL]8[2S3"M`9K#l+XqC7<:",Of=Lr:5LrW48VZdB@Q
%Ad6Xc6%g:EQl\Plh>dlu&@+J)cuTf;D?fW85n"i#*$7HthZ,,A&CV]=FTet?ETK?>nH4U=,J%-1N!7/4#D!s_n7PPt\<Y=466AKF
%>Q[RT[KTWa#F,leF_";l'i`9U<6>ePb>#T3/>-`?W14-n-Qb%0dr;i].&Lc&mG"ZFPa0"85(`&lTY_&7Z3DfG$<5b;&GYX4!HmQk
%m6sj$):W$tFa*noGQd\aKCugK/j1W.#RWD`gBS)YE".3uom.(CIXADOb4VER,H0N/Wji\V>nMkI&5>6\_FScIBVqJ=[n!!!&Gr)L
%4\Br]^Gu'#&]4QFWoo:>ls=M#'<:6!Xa!#U[_M=c[<PGp4R.M6TDHblFTrYhpqRnG]qiXD\X/0>n@[AFH&E7f;H1tgrV<k"oD9ij
%f?Eu8q;P&[YF4kPo#6r??SgU*jbke^^1P+2b84OFIEd/CQS6(kqc_]A<.gcXnC89/EXfM73o$XS'@D;q<<h%+$+oPFXYOj3:Y96N
%CR'JDFi#d.>c[5QMc4fPk?;G)I@[Uc*k'58lIp%>LFe%4/XhH3WJBiN6bf;5_rSCTi&[IDTLJkGqLRtpJ]lh(B^q>)[QJN"p]h4@
%Rt3_A9ba(Qkf51Ok;?V\`5HtZk<6N()OBQ6oog3!Gh0KVqS/rJ"3,+'T#25FGlE:1+1U@ICE?o2hO*-6?\Ig7,&NB[mQSMh<T\b5
%8@[A_@"1=<,[>1@:jC;#$!1=>m&t&ZKW?[/L;Pf9_UTD(qs0Xoi>Mqkma2l]$Y@<Vs+o$5.C?F"XWDqBBbb>hi<2B2"`M="I"2%?
%I95=R)bNlC4g&A0ViFKB]hM[6)SQ[;)<kuekUh)1d^e,.-(bh+''Ys;FhK*(=upjH\&;dBrXq-^(;E2c\_Eo+k6RE"WLI*m%@t$;
%gUXo`3Ao'>S]I(%]mKGOomaOIfn[$Y0ip8^KZ<qW/%YsJJI>\bD@b'U2Zkl-!T3:DdK1]3"2<MgV$37P&,:$<PnkJ[*q8!W.P8I'
%H,+WNWjEnTF!iUtDmn$,Z7%X9@:=MCDl(AF$R0ZH)1>62C[_uDq=rptlefJQGk(HrMsijBHh6se`V1H=I/EX1/'7mbq%d;%Pfsr<
%oWrZ5:lJdKBeNi[W,8?>OlEs,l87+l:?`6l'\['^;u.^G1`BmSA3+6n/@8\@;BsX8;C$$30E?YRR4aUWOZ&UgOZnmo1N!".M,%as
%*RLfRUP\P%2ak"(7(5^tE4pW"oSXF=Ll.=T$diuAH;6lWr%H.QjVe4gKD>a(da,\U=d&*0:SsJ*p]=+-5Oo/B]:_T7ZCc<:Eu23.
%qV1p.(UQ/SQd<Dpi`>43T)&&IR>OKRlVC7.5KtW;lP*(K.0%5$j4H_Wk?\*$s+\Tg-5YX/@W,eET#lgQ4n_@bo9l-4dpm<,i1J,J
%5!AU/:<8inkc*4h-AJ8ZNFGtT/(k[!$?CF(S6Rb!cm"1(^rYN9#8HgfdB5"1%X'_?Wa(',1=$;qBRD,<7+-_@VO*Xmfd3=E0^83r
%=-*M2g6)C'9!3eP9s/5t$CEHA\iB'9;h_E4l7V!`'qiF2#UeZ@=TuagjLX2R.s1oQo3YR_lS,m'm],R\>-)88mB8X_dc?kYCh?hJ
%=ZCBoD^Tm,">"1Oc<4OsYIME+Qipi1J_RNqHY#:EK=W@^[ZFZ[@C1h]CYY)LINqfVg-oZmO_k5qWpK)I[=turO`&`.db[:l)lHn2
%h)803Lc*I0q#E@jI7Ni3cl4s+7t;0SN$/o+$U@EqGJqE,j<Jo;k_4D<>EL;bj>3I\E(-?#q@;^P<6mWkAF^oWm]f)j=s/=3P>C-A
%hGN_)o\V+1;m=]K;PMU1;:[um8fN3Pqs:=KT]H0PiYHdo;ag1ZPT>_WOTe"2<H^VdO":9WXKhpCpW*E/a!s/IEK;XNH>K;^`:Y>_
%JBfI0-GoY*",mI-Uur1@id-mQ%59-mj7<Hl4nS8daC)tjN\k=OOF3@eZY%jm/.6W2\LM5PV+>EpRINhI2%gF$_LU5`5]0.64(6&m
%![j*9.O:+E0]Wt*XD8GV=9u?3l*)BU(J*U5@8UXb7RH['K]Y-J/$UT\X=#G78bcn<=(*:=,W?@c=2Mc),fjoGAT5N+JHUHH78V'B
%DSjb%UcPYMQ/"-)K-G?3C]_`T7&m1>P:LosU9PNXV8r?UL0CK`QJ'k&Cq2)gI_]#.>ll(b74OWH`T!nSF8%g3ktL=s]DAI>VqfEH
%3pLp24nKC4S_?"ZFo!.sUQ1H]f.N3BL<$3!5;g+Gl0T!'hbY_Xs+9se&03W$@>pd?'L18?:Xgus@O%W5EK_p^*OjV8aqj3,^h<m^
%@Wi;"3t%_Is&&NORX`ia;8e%MH_A`f^/o1/FoA9%#9BuL7>0r0XKD`m>.!F+A.4/BM-&,Xl_kYYfX6fHMqPM2?&Ml;!ZC%)CN6s%
%\8.3g$Jh!"V3r/hmlFXa(;B*jXVFr#VGcY-WpAc)a&FNO7<O`SHa$E4.B3dFp4u>;H*l>k#L@`SgK;TcSd`"'YRg>UpTj<m*`3FF
%:k3>IH%.4NFWuc4GT0>Y&tX4@h).6r0GJ2?OdNO_)?\C."+0oH'$EHEs)q2@X?8K[mFIV6:X1r_pkW__mpK4\X3(V:!C[NCmtuc_
%\TT6S-"#SDg2DgTD^aUc'Wsm=A^4<4"muQcdgmE\j:QV>(9Z=sFa',0g'2RKL]]5`+b8%Z2B&YW>&^?qOj.LH)VSq@S$<D^3QqnL
%*J&I#Fmq"*](4uU_\L-8<Ne5qHrJEo.hD;b't)_?WBg)[09rorQ64>L>DV!&UM_pSfR#[kOW;Ju]-\H2-0f^8bFpj2#/+]AfWOFV
%l\fVnZ)p66FZ&HDVj%BLkcG;7<U5q#\1_@n1c+T]UNpb^^0_cQB&[b!]Q-,(f448sN:+aA!J*F$j4f$+-Y1e(2soedMuX<1G@YY`
%-s!Qr8CSrR4!isRE5%5]]rc'Zc3[X1'B`ofSu@:),da/b-LFRN`_G.*;7;UOD(K6;9j,M8/><1_$AQ7!I!6N0=iXONOd.)u6IE*E
%Mm'3TH++BOD2`$@AYBt".akV\[;=$4\'^La]EKmfFj+D9FeQ=g?Xd+:pL@8,cLp'GTf,QdSZR>\.NN/9`lAfYc^0GN:t0liLj<=.
%r4(bI7hm-WV8_K09cd^nf=*r?ki]?<3C]$AhW,5"-@9""mXnKBXJ3XB$`hNfTrfItp5k("E((6.'o%"J#&dgJo@GD`T=R'nh4JP&
%aHh+U*cT\oLT8Q?:-3BXd#YeWPI;P"/WHd[+nLlY;!OX#$"=fV#"Bdg@hsgY/V*4C(GfZ5:04NUeLGI#Qbd5]2k00X2F#*aR3>)<
%&Xl^c-AWNI;oZEm=L;\af3Ct?Zfc-aG10KXok6'YVfdGISk/TC1l=P)Ld_s/&%Pl_CfV9F@(1$SRauUU**l[eD`#HV[8#u0-I<24
%eM^Ea4052;)LL[*9bNS`S6_F/`&aonZ&#/djtuqc@lrQ,DAmT.1;E14CXX=s<fgtiUpXnI7=;ldH/dPbLE\oi00O;lg-ZGoP<J+#
%a7B`1/H-jI@%'ZYkE>#]jP=iqe&kHj;EZZs3jhH:<,'aTMM2hTP+Q"1%?kq>>WORDn<XM^-bV'>>20#FboD<G\Mj440+m[!/Q)U.
%W#[>E:.(cehofk+Y[B1/&M!d[J0XDJ8m"hl!i?\&72[%nj9(J.E=S&u1#0CACL*i=<cCWXKN9dD"/\+jD]E3:2o0;Mo,eM!.O,"<
%_X<\D2q3F:n!?\I10K&GcpP9+0g1*lj8\4mWlHb(b#Pna.('#@U@Q&5Ps<!]r%VdB:FeYZ!a5Pqs6&d]M]^f)Gk^?IV!%7m[^d_q
%rjQ09GJ1SJS*Og1*V=q!p$]?$AfKOL2T/a8Sc^S8?h7!9k1fOH1E67B06_#<TP5R?>pn426Ao.65A&m6dhYA9I@94rQ\%D9:Q];B
%A*!H0"F6"C5A*KJkMKe10.hWmMgs3@o8Q;C/!EEPA4nZaiK^Ht-^AnYN%ScS(FsK#U;V[!12HEcQ7Vc.AM$a0HreR%J\<UGaQKj1
%f0bDb@E;pNU>d`W/2.H<^)5"K`tDi3*[ZNuL5Z>N`f/k;91\J(.%EmI_JPU#o7T8.aOrmu3CCn->41l\1PfG%gfPong@C(jn`BE^
%s0^gc_c?J`(>8:$YI(n#l3a$(D_GdD?fX=jZmP'4ZC[QOjU:p51ANBhM2/77IR/lnB<K/$0?W#ia:*HnJ'd2SJ+`CcB^mmNr6O2n
%6ku;)U!R]!d*n<jS\.-rkCj/DTuEo^5!![LMdNiIBbmUk6EKu[fDh*O^[U.0j5GK%nLlKf(<oTA)\&pU68f]`@q:@grIpORg086)
%TnS2d("uS+-:,h36R6=gEHiak%2:'IU7i/.N+aKJLI?GRA/u-tJfu8_a)K+0im0!)+WLu;q8*1W@n<C#7J?DE<mbWh\>q[GQS0U?
%[#Y/fX1h</lJ#mKnQ`96BpqJ<q8+mKPKMWgmEK-AhW/,,9cPXQ*a@IM=.QHoQV!`HfrZ4B<FX]?@?Xm:Feg)BHlntF<=O4+k5K=i
%rJAqpBnlW'-+o;fRY+(WDJf!(o&BK!qY+cFSaRR=JGlXDATQthQ*qL9(jB'6>^gna(P#[-8seBEMf8?JE4:aFYP64\Xn(q=pQJiT
%9WYIH`"Jgm"HPiHIc51-*'BfDFnoh,qK]bJq.d<.H)td%+os(O!5.ZC<lJ5IcTdGTX@"T*[<VBMn`S#L#EM'NpB.\Em.E3)*\COQ
%2S!r''[bgc3?MkhWb&T`<GPs"<?CElW5E@)e-"6VUmHE#iE1GOZ`14Y.PRt,dn6jYBV0%U?G>&lg8ujAVDVdpX28OGe6Q),UgiYX
%Us>A]s'ra'#CN\rC<6D`.K1tNE8"ro5/5$MMN9nip&]>s'>b*\_AY(Sbj9>U(T%:X!*b>Q4biYig1+i`Q)!@%4f7q_g)#G@s3L*4
%1?!33M)A62,Q:8+HQNls,@/#O.<sh#-(YBU$-NQkPE"mA/`gPYH!Cs7/gE(F\8g?8gLT7gkRoG/Le2O,mP9Kb/onT-O^5t,PRlWo
%D5Q[)R"4nS>AVPs=Y@CK@sdD-gXT5eHC9sIo/*\#q*99#M+:7UGCdMmoB#IXWV>l=]__7R(U*i4-e^7mp%cIO(_?R9<IS=_5B2IL
%FSR$X`1R&Kr;FqArSp>Zq!#a^ribGCl^%nWLL9'8]rcYY8?Lb-7r*VL8@RBVT;@V;q0g!l\k!]s=ho!4e=F?%_S^N2ItZFo72r,U
%d`2V8;p?,p?cKU_$Na5to[dkn!'[:B(_VUZU:*S$iMTqS)&FsuOcm+4qMXdj<tU,>e>ITtl,N1nQQ90"O]ihgD118`=b-@%h.]$L
%2MN:!&?nJ2rQqJ=h4#J7O5Ap$XF&`8Ys5<QY`\-:ERbpnqQfO2Vid!&I2,$bZcg_[hV`TnU:[mq3mI<PCA7mGQ6"]?WD.U#UJA0[
%eOcEtLVA`joXmB<qmbm7-P-'PPAU9,DXVnR&*kI0.A=LuY#e!HTOENul@_@O41ONsV\$Rl=a.H@@"2:*d!M`fD$ZGI^T@;q&454H
%];&E!l?DuOpF3Y^O#l)R8Lk2X,[5J[;[Kbtc<;.9JOo!r:*fZoK$Y$VWo(MSG:+%"W&&>i[VkP[Xdq?nZC[>h5T#9f6,O$ue-UQ'
%GAu$q:*b5eZL2htZ(X7%'I0CBg!K(h-IdT;2N4MOlZ8^pofi(us5rF$)c<ha@P4_5\]-eH])V9aRs2&ba1F"s:D[9eH%Cl#5?#U3
%$hsQ(1dnp<)RM^Ls5ik`dA0!>9hM7ed<XI_(b@UBUOTK`moL%op4eq+2h*&@X:7,"\-.S<Zo%gRdO64s`n$WFcdHXRQ_ao$rFiD"
%:QI/N]\BaP*L#6@)K"5kMS.D(-_*+haiAX/*-A;gHJI]$?e4LoIY%k2T8ogR5Rtt="-=)^;mQB6/o(cj[h)FiESVGfL=(q8BC@I>
%#%Yd^;1\8#L(6p2Fo)ILSl<!$&-cASQ3+F@RJ`4k+7nS,_+\>6-a7bs(([b9@'D>tmH5<od^$MR@HDN$3FBQ-1,AP!A&@&&Z62bJ
%nIkc&!$*L?m6=Wb+F<Dk_8$K"E!fu/kMUM*'-M3JoJ3LR3q-?,F=uNnE&H?^+HRg^L]UU$oM5c_5O87j4Vi!0XZcPD^=.V\0:7\u
%5P=V_BEj^[K*114$N&-o"r4(=L.3Z&/,RZ16n(eW'7/u[;;QdD$,V3Z1d59$(=V^CMXCnoU^=fOh64GO,Aer-)8Ll,5cWOd*a-R7
%_IO_$Z]oX*7j_6'Yd)K[n@3ph9GLhUN)HHsLZ6[Ugji1_MpuaqFHRiq@?nA1&c%+IUDO!<<V1>%mF=C\*E8Ct%eOPsjRZ!2-rA7o
%DbUB`D#8L3Es)!G!3P<aj6e/:XH8&9H29>FN[qof]?_]2)3>,`DCR+'5EE`t0HoYI!%TYi5-MK5JAO>Z76SlfmdnML$8c/mb0JVI
%s1FLI$5@J&Z`MSA5,rQn%EKc:mA-B5p?3NQ]"h#VkXpIVf$??`AdA9H&Z@t@X#j4jXN4r,cd4XJVEUe@&F>=q0eK?r[NAqV[0l%2
%#SrM[3(/^4KXCafG+`(#4U,0LI0KMpHn!g2Tj7G/,$fa#/1o4H$%tdnIeVMS&6l$('F=>2168*%g=q&\H429`'F7/oY/&<(K*Xa(
%]D\88W6+Ul!Sq>Vcn_8q`9_Z>$P5X"L2DNrb?!n^c>mH]d>oJT9M0EKng$luj2X)l)ID5!gV849(8)aV^&PQkIIj$>a&?>Oi*Kl#
%!]^[%!KR>LGr3e[M5/D*/N9fg%kq^d8%F*)$Du/+:"n?kUXHb=YWNC0bsD66OY]j"O5-eP[+)mq-C/)SC`+'%aK,dm&4@<u@&0_,
%&>*guK'l\_0!PID7^-&*2S=7\',lNJ/O<Uc8HA&%W2JOD_CE6Ub^Bo]pJ*a[@LN_0Gin,:D?>_s&&K38TIXRHEGR8Tj2Gqen/ga[
%Ii:;8qW$T)Rbl**T`.1AYg1Nm-^)rcKJ8LC$!6iNiC01/4\WBq4n=+^"I:A+Y1H"o2ESAKid6hq@tVgJP)^V=9E4elF`NMNe8To#
%DJ!gUon^hrOp!-#-Stf(e&,SrUt:-^clWK8F\%'^RXJS<rY(?/2-U>^B$2-3EL%_T_Bg\dhWnqg2WaB4R=<Uo8+[R<pST^CP%Y&h
%U4!4CAs@6Yp$P?&:6V?321a!tjp:irS._7Oq[k_t]a+@Qe)Ft5>tD%"a%AmY-Chnq!bN[!Snb8'm-WC@?iQbupXMLAH2I"M`Uu,#
%%&:6<?@W,F0nEd<8#%]piac<$S3Gg[gU;Gn!i9lXe)lX*TK[f`CNGY[Mk9QDio"!uN?WaX^lu_+`)A[Jaot-MgsOK7b["-i\DTVD
%_W5CNKE'q]i1dO'_BNI%:LVu8l='0i>pr#fgK+p&i"C0MjP4ZhSef'#VnZRFK9e3]"J/g,c)@%\i2GSr!NUE7AkIM0O:ceNj*_9`
%#1jlVi+o9b]RBJ*n]0Q-S?E3uMT.7G/g*QX)BU"FD)!f_Fj_N*o_Lb*;01$b+%CoR`U3N8:I@'q0:^pm>Ce";p!"_m"*Cfd27aO2
%6DAUL7/-E*:IR3#QI4@dHG`Gq=I'=+1Cu8uj/H9.alq0A`QHg,E'#MP+2R/22)Ah8`[=[XAQSpFrM9T<?%"\a@9*TARooEn?u/0[
%%!^EmUOrG>"_s7%a.o#9GJec.2a.8m"iC\$"s-C!^+0cA=K@;hOD0!6!4p(j&8!iU/Yf39N=)I.F':_tJ2b+NEr5:&+W]oHmt"eR
%j=rSjNX>o"P3K49H!ql3mg^n-=#VU*RiJ&\\A>^IW6MrHMKP`.\Ac#\=3(L\*seRBd1.Cpa&[C6E.rI`SF@T,$=rc%Vr8Y&R]CXJ
%]IRrT:?stch?g^p*[>RE^:I6ofOgI9ni1(7m,$"A5?!_XBJ[')''2Bf2&hEQ-l+(12%rDtYO5A_2S".Hi0T>\c+?29S7<r^`PbB=
%A+7^D/:D`:FQ6PJYAPU.k]Uf`h/hdZ>LH]JYO6c>f%"_ATj<4"Cmsc6nZEYMl:qMcd&E)0n@j>JkF!nP`%,e\:OW%pGdUCL2_&d#
%:@%b4q!H7Of:QG?s5Hfr?erKqqTX4t62(mp3nUYRTm]3-g5m;P`gC/@g$ti;j(XZ]e&t^.#*[(Tqgq9,LS8SX8gHEe0&E^;p27C,
%rg'WaAf?XdLZ'$jqYQ&AHRE!PDhclFg6M$::IOlIhm-W=jr`0QR5?tuGL^AC2#%(#NP@GAk4*hX5HIA%%NA?j4OsK.jf:UoqY927
%4:_&?X,DK,o_s($Kh^MB5k9r8#1DZJ'=T,_)&cDd4T=SEHklO"oV1+E^Q_m2MU]]'h+Ik>-_\F9\`1C.-l/TdI]u!-ghATo:'#(j
%n#ej'qX4+/emJCBbo\V"dtMj-I^r]'Yh\mnrqQ''-i@Jmm2WHkf<7e`*qs/;(Gu;oUeln%^FJ0HEWndbheh:E^;OR`$m41`"WuHD
%0E(f/rqP<X?2,qT2hg`*"O-8abC\uV4,&Gp$GsV!W+k-PBa3MQcr]FeHP$/F<T2F]^EL3^O+nXj94TQ*n#rkWRkZ#-2i!h'"(MNW
%L@5PQ2XZK=9>kW\_j;(MoJ+-CA3`ioKR5um0Jj@$"SA'K5O'XQ3dh.O<B0Q\AVj8Fk+)+<BFCekR^G>((BktrBbr7T<G==@V^\g$
%2_Z-u<R_uW/MT?m=02j1d,7/&#r#lGQ@MV#V73ZpI%M';-g(1A).;"f3=2k0&0hD4A>2taQhilh4r8LD_o1uj>(A7?UWpp*3<X%>
%/[8STqf!Od=+iCAdnA0XJQ%hKd5gjQ:.ZTY<jMg28D4Mk=S8"%9l5KkOHk:hDsXt@?u'?@B.hmS9OU#./\-E@9[PBX0$stZ@nd:4
%EDDSK642G5)T%3:R^F6b)Hca,,:[`%<knT>iCbdtL07cDAnq$*h^=4@h78JFZlgVo^"HDh__[Z5L5.lJ:fENP8*GT^*1a_OgghG3
%LGoJfV%EK.eZ,FPTV]rLL1LQU9!o![J`A&_]k#alY[H+732",]FLEo;]dUN?78F#p86X<cTdbSS&(<st.24IjG'/U4HC[FN(V82?
%!46)0VDkF&Pd3V^'[=]Nk6V5FU<HWM/"M=6`T/E!J7W]lb#n;fh2,`)>9o:Z`\Al&mhHlQN=Hs17Umg9R[,M?jLi,>4;8IdM.`=:
%<?rYC>F8PY9F='5p)dDPjYAXmU/C?toj0\Jb_]jW-l#*O<MG.A*'G<Ia)&a\]gu.Y1?dTQc&'+,54]=?-(<q-T;C9BXGlMOP"h>$
%n5\C<\sKsJ8"'n@m%t<,Hd08+<krQ[V0da8S@kea54R08X-a<qm//Z.7"#-@$V6&l,Y)^e7:gO:DFn^MUK](Bi!9osR&g!^0cITT
%0=r(g"`#:8'EYRt!*p($>1(mO>H$I+$@Isb"EZ)0#nc=C<hj')G&#.GQJ*9!W3T?[9#)1]E(ZVD;FCu203b[WN3Np^TG00_$>Tq5
%/qqugKgh4ceq,=^<uice[%oO4eOI4U1S(8h\*:Rk*Mr&&jhSB[VK1;:;QN=VVKs;!I^<3%8T`:=SjlVYMiq%3c4%<s"s!9AECsBl
%+dtjKnc3%+@m[&c4^o1*1[DEpqD_oWestHS#^9;A94Sc=d'Y]e<..f?O$_0$JX7FcKo!"=Y)F4];\dO'fE@$(%21bcL>G8j:>j8,
%0G*/@TtQ0a_[N?PI-rReS4X/;FhJotZrZj3Od:\VGRSA*&`MZ:9eX<(_r_hUEbfi5AqoBP!'>m4[@o_o`"n#l7$^-B1'RjUk.nkA
%=N)k_8rN!;!)],*7[lSK`Io%S?Q.23k8BC./O74M)?2KeaSesnI>BEj!9d&h.Z#J8fJ]O8KNk\=?`iMl<a_gT+BPmuZVGQqGD'j7
%l;;C<glhNh#=J['J15*,*pm:6g?POC]m$.K@o_U#CqTrG'!`]='U\r6PEOq93<=)!>/Ab4qKUMHZMs8Qd/+#g(fWA>(L$935`+@.
%k"al@4%)Zolh'K@5oC"J2qNWIJa",U1Z79(;FPI+QW,pe>eH&VW!9=9M[JL]%+pXBF7(6D;$C?hY(?Z3.d@;JC?hHm?No)A]n(g0
%Kc8Idojp^@F16rod/hVkR+8u'DWl]b\r-*6Gt1kb!Q@&#QV4]^UtP0$!k`;;M?(`BAm9kB:_\^$5/0auC2MlhQp"\)@B?1Z:sH*g
%*j0'c3#`KF);%MDUl*=:Qm#uf5g\4ka^NSRW*nL@e`&$_>-5<3=iWr`16P5j*&$46Mb-5Lc"_@-V3mu*K-TBp]dXfYc?:uoAk\(6
%l<T1Ab=GLZgd5DD"+[YUp)kSdhNcX."EUU8()A\]/!:JG_+"mjSF+06"62<WjeQQP%;)V5g:-;<jt<Rt,'"lq^aeEU=Tb<8[=Q?C
%8ccQ:<L(Z=A,p"NeqMgE(G!%a93t&!7LKiOrsJ4R.dDjuXG(3)U='pf+Dd)gYUGTR9J!;BlUqWDUd\:CA0H!"ZpI0*>FG_'bgM)5
%^XqtJE>=k*`@3\*D"al&&%L(ch9Q6e")S$*<U+92c@jI]mKB1.,m(N,0b@=O[`\.EJDd!!/l'[$#R!G7M@&a^Ki&XG7QS=#//%;-
%OYMu:C9Z9CM55lGL=jYJ30d'Q/Ej0;"7T[rE$*RpY&O^Z6G(J!P1X533#5?k"Gs1#&NbK__1<hoOIIgij-E-'D2U>i*`_1Mc2lQa
%'593ic4Y1Fado*UM`3YSE&FGdh+FO99T[3s!Hpu4plt[I2$_Y^g=qRB[[<XDgE"NB4eXJTPD4I@U]fmb;)D;gZsI3!BWbLR!8o`&
%QPhg5;UI47,(1n_a1rZoA`C-Rg&bG.7F4\^jIPQ9f>T!r+:RVC=iEUDEf:6a@e"<^6;DZ;=u^$t/_$`uMda,8KtK*iK`_=HX3s'+
%7BK'hd4+dh`S@13"+7*'H_?ZgRL)8a^qGa2^EPF0]r#?2hZ?Z"Zc*u;CT<:sDcRjd]h-YSQ!O.P's>+YrDTC)d(Q-11C(#J'PjHA
%-.Lfe2+GM%hO"H#@TFVYi5OPUCcXBL0fD9+N+?g!J0q+cMtnW]+#_0>;QW@(&S=ASX*''1@.B;Z8d\9<#rQ2pC,JGL&^bT2OH1A*
%R=`SQj1W=!`Oun."(?dVJDihbF#FLt85r\;`.n?;\lJJ0q%6js!QJ.Fk$<2uDWl3s2lq_#H`p`(JV&`F7(e&7(ZH_V4tlST>fpXO
%`Te;,>(Y@WDu.hClHPX5S!"p0I'f\h">A.E]\.lE:@)o31Y<Y1=[j-Y]R'/nVCUpjYHN$BJnZ;rL/S9kU:s^PRPMJ0Gd.Yr>24j4
%=+\#Rqf[(5lJ`&DLlBc/L-(=41_),l:nq*ZPp4D\/m&rl1kk&9+DGZu9$sXt^6t;dZ'<O-o^II*AuKe(pBFSO2We<`%Jg@aL'Ai*
%2LIHAfet\0Q*`mp2_AGqKj'(r/_#NU`AAT'CX&XYD[A3VOf\e+N\kQ("ss=k;K2f=KI&Al%]YDu\>&2g)?UA&-fES>1hGj.aI-_$
%9$0M)LdQJZ$UGZuWhDS5P8AHUX)MrU$.Pt9nB'Z*#VM&2YVBhoIPK#>T*M,\,?VpD/[uV(VZr$+;E(r&;fYo=e"^_6FQXBdVR3;`
%+Q4[J(,=?)i<jA<@$bW]OcVVAJd!/n@%H1oJZe,JE=]pE27=bEC+W9!P&CPmgp&ph>pZgjfa`sP7\0:bW'sM)eQUN<<adqJa[)+@
%pc@qZJXj:l>*h"k:=?oj8bY<#%sFJkA01T5,b,-*@ZbD>.;:eP5"b^,!rbsR0rcq.;PoFm'TSLZ(/M,2VH/B[fI[o`Ze9qcZt/fB
%]^3)S)najE>?M#p%C6leX2Gm\(4mE59plLifr-^$+p*/tD'?JCW/=aDKibfUa2CiUVI#]j*AVE37Zgq3(J.p<648`s&Md*MS^1H:
%/t34UE,?HP<Fi&$XRqG!VF7p+W*TU)E=d\SE33FpS6W[)3PJUMM?PWL@Tr[pRLE/b5qIng2P>'TapQE4-Jta3Fu9>PX#6Wu)!3LA
%3+>1B>,2:E.V:f@M,+5C;p.@Xg08O,-5C99CS)_@0`lnm#F]8AI*V\9E(2]"b`NC`LV8(cVil!4Q8,JmHXM\?.Sl/o8h`O$o2@O$
%Q$aM0"Rq0qq9s0:6O67o>;H"L3t0&cBu<HiqPt#PmTab8E%oTi(atW2/E)I+P_oIWg<p7b9",-YDhT;RIDS'mig?6#H!D>n3^+&B
%0++R/F.9[LUu77bAH\lBPlMT67X.G1pgnQReXVFu83k;,(NqI5KebWoJT!1)8Z2dA4qpXU'am(No+m4**4;a[?HD9i4)GZCX&1a4
%QZ0Rj"0(mc(+dr^r`&"B1_uO>B=gjE/3p&gW$<9BA5gU\&!hEq\Ta`Li)@j$C:9N\*Ej#I"un?WZl"#H<X]l]VO/t9*>Rb99Z1$[
%!Z.M`U8DPQ4;Pdk?f#TKYprV&YDo=a_phP",^&JL,!cnS`JnFNh5fMO;FG=Xo8Z[a\D5,dM\V/SI[^iV?X12ol,:q"W7EB>Ff,nK
%H-4.cG:&ht?&M3UQY?%(NRP2Q.:ChD_bR$1_O%97@9(tj[\E5%3XSe3:jY/:_:<7=S'h=]$L^DAc8k83"g[o8Qa?A;$IUIGJ8e>$
%Wm3;/bJ:7lldDj<o:7;".P6=iFHZP4!]:63Bg)Y'Et-%8E>GZKa7@F'/LrP+WcHN!VWpTm'=ld:WIWAT'*bS=8.EA%Whl6Ji2Mc<
%.FE19*PQ6"I"R17)Mco1%97e<VU7>KD$b7SiXAm,LB9LbI[h;i%0L(*U+V>Jf<,WiVmIUl>FeRD]k3ONiXX`m>c/VPMe.R2/_i``
%&FiuS&+anl2d0i6HJ1g+7)UR&mYo&^9,+"]We=J(2(@EJ%lO`1nNlrNk:9AXBN\%c<<>++j"C_X;%%"1O>eO=3*`atjX+,;f5pbI
%lTYq_95FC,C45T(5sm.j)2S0_X$@5AlV4!\$dn\a#&fq$>&0cjIM5+m*%)6Y=,V),NjGQrCR;ZdkdkPQLT,Q1VdB"ME6?(SW*ldJ
%(5dElQ*]*KoI5jP^U9_K7OrJPAs6difIa07__Y"#W0Y.Fpl[OU_2Y/Z.b][/[VJbhVU-8q6!]u&"h4h34\]#oDA<PC'ToaONO2Le
%jX_95&C.rT8q<TAE%u,V=l:.Ub,uLG7pn!1E`>\0IBOS<<[9)4;0Fq/*2EV;65m3j!1W6eF2b2(=QHMmi#EsCEL1X<G)ko5&/rn>
%WiQ[O_(B13,9)mJliZ9?%YU\0;m7G>#-nDD$TfZkUB.+j&WZ*#:buCBG;>?dY\_6i&grYbPm?10DBHK^#V;9XQ0R=c9C8216CPHV
%#[bd[V21nRS=";r3Tp_O=tf07OUm#Y@NfWRU=BHRL@V'FRU1F(C,VZ2Y0"\LUXR"oo7Ds.j&JUhnAQpkCtWS_H3h$#W@Yb6'rB(>
%(E56O"3li?etNr(4N5"speHp.<[8E-DkU5EJ<?5[B!$=i5EULK/'n*%r\F2`8pRFH44#qC(/B*I5i')LTF*n*(,P=(q$^.EL2[S5
%Fgj><7Cgs+Gh17#"M%tLAj8jq$/Vc4-Mpgu:n7qM5>?MlT0Yo&bU+9h#J<Ha=9>4f9Y?[)1u@dm>/4*Geg1?gI0ElqQW,9B,`Is=
%jb:+Zaf#?O1fNdC,<Lkb$l2g.F=RC2Wp:u8o*1S?WbH7s[hT>Ue=nWp<mlV`qX]+^P5)>mh-a4!BlSt:P\_cel"4iXG6W1Te8qGq
%$d4jaUBSLgG#aJrd:.61k8+T!T_O[62_DI+$0i<AJ5Y8lg;WFYV0g@`Suc7g6BublI$9^s<<\"'dR\m>3iF[j[^d0d0Zi;5&Cd@&
%i&cX.'#$Gm?ll[WbA'B57_b0.3q6Ou#Z>>0)pnLSldelc5_hF"pB\Z52a]uUVsq',^+5MLNAqRVA`7/'D4';4Up;0`Z4!5Rj>UGB
%Kl44f4J"TM<JXA%hDj_8Q1.4bFYqFQoP%&f+Ib]hK?9iH;kZ80gbZu]Ytkh4DNdKs.5Vf)pBEPu_:pdmoq\GC;_o4ao/'aZ6VU1T
%>;OO<J%p,C0CS<DY$l4*04^>l[\,seH4\_o9J<!?!>gXXc,jV13ET"D.-ISRrPhOj[Ads`6^'qoK>G;,0&Zib;KHPnZeEr>ZVBu)
%1"U3LRqJOuf'LW=[fOM81u;51mK5"['th7ZGc,3fpNJ"=0b6.7FL?FiA0+$m6R?-d<ta<d:(Vil1^J2]HH(MaPC:V4Y3=,W_o.'P
%8J,9\p63X)mL4!@laa8-!+:f2J5"r!QL1NZkCP3G;#Jbl.N)B3=(tf4[$"So`?CJsX&oY!<+o,\cCMh!Z(ET&X16*C,UF6]$?@tI
%V"%n*CUnV379dW4G(W9FO^g>Gp_1;a;=uqOU:P=apo%]RdYl-@B0hX4R?E:m+IN,M#uPc3TH_cS;n/`/;nQ8"KrW3\OAmO!pV%'^
%Va]@jcmCC6.pD+-/#Nq,gKQ?QUD]<+I,5ZBCT:hC7*u#+i40AtNWD\o!S'TXYi;!b3YA;Jdd<4L9NBk(2<l<+_'_Qr&6)QU'j(/`
%b@Z?G%p:@.DHrVR/R\9TK9]??;/ppb/r8HAq3h:VhA>P0e-hP2QEAQZ]@[>U`bOs/pWa\uacs=o0Q#?Efmb4ge/G"H"llWj_YgG/
%S-/%j'sl<#/V9=bG-]Vh+qXZfV+"h8jG'*\U)@YGQcZ:PSAgDZ4j]@\3>2<eMg=<AH/2X(Is#"9L9dWFp:Ol2H3Goih7R4)S-UL1
%,*jA+CB,ooqH%FK&NH"R>BNW!Ql*%aQ?_%Zl@).,ZKE<2Naf7]$LX4bR/YU)/+4un-0)i9'sjF/2Qc_hI%Dm_LY.g#30gj%KLRJ'
%7?%s5eq.gPFY%>27'*#d@&H!P0b7CMQ&QN&[PbQUH#`J%1pmoMNhistl,GDp@@a/KYS\`B%]_Xc\BD-YNJ[`b/OU!=2D-p%2&(d7
%UtgWF;cFE5$A<041-MI)b,QI^OnAkpPR816e)`qpF\+1W8e5/afNVGlR8SuNEKb'?Y-;k.(]lQ7>,cm:)H[1s"HRsU?/:6;;O)KA
%W'cg`V,G6TUL'sU0.B6k)K2W':I'%[BT\dkd+IFB(3n(?!L(d@\3[L0\9BEEN8<E(?.N(;KdEqG)LNS%d+>m-%>g&g<$da"jpAOg
%9Ym_B6;^a8K+iAF1.TrL)Z&A!HV-EpB_"d=#qIdT&S;t2QuUm)6,T8OXgkAI0Hn)ai+0Y9!iu-RZn7:<Rk=p23Q;W_h<0-#;_nl1
%A#n`&B$g4)%9E+?c782H/#)'4,RaTPXiX%?V`lf3boaaF\bb\3j!'G]S;Is$"CSPNn3^mi_Lk9s,fg>.XopT\5sVhYqr2[ed(]@7
%$KUZ%b>'%gU@Fpn+cr9!"!He;/cSu-8.rA(=oBu.#:`hILX:C@@$?>RHXnBuiO&;%[*Zq&)QbP'og+c0%*AbAe8he3T<08%GUaJ&
%QcoT<^:.['g0sOF$(,PL#NE_:E3OAS0f5r-d[_eJR<stK[k<cT[i0In,=h:ebnJGI!)OQ.nCf(#_$uo';ojPg\&aY6AmgR$EPB@F
%8C\?S!$I+Od9!ke;M7&_JAss7L$^*;FR,tT]fIB=*%U,dEt:\X[WN/7MW"l5[1V)SK7I!Eb_u?(B&&r'8cmpjd7$#5<$S't1-*JX
%YjQoKd:7jaap+h56m/$T+Mcd6<NBi=`?;*UHd/1;#4V8;VM58VAn:#j/9t*`$(a+WUo7E*(;Q*`C*O*O%1$U$QoQ.*F,qnEfc%9V
%X][OOo$B+[GACV8gZB,c12`h`\/J#S=GH=$mii*7hIt<6Sh46Z=dM0BbV[c=)P-J+gjk-OXW0/[b204or.RD_Gg^uNq&=;g6'mfe
%!OY\"/8"R_UeKH#QpJWn(V%RF3=(Sgo&\"W%@o?sC`;[$ir$ksGA;]@@TbuE*Wt%P?3Q("gjrd^Q@$_?)tP<N%R*iYE+^5P[@F'%
%Jm9SOV-XS87*E>E3HYis79eDLF]fRXDM2i"1SuN&>+1f/)-RCdpd*4PlK`1^8e&F>%=ohtV2eTAP1$Q@NB+F].+,+_%fgF(RCY*]
%mV4F#&JSUecdl<*OtuV;`"Rl:/rBse<35Z>[YZ/ggF;qh,qT0cd3>L<)eak<A8WQZ*GOj)U"s2WDXg(1Wnja&<TqIV8WAMHL/C:J
%VPWKD?o696-gGT,Ws?FXD&::oiZ:\"K!GjRAfLJml+.]6&ufUt3EPi]8>CK(Q*;=a8"qP*"k2A<>,(r6]u#sJBS2o(:f*$MG:d$.
%(n?CpV7RA[NP#QUYJAC%a3JK>n"!$RB&]'Id54g=q2jT=C.=4e/P_RC9c13lL-5el=U%GY*VME1*)g;X[;p3%1hS_6==LcEMcY6j
%M#i-q_5q,u'#:'g;otJUBi[5uEhN:noI+5gWm4M'=^t6Z11F"i2Lo7h4g!=o]CtV/"q!t//XW6&-hnDk[q'7UV_H5`_R3pWl-:EZ
%ilP4>Hd'-N"Tj*Haud$f#f96_Ql/aK!^6!6?cV7V!0kGJ(u-SVMQ?MDj.]P4JWdEc$qgj^f9G3bSlu$Z_9=@Ag9'o1?QNM;q]0,<
%&fV.eTgN*2`[8;M<SA9WUO8c%70:,[Q^2c&!Q)hRE!m=&!lkX=/]X^$7^Crhn6$</1`R6WbIQ;pfOhQ!!ki2T`TG&Y<MJ(E$u.h5
%kXp16M^uL"-0dmDYs;ud*=KZfH'bRC%NCV>1lU1oBYumB3\:,ic*7i4j,0f`6"uf1c&3:(;r"p]>$+P4q-:#LW3Kh^/JRd`EKiSZ
%\I=1eZL403f%D4\K6ura]ihd35bKZH_qC9A-gq!KU1tI&Um`^q7D-!;/-C56Z!(4RVjT5eGr*1;o=I_:*k"98-VR%hNOe6e0#N=Q
%X,WtOS\h5IRc;@o)sM,_A7m-Yj:[`KX^j1gCUr%;&;F3G2UV-k/mEBV@Mi[>(A1mTTW_gC\mUmReI#'M.%jMC,m]-?U./Bq\IU9*
%VS.IqRt-4+00BTeWI^pXE")28'cFIcQ57.#T9bJqWn%s5;0pg$^+*B#WUpA%Qs+'"[IdR*j*k,I6;W![&3ibs.3`K7&>C`<7Ulh7
%'Vd2]/i>pTPs+al[CQ-G9F*;R$6p&2aLF<mE=trd^/1K3H0/?I!;la,Bka?TZpJk+_4PJ8$P)>NZ%<o'fcD9A@LM:BYH62&n.LLs
%94saI+^?$6.msD?Z/X:XP_2%]P]#4L0uRL]M^$OogonQfGlgJ-$5At1'(++6)M4)TF'c(ABA"c0mM6-e8.2eX>1qBK9\f$QX(4(U
%e7$+R-6fS!+aE9hr>!1,<mc/9[l]9KECclbM1O?ZeKEU9TXr]crf('RX)Uc4b4^a(O#Y[%Rd8iM.:sd_3o!0AmksC]XU*7id#G(5
%n*L%Hh3K(/.W.*UFGq+S`D%f6X$@P@.BI9bNDO(RZX3!!eW^=rQ.2hQP3HT/TXsItJOp^fD5<*Sf_VhQ/[oP$6nQ;o_bpeIa%7tN
%N_X1QJF&D]\YP,o6/$C2\."')9=S9H;PaPV)H9@9\qQ=UdR)A3Hq^s=D?1$mL%A"tA,p%NJ`Fb8L=1[UP>tiO:>sKs96Lo?C#VAl
%G!g$5C+uQm%5D]&(GfePj+Mc7Qu$P9>Qh7q[L_&VehoL3BkJ2O$YqX9!<s(Z(u'5#,(*AO2Q`7]*CMmFLq&f(1#1Fj),sOIB^Wen
%&pPI`CI`AjES\8^Wsp%Yast'U,S6^dSg5a[`C9JDRMc7pnDEnN/WF\[lS/I-WdVt$cl[fkCX'\g>AD^%Y]'Yho*]<Ll2JaqnUlrn
%7Ad7(EiITte8&m#!t][Ci4LEZPuS"?XnKKH!Q&t(SRuZjER1Ut>g5??K"!tKK(&LN>dD]Hf.@bdC6!L8&ZY$(5;(Nr@\:B]Q!7:P
%TGg0%lIrnjS*Mf5-\@)q5.oRJV4^j*m3Rj*'X@bgAF"*MK@iY20b-QERaTXVfj4Z$g!k,I,CF"-.O!THKgXp]G,0:2LY-u"p17%s
%Ui:(+U;=mN9m=.B[:;NQ<n9o/$chW2`h)[<?G:(hJ+_i[J+t,X2f5aIoD\(Kk3A#^F?OM#?$@*?Dbk5`%Nb%co6&8%/P8gH,LPEU
%O/?TfNbq6]_6'9?'C?="YB,2-$[0H$SjJ7r$..')*d[6.#`$I9IRTBEG5`*m2n!okkNn=6'CKN[!>)X3W"ohn\tHL)`'Tl,/\KY"
%6(j[K<3k>=FP"$VA?dW>kXL*0CI71h"cpj_8J7/PT4h"O1!F;UA-/`jUg42tH(Um:\1o+,h[n;ZlHS>-N$Y.X08jIeRXfL=p1neq
%\EFS27dECUU@:&/(kFq0!ATMZ7t<H?YBu_X=736BDdfrCU^[A_W"s@DW$ZomV_1RL!09]UcB0Co!$+Khk]O2:-g:!9L.0:Z.\)VR
%.B(5J4mF@IR)a6S"WIqH'7;mYGtkAr1l$k/j)H"Z.;hRJ2)-iACE`a@lca<^(CrrsH\:FY0m(Yn__&g$\#EK:@l<I6MJ.3J$e^9]
%M+M$]V6MMnZ:r)UFX:.4S==!9&PB6p$XCFjhb&H_b]n!-\\O]jS?VpD#@)TN8(!a'R*DeA;b<:kofcdFKQUDg8pr=7'\bX66#Yqr
%UV0GXm6_Yslt/%lI?$7,ANPpd<W"i?C*EHhH?A9R>Y7&pGd\jRVR]K"1I>6h-P=LESm,CCF&iWa_'T9j=sOn6FiQeNhDYVP<o9@T
%-/75!qg8uP@a28QCXs8K0I"NE(hbiP>S]t@@3C8e'(2G;\XM/e&-@6]lm2oYDXN0Eg[)0Afa1!mYTjiJS#Db3aC7en#.j/WhbS\K
%(#06(ZkO.tN)U's4&Y>@1$,30CcCJ'.6$]uIj,L0>YOC!8suTuGY7R+m[.JT'^DT[[%Gaf9Fm(9Pq,c>1_j)i"Fo13S]l.&mprJ-
%f6kA&;l=m&'SB+_ER)$L-D-0J^$OCnPg!:NXaPd?o16!&nb0Q02mXeRp(ZqoKQikQi/e>`MhI*E%qaYE-jQ':8r!S[-'[r^`GR;6
%:3;V[a5#oc<:!">QRd[klLVQYr';UDc/;.?TiZSE&Lk/`PqLm)1@oMV[92D\NW>st4uKoAb1G7+6J;Msrj9gb_i0Ur[*qW%iZ>%5
%@(K*bO]brAUXO"cbf`9)AKjWaCFN>/.Q?B77st]@23O<F.LV,OGEH(49Z/OMV8IFeobCU=JoHpKe[>d-Hnu/^hM7d..T>Jo=23G4
%,4&ErAj\eq_i7Z,_bA7Pc*l%<WMY.LDX>iWT=_EJF3!LVRI6"tPoloWbu?GmA_:>Im0)AT(K5@B'%SK]S<E6'\>RtAM>GmNm:UN"
%djm.;Q)8W53tp$i2!0[)a*A`JgZH%&6F3XqEQt-h<\0Q4^FNo4gNge_;<D?.d?2gg7^R27k^'`,@^aqMRg#$j/$Wh//SES:>!TIJ
%bsAIm49,Vu0D8\iJrs&T`k9D#bm'2gX(@/5VphS'h@^;D$^+Qm7&ONZG@qZI?8tZV>(tF)k+*-H;e\:X]6b\a&`*UFVXuX?XA`Xh
%V:d;?:XOFppX<:!:[)Di#LtZ]!)m/X<@k&uFKum?+1#4^hT"Jg\Z^6D40`67h]7<"b@Dl&Iaf-6bWGETERuM?WV7;8cI),C`l=fe
%d9^E>6%#:%(RaG;Eh8Hg>!U_a-uZf!YiE$K/WeVl9oe=X=R)H"\):gPH*/M7B!/r_Z`>0nPl"Y7/<LD\nAY`7fT&_dkR%f?-$Q!+
%gLPK/mq;V#-*Q"N0V!>T(m617_3U,.6%`/a<0o"CWJMn+4RXpMZdGj&e`i+eCH@jhs"maHpq"1jqq-_fFgOgV9!4*33#A?*`t9Y^
%rCT?3Z;"9CQm2,Ik""+nUr6_"Tmg-fnIN4aG%P&VoMV5L`ADcO%%$jjH^'P/X;YZ=NB8ie.dCcf8#jI-9K-/B,DW98^ZK*)N>o=0
%FZ7R+83#rq#MZf<!4D6\Oa5]CY@sn,^Y+kD@^9?k2QP5OBK)t@`FTP'rd0#V<ptpYfqNs-:/`lj9'/hOjA_@]V='AaC-VQ\ElG=a
%D)Nm]_t1/r/).?M4P)+KQ>9o:s"`)Ck\^c,Egu(Z']O*MMUQF0Fe9a\\`<%LP/[8/g2N..mKJE,ERY_0)QOrn8da*m>afq&10YSa
%-UP*50=lZ_VQ:&hCeDY$XWC))5VjI>b@,I5)tm%K-14?!BDs`W9E#6Y\3oT"kY*NPN+/b8T.O:0NCeK2%H[<qjOEG4Cn]S67V=/O
%UQY&65msBiZ!!pYa?gS=WrlUdSQ."4e_Q>\M_!P'bRp:]*4(JKTmHuXe\[Db8hB*pdgTHRSH233YYf4B2BB13-#$N@UJO:Mj^_==
%)/pgb<]=+!:EE3`h<^bpIdN4Oahu,9p[<*LC-nf(2kB+p;+ueBV[B?4ghG@6</Pph:S)0iVqK'IXlOKdi@]hp96X.:TE?90a_ae?
%1FbTQ$*6+TN1KjR[@F1i15Jl)=BkW"Q`-<iXI;Qm_h^jA2;J/J't*<VL)"EXB$+o.#C<_UE<PPHYLmVm1q+oOE)sp(L!V8n)qTiS
%P,rRJ\WV5-=?CVr26V3K^Y^iTNdQ`2PLuL%<Rs=2L,gh$1`AFQ'kJVaTu`*;ApDrQD9J_jR>9m3\:T7NO`fbPPb!b(@Poq_PQmI/
%KSHDY7][t-eYH)aWl1bin!&?mMp`8ZG:KEOid<-N-TYZY[Q0&fG[\`SV^if6b(8^XU8)-3&%nQD'TY4.<5(g*-*m@3WTo[AW=#h&
%>o0oi$D'ujMf50;L12#a^L:>G_^c&E'f^A_cBoe]2SPi[cUq,M>RV:rnK*g"%:KVI%cTTdFO(k31KQ<3\gL:P\i:**g6X!8ctWY@
%#2):1@$DrW6RHmmNjdaXbk)P`OP5SXim9Bog=>-rXi$PBm9ml"[N).OT4Ek\4`/r0^rf0l9ZZD0nZ]&M)X;+H77ku!V/s%>449W3
%n[-Iea#CoS3OJ/\UZNk%Z[/\$;7UMrm=ck!7HO="!$nZbAc3%IqR#W6hJCB$P*,:?Z@S?nk#7>`BsCSA%\2V#"hXq"ZJ0*dn%Bpc
%'[9_`AR*\WVS(III'ouXnhtb\+]dsgQ<sM'2rPO#?0]H-1>Fu@64i(X#XLps\Rjl$D]Um^F>!n=fRG]$B,1Ga,eNoZhW[%P:1/.#
%qWT9mB66)]@u]'HLi$>`G,dH<?:[#S\=6NEXljsX$(KG)mE3XrZb3$k.B1OJC.<d3k`fuG^El\Lb$qAO:?eFN_O>2I]b]DJk_csL
%!amK-:<Ad#&=SKW.=[jsVCC9eH#u!G/)<G?Yu>L%<Sbu*`1<KrL`<g%lUBL:OHO<o?*%=KgYd4ZG)'9`Vr2&HT2W[&Oh>4r\?A7H
%d3iqhh%Fk,[1crP3#o),na+t!hI,lP@OTWA/u\("B\tm_&mhV(QA+Z[T=o(%J3[CWM*!-464VSg:>$&bY+UbB7KoCU@)nP4DfT1*
%eh1X!h-o'][_OC>WV%Sqd)[DQ0$'moH@V'-%1;YT(d&)YhOl;E]K&7s]Ut#b<c)qa".aQfTL#7!7K@gSYXKYElH;(CcqTf9,$aju
%"FH1'DBV^tRBMe'`lFoXD-V_8L[JP=+0E`";eqn)c;SGOm!&u'bSu12iMED!(I]V""BoY6dc9`)J?\['a"0Z<<bc;HZ*)(di1kVb
%;`%I6gC04Y@L9D3q`0jZ23'u'A1tPt;+5-&<TLg!3<Jjn-nI<Q'mqiI44B@Mcl*^j"Zn\uV`J@j^7g0kQmR'c()MPP.#8[/;P:uM
%GQWNek)SK,i66/N/nA5GIRnMiN?F6l\!B4SXjcDBDs,?L4gc,m-_rUE_EGjZeaVF'h^Eb7<V&eQNTATnV[2!dF+WMITQ80b;oY5G
%fa2XS:s5m0(.`4T]?4@%IhVo9M0C>i;9g=N\f)&RJX^pX*3*W9.O"+iB*?g<&\P1l?'V<JUY&SoC*3(e1TCSg\JTT&Pe="agJdm-
%Ouk`6N&.,9LUXU]pRWfCbnCSYo(l*8**"\/d!qrF:ZcCQX0\Li)YYH[`p6-go)YP->5Ys?Y"-<Yk:sJ/^q"/C3g5+dJ\8B-"2h>V
%P\u*?`dO@r+!N_5B;(lZ&a"=>8hME)ISFgO6E'uSX4kUFCjV#t5iBO>G(Vt/4*S>IZ?*lr;jQ5/mnm<AT[*=YK'2BWbXQVffM_q?
%Z+7dCWWmMo*2[1U.W\@QC;i*dE#^dJ=-HWCU(+bJS.Q?Mb9:F`:+O9T:kmIYn*O)]W]aTaf2-@?qdmrR>mlu!I3fhA'ra?;ZMjF0
%cc<@L&3G?N5;De=n$1\1B>*%1AMV2tk&/=Y;mtJ(q05Ani9ktjYCHqj^6V$F_ng3Dq\Eq_p'O5XWObPAA3RX[fcKqhe,u0Dpf`HH
%_s98%^7Rm_6&gn\bhg;K6*"HNg.Io/,ij2;mY:.t(G/1_*V8f[*8/g3r=j1)T?6DFa0KR[1Q3MP2)CS[=\rYJ-;O<nT/+p!a2cZn
%Q`@YsY*WK/>Z]Ab<D5dKlF=SAH'>hC[dBdo'J$f/oQ)X))gtlRT6[:5nO-1@cLU(W5ck*,e%BOo\L`'XS+ioZ^tNQUI9R0.oe!9>
%jERTZFgB^mh'm56jX43j"TM.UD):J+;i@.77GM6e;cQ1X#WVV+'9]36WJb9OP4n.]P,o\R<7UP+CmfI3qarcKn<1B,&jjFrHaGp:
%B*)r5k)*rs]TcgN\Sr<9a`NJ)L0SCn)R5VAhi*=Aaak!dU9H-,(nqNC/pj*t-rLml)W[i5<TlJ.*-LH=0o9Z:4Jl>"Si=45Uo312
%2s3Vl4J[B!F*G>pDhj8mf%OPMMW=Yga@,F4>rGRWf[r$<2@]Vd-`VrYB(;[&ltI)qU?UFOV#"?BWFA=`-hV"-$]59(/.#>n3WFW^
%WH$%"Z!^1,HGlT"^*!\4rIDBjA.MkT=dLl,I]?Ap[KN]@k#5VG<>F^c$+UHj(aHFkZ,T>'6VYa]N\-;V;S3A0'mgM]\CMM'g6F_$
%Bos5O<oIJGc,qa8$u:Nc,gq*p&QhZQm*TE7cM@W)gtcaFOH55@6q=FB@RMC:`Qh%83IePubp)a\FCQ)*&o&(fP+m$Q--=eCHi+U)
%4Er)!*1lSj6NJ#>%+R7H7'+d*]a1E3"\GOAE^C&fgkI:IhE@0>=u>Q2Q.L*7b\kt=B#/+*A5NB@g2a2ZVBY>jI%*aFP@AS[A#Ib"
%0=iMTI:K\O#^jc%-i%AoA5dZAnuhB*qZKVVRunAj2kT=P:$h(6`;`S^)j=$]rR<AX@7*]tNlMg!D!JXmaEs]9SbS`_lDY1P.<&mn
%BeRLX\[gZuA'$l<cNV*5Be^8Q;^!u_=JpOlh)0CTLkUC/g;=TsFHHnE<8"YW.V6#nm%3BOf2>4l@49^f,Ob>`\P9)%(E4R@Id!c4
%fS"J/Vf(]iAMQdA$7=IV5"Jj[F/G2G:BIoiC6'br;bth>DM'msF(9Ve"mr;/=Z!8l4I's)GRMjs:q'p^SoKIFltsMTqfu+YQR0"Q
%g8>X_aiAh,Z=blCdq>Q7I]fSJ0ceEYER-=\%\:4Rk<(I[bG(R<IPf4hX=B^FP>+c^<.K=#oN2)C.aTbbn]6q?Pm1`0'D=4SbIT*r
%<8!*>JU3P2FZrD\5f']3gEbJ,'f2&k`eV'GKgXKl8X$5\QJ>[q6I<stLIC@;(8ke>]c@_IUfV'P@J-F(>^<D6K@l)YL/_ZQ-$]X'
%9Cf0!56h,[h0`!cRTGD%p2bH'r7d9CQW<IESg3G%2Q*LG:XX,MD5K8VAt/%5DL.bj5+1u5k/Sj+oP+#C4jcWsG`l"^V4Vt\/Ekod
%V$Cb);Up^/^Y.[\etl(S*AZ/&Hc:)+hVE/3S\h;k4(\&p<1&N(WN_dgpISDQ1!Q<-G#P\_!fVKN3S1MlKtOBXqK1/HG.>"n(i"Hd
%2:@S&+4HqWVoJ6@51uaFC2Gm]Rgg.9i]Al96'dehEkEbQE:P<"Tt2ZkLY!)!ar*a]Z"a96n!m*V*#DbYPOi7QU4FG[^`>=BG,CU9
%_G]b_]&QF/c0;a(fPEQ3_?o23RSh4_GU'Fa2)8?`FE0!oK)51En]>Dqd5E.g$m\]@F1N>m[OTs=rj4P=lQ59F60,ToX9]%i/!.WZ
%b,:[$%FQ9'9Ws<Y+J7CXM0rJ+Mq*Jl&bHL<<)@i135!q`A[.6aURdBsNeD8^XQ/5&0/EsP,u[HOg'F=n<MH;j4eH.I*VHte$#MWI
%,U=VF=#e07K`Jc']['ep-X$uA'UY:DX12V/Fo;#J4JJ.\.dM(cGc6d#ed@5'm#7"\cY/,U*2*`TMqd9*iMbWPd<[M%AkFtV5,WSu
%ZYae@-&j>cD(*[Z=>m[qO\??MSW`qBc4#&\TKP38D]A%Ih^7DH-2\XIS-nm94HRUi"B]uE46kgX`\@KprJT-'lh!T#TI4Dj87b:X
%G0%s^hPQOJ,NIgs_ft99*J3VoJ5Vr`&AD5p]fM$/[)RHlgmL_eLTuP>)e4Su_gt3t``AZ>h!$0FRt3X-SFc9$?B;5Jr&uE2`JrRF
%q-8[EeGS\PYqgsR)lJ,=%E&U;2D]4c1OJDS;:2hiB;,adNfq2tm<n_olnI",r1>\CY9tdHc"qqbHY`n;=`3^%P)R[Df98lZku^BY
%ds_D)Z%(3?*=f421%E9tI6O9[gbiT`QcV<boPQH!)rcT;D28j?T$mRt8WG1pI#\B8a?Yd!ML5n6hbm/YB?>Rc)Uu3aBVfd[)9<u%
%m0M`W*T=h`?FO?F`+6c<rBc\G06@;E>[FtF>Rl"OIHW8$qL!M445@5QA3+u^>,o.C^ND/dmb3[TD+AIg9NBCV0Nt)h`Jtq!-i/5b
%a>AB*\oD'OXMdj%_Jk0o*/YSf@hn[$!8JSm:.n.<]#XdH*_PR5R^)9ThW`(UT=Af7cR.Nl5Nqq7S)N=GBhR=0k`hN[A99r]j3u(>
%$\q2;gMPq!8G=#jk?apq)q;4Adi^)FWocDbhrSCrqe5k:>e!Z?D6ZNp=<*eeipOIN*DdP"M1FPU1u,+_EkrHplPlfS>\]2;%Pcu5
%B#5J^;*qQg3I'k3"nmAQ*h'>1kfY9[XO`Sja"\8MG*CO=X$E6jGF?`o?p=u7HnB[<b6IKL6`^*Xg`)FMj$&0j2*)2k)o'hJ4EWt<
%mcl7Yp8fLO6M&L;[_?V*J%*G;WfaWo3qhr_*kc8K#Q:r9oi,VfdW$FpU=YTM0HnAj_dd@*c_)Z>;]*b`%^aA%=r`-WPFBQ!?uN^1
%Z(.A'nEX8"ErjL:"no3l-/F],fV(Pl9^;&%TOLh'Wma9.no7h]HE*R?d\V8To0BMiT''cSopRMj;Z/))NYs&$"pkZJoPA?E++u;9
%,cYmH3cPHZ1%q,qT2*HfLT[DTiEgOfI"TTJMU^V>Bh4N\[59+s><aolR[7\'fW9*K%n0ekE%2@:EC2Vlj7G@Xl&Hgn4b\\$eh#^h
%OcstrT?5T^n3&(s-Xsd1d:,MJE]bE6J[g>a?m@6pcX834[".cqk+oKH[.]+#"R:a&N)Vc"K:M?`\g8p]9rsAJBKJr]FNtflJa9Z%
%>u1_<=]`r<WQ0V$qf-g33C=E$GPt&a)<`n\\liL0Gjl?@'*I)(M4H+)+W&h(2t5LHkOd+>pDl^"M4.0'FT0$8bBm/ecR7h5f\21l
%R4p`L3TjlFKKq`?r_lrSOX_`7BPMm>ND!ZN1:CMr`Q'<&7^C]6^1-aFQq+-])R/Kr,'5eHf"@V)A;TA?n>L;s"JJ^(<3174(KMka
%g$b[FB<.%"fh"KX<Zs,>7e\C0lU-t$h_"]j[Idi?.e^a.S%(6*'lsL]XII\tl67)p4Li#g!J#<,P%`3In.,!/Z_l>,^j\M?^)hKj
%]lDc8P673Vktd!(='[m,'?2g6]e2Ff)An<T=php"P.af(7dn$]98htLL*T4K[daXkOAI9$mlVSe2oZboW:^nM.?KkBl%,p9m5M++
%)+_<<!5SPu6IX/E'SI*6Kc,'/4r<\)1'1Ucn+g)2q\(spWtUnSl;%QUQ^NiFa.9V#75Uo6OCY*,]mZN6<eRiD"BL14&K<M,Z^4/%
%'?"F,aN5ElR'$26:?c.Y0g"s3^29[48Z@QFRgI'5"F\kW%D:TdDD9u"^n'-.5S&'6WUT/"U2GVOC7t(.2*<t0=u0TB7%]!jmHC\W
%]V!"DG1],@;D3YoI>m[<8e!VC8^CmK<f>B[PJB&7OcDm1P8WV$$0`DdSS7nkeL#l0S[,c.Mp&YD(NSN[1a89qYoNj'JK!ZqYihY&
%E%/u?V:`BnNSAeAEq&-aUg[Jp_PbEF_+/Z\)'=fo<=7eKr^gtIg8_Xs'W$)!U@E69PtRun@3%Jda/`jJ5bg#@H#JtEVhL2bZ100E
%)'fWd^H9hd+"g$$.9NZ.@N4e28k3h^%"$+Adj(P4T43:e^]Vbkkn%gs]+^1=HY-$rb850PrpWAqIDPko-AOX*GXRV(F-O(R$GJ_-
%EnKqncZ3E7OQ$<4Gmm\@E$I,=G=7M+"8bPBb0#"6BeT"P:VMtOO3sX'BnoVu3>OchD!-7;4C9/[:37'Rbip90>_j5&JfZIXDI\Y]
%mE^\BW)Jqn"HMtg?><Lq1n$/?Lts8Il*V->Y9^t>kkWS&QM1KcQrUN668-+TBhmmr]K^b,8Jk'r65bG0Ou5i4,A&o#O.fNkZ#nt>
%llO]_>+#c%@>oXinWGYo_861&GqTH@RU"@539ZI121RTXNsr3d.S90SBai>Gg[n%[KOsDaEPKk[P6PuUUd^$?.PbRl_F0HC/7ks8
%%L]tU)kA[I__E\^E3\J8o8F&>,C%TF?p`n6TQoBs7p]:OniSL)g7?b5Ld'I[6<opP><kUFGXlJ63kY&*%6F,5"Jb<-LN#7`2X?d^
%L^RBZ0;:Y=-</sq:gCHMgbm=OfWHTe7MZcrN-gG:NhIZon:SP9b'E1WSJ_oVhbWC.m@FZo@p*F)-6>"TQF;u9&8Q9Nk:\o$5gp@l
%?S]e2CZF5KKq4cOG)]XP3ku_>n1ADF8YLcZnSRRa@o/!(iH]f^3)"iI&ib[aRr0b?"$0[Hio6`qcSoP$7ID;n4UD_UpCCb6]bH6R
%bm4h4l\Tp6ET=Q8Mu@UrX2lPiTGpLr%-LLp6Dk(tg`b/:!3u:K%-t:AX=hU1G@3[i@Wi#9CG1N&`n0I;@nB*1oS`G!Hu0WYSMQ:Y
%d,Up9>oLIpFn4l'%I3V]oL:k&G^"@\/["%KBcYST(7NgL#uJ?HSf*=(fB8&6Pj9j!;!b)eU?;5,ei@j1&*h4e^.RS%UlgP+O<.8f
%@_)+A3fS#CjUX2cKum#a]IuCk35=JYZP:c>a'Hj7MpOnD]Yu.PIU6@TK:-0Wa#3lp6^FYX*+u-W/Rm:Ki)X#<P6i%aUQB(N70f*q
%c(=NCE\jQtdEqr[#*gP[gZ&VE5P.[]iPdR1aAAJ9@`KjTRO1Jm%*HB7ADnto\j9P48I`JN&IuN81at`o>7:4mGH0BAp(+JJ7&SNH
%JqfTn9#3s0ZiG-^;cS=?PKe6&:"_B/RCq6cc7HmHapreDPAn=c;Q?3S%4c55!\J.Q$ddpr!O>YZ_A4X%Z)Ge>&7-Qk,`f2PiW7O^
%>[rWE;W=l$UW=>?=c[3@>(Jgd&O,7fKl5lU/rZ\g$CjFq1r?dnK?4uQ2)'e0#V/[f6SR4`65L_@QPCcTX;!NY`g9-?-pBFUca!5a
%iu[6h<.oc\Lrf45rYGa@;!Xi7Ma6(LM#9Y?5PDalV"(stT.@JQXdRfJ;5#FDO2i-$]8L,*QSDVN;Z9)t8W\cjr/nmUE`e9k4VA/f
%?q7_!i<e;R)_;fE%j2uN.Ztei!Pl^U+[b1/;A^6CP\D%nXP#R,N&UED^r2@CSM+#0mdP<>$:EaM]qkbG3gA/Z?Ade\#kMEuFW)3@
%k^_,m+B<N1&6e5VJoDE^/9u4="2Aq6/uE8#@?62(,!bD0poc6a(e$(Bf%L*7R;H..2QioHrO)-`-\oo6!FHPKad.iFFIa7D7IbIQ
%3k9nPV"u3!%(,X$0R@5e#i24dKE0VGk0c5/6aP:<oFC;RWd>^m>D<p7%\Z0>1.`Oh5^Jo1,c4Zt"Q>@BR2?["BBfb+e3ck@A*k8(
%`SLb2(UUG#94'eUK9p\6C';[2bM$aMVNh,=fd8#g;"SQAb#U&Kdr[(#[".ir7A0dRNC<M1W?;<#)$IBU/ZHMnjIQbhe4M5)?k?HT
%^g]s`@^kCkB\;P>:j'G^^:/k'!u>+&UQ<EOZ;j5o:OFre5^lP4:CAaZU+J<,M#p8Dh`_&9AdeZOm<k1)BQ-@%PIT!E`XdMpA-;9t
%]EF:\i/"2H0P-ML#?4e)K6!8!AfNAdMJO^2B67mGp=\A+gfJ#>I#l)Xml;1SbP4LZ3jB<2Y7"J=(a=_<3)G/RgW7XLUX13qXXpU_
%3Z9!\d_8:3ciFFcQmn%GbW7qo`'=LP\1ETs=>glS4G9@^9aiXSCDfZ'3C51IA[KA9FLq4hgbeh`@)4;Ts&?5\<,gf,Yi*^!-,4a*
%rmgt:Y:lF#7S8D09HP91M$n#<R.49Tnp&JL76#u<+s5cfCO!id9lV--]6-35i+"k;H\XPrP.7/5`2Ehr"9JcQ/9M6VaA*iX#gU&u
%e'/q^<W_jS-@@0nrZbgoEmb`>JL7=RjF94)JJ($I"SO;Hba9Yd@#uB4#u68e&Y-.jG7)YEZ1s:go=>&-9?o=IdUl4[d7O8.0]d;H
%\QDZd-`PuLpsMD5&f_JK0,Vdt+HR@L1CWA-_*BP3kqtspU;4V2Pab#@,Vm`WEj;(7"_.hDQR9P*]t"MmoG+i#R%sZ/-6'9Wf_A:G
%7;eo/O]Bnf`P%&br<*@>:Yg):N,FRY/-5s$,r9N(Ss-;@$/Tb6"1f;u!\RGBX[hi;kkl$SjS*HW!sh`LE8(&AJYfn&2od7!e9;<'
%V_%NG>&Mc=6T>-%plo@.3A+H=7Ff:#F4mK*"6"WKB%bEoMSITa'K;U-ZK&IcDBE8?ih:VRR&=tVMVr$ThC0F\)nDT@JHUd+FonDR
%(SEDi!j=@mV[M6c"K-9m4,&l@aSeB+`BZ0[\D<u0%%#Ud_q6\Zf\t7lK'0Qrnk&7Ia4(2=i6hn'E+d(MOgG,dKg$"&*0DW;'M]St
%&j5,mQTS41i![ns/AUUdY&S>U[p$ss&0/K*FanOS1BhS#L]LA(al!f7D_'NA\fV@Ba;2N@&i2NtdhN]j07frJ`Ko:^Spu:>_'7TF
%c4"O:=q(iMX7Z)M"AaWU_HX\0.6JE=)'2e<@DoZH,@H]`DM$mT-5Aa%N0_,,'arF\0S!?lP-e*,h5,buL7WrfS/C[b=/JX89+0h4
%ZIC:/Da^1GXg4VZmWJ_o8nGAZ=_&XE*X%ju\'Pf1hK;;0J]Y9=\IJ]DAq1.h^hX`/"\]'Od0mekD&n3I=*<#C^stGh,hQDa.I6S0
%8;8>$HC\Cs1:=U1(r@k-J3e@tid:42&H\.^V!i6mrg95#:!Qa/i*n)("kTR`SB`<fTMJ=;CP81&&(OcY:Z9f+$Y?"qTUrr&30Oab
%)<ODY$67C?#o-0rl)@e7PSiW3^m5;Hi@"#5$eu-[I/cG!hIT]qD:oEr!rp0;(aS-aeDCeK,Y]"dai4LNN*(%Q0N/$m<Uem->I50n
%7qRe:fCs%KME,WX`#^_?5GQ92)::o>ihB8qkZOG9(#M]<2gWcGlJmlD#(F_$F6H98MNnY]<k)md@P\qmTsRj+*peW;.rJa_m;UGL
%Atb^.oQXQ0Sj/R.^Sk;5"Lieb3;B>#[r06NGEp+OFk1K)9ZQ5HCd"DUlr4")jEkWFFr/U%\G0Cs4s^M6lhduNkR/VdS?dW,S":.;
%/GWiqV-`6YQTm_GYpARN%Y'H]B*nV+LZ/&7M^K%^Ts.&.@:t)\P4F.r"S);BXtsh?'=89)q9R`-^77R@@Q&D\,1.Se:II/GL9FD?
%B:"`HQM%=]I[,`1K](0ZCd_Y,/1-UShp.q\"BM*ZNSuEljjq2M_sbqZ$Jg"BIp:TA<*O^5XB[fjE1QNYKf;kqUP-#3]J6)j>=KlL
%MWG&"R/DR4#sqU/Mtjeqo5IeT=8-B$P1e9"m-85M?SF!8W'0Qs56Cj.-E>(I\pmuXO=c4NDjTE&U;rWoSQ+M3G1@;Rc+FH-O(>"A
%%.kk]E9EBQ[%oEkc8`IDcM4Z^d_,llF+.Be*$LH5g/1355G^PCo<f*aN8+E.[k&"8NWiC*?=!K[k!KN9^L&utO2+>R`WOTK2PpEa
%^1YMEDq(PI0dHtrn^\2Ldf,g<41]Mc6^PlB>K=(e4[d?pOko5kFG[Vk3aK%7P09Y0JaZKMRRloDMSEM@`l6ote5_UY`a$bXI#Ld$
%ak@Vi_k@#pZ6_/P4Qc,f8/oU9GkR)`C02!\`.NZo`U]YE3eBe\_Rif-$\\N&;ki#EdXI]monl%Bki?6%:pVuOSSo&qIh<1_jHbL>
%2H([CqP(\08Dl5qZ!TV\:VjkNOGF!bZ1:LsDq)a-h^>D/%2jK;\S/cq8ijZ1mWpY4WoX`9g<RfZjeae:A$jak"Dr%O4)m3mDq=A?
%N^iD8"VJZ%'VX#8=6^S:&F599Jj[3kNJD3t@:,sSiEJl)q!q&DCP_G%\c)m!];0n3''F3TJ.(mY(!ZlS]i*J]@J2p*DPqDgLIBQf
%ls"'e0?K&g9Ka6:1!]D46PYBAS$/\HJ>+2AQEOIFTuP;Q<AEt-)G?2r$k>'bCPp#dHb-''=p[QTU$,67,Y"JMOlf*CB:O[rHZ\LR
%VLj;g$^.Q+:!M"R+eqqNlEc:K$<7/;OHe)8TBj\b1?bt-UH$Y>c0JCMbPUg-nOAhgY&L(h4J(q7H=,,q/ZUlgF.ec<A=GgM1*VkX
%A)S4K52J6rAuQ2fLO*D1@\[T1/gQaL)MckK.i1(rg6YE-<2_1qIF%+(EdsLDbVEdh(k.[-,QNh?gqVfG>N1T.T]0H0Zn@IhZ?d=,
%d:b/cZ=D/k7M:!V`>H`/Lre>b?/Tci)Db<:d;s?S)&d76(CUfnQMV"k"Ma9/Y,[h,dmXJqmAs-!$lPMd8r#dMhbhK:oT-5i]^5Z!
%H9E6;gYu'!MFq?C+n;,hFs3)rP@.Omb]Cf7h6!H*Yrf4&maCtn>SS5=\1m6Sicme&k`Y^i<=A\0E-+YfWk+/oe,O5lWb_r2qEstd
%EhNlkl$F[qlm?1n)A4%F'S:CCqT#r=L5\E"&(o</M##;9iK0nV=pn]h:Fq+"I@a2]=U)!)IFtdlJ&>]Mn)MIQ[8t]>-oGJ#@g0Cr
%GiObH(<8e/)\S=p/Fa)bO6IXM"Ei,Z"\p$M!fOe:K[V4&(HHQh,\AIQ7V)P\]30e%J4`J&JIf)rp?G-j`LH_._]'Tu$&Wqm!^6I7
%VGP)F7H0YTE+Nb2A+K$Z0)%j//OYgf2h)%-qS%sU\*j[h>]!1[XRHmFU`toG9efhPU=jlH,0X[2H^52fkQRocr##:kGL/kR3/3-"
%8MoPXLj6OMLDFN:NOV9Bn(3WLVgLa4.9f8HgN>htf1%<,l?G.pQQGeE=KZY:HoIem8$S,e4k]=bLI8@4K+&5A]XoSLkuAglg%BF@
%6>mBDGgL0$24[5/Mj)WRnSs"/*Jm-iZ_C487W]^UMJAroP?plOTB#SFL[K'C@AR=#/9C,l-O@KFct7EU/Q0VGi0%>7'eKn8JkNCm
%\=8PcONZj]dD7O+0t<0gr+#ORj>?)ih64_Id3.I3RkK-OM[3nK?48(TQ\4.qfS_&<3*<c]mCQV:E+Ln0-ZM^"7\H!$&6Pd?n'M!n
%IP\RSek*?d(l>PKL)sPD[d7KX:K2:P%kVUkmQ]<iYOLt>Z\/*22;6QKbIr$LQU-DZpS%?HX-'hHahGiCo0st*?G#*??\5U!nT!Za
%FW0YP-=J:P.cTf)>kTrjpe-2Ym(jjD9a]dJcE$sfVOhl0+3I[!E!YL@JhSIQg>,I\K".kRlYn%g^tDH+Ng/p5*k;nkAQmM<B<4AA
%j*HtfI!JW;<Gjm(3*ZD'?Lalo.,-m@+H9]8rUFCh92[*>1Vu3SG%;Pbc$>p6$#l[n^XM>PM<UP>.klAC]g&26ae6KI#gL6#rP^R[
%`=>5C$P.e+Jp,Q)9T>][,?C0M%iGZ=5XZ;U8>k*[JJPLIUeBsJ0=E[!U;<2oI103+[SO4EbG)*UVX<$cAJ'GCme2b2eik/C77`D1
%52OJ`@4BC39EsRr<dq@[0o)q-15>*qmcr6G`):F5>/f#N=Jaoh-E4N$TN$&],X$%/'e5#b8B:)Vr9Y<H?tt?-$QCAk\;X,8H]&Po
%,`SYid#j\5"?(r`O!A.5]OH%9>]d1EZ/nd6b6ZDO@,5c=q;b;753dIF"4qOCAec_U(i#jXgO)#:7KWo9k(kCXKXH/+^1E;[>Rr[)
%qJL-$@@QZ=kh/`&%,8ESUsG@QO'8M+kn(^e/jlY1pUW%f7&$^_DngN$K@GFUYn2H^EOoB3NK/63=/^Le$d##<e-Z\0Vba*)9:+CA
%Rl&,f8Slp_ACd3#`$C&4;eHjNCZ)B09In,=a47qW2Y/roEQY.6C.7STM7f!9;g%lF*iDrT0_:7pMQ!gPpi#>#7oB13ktOJ>BC3m7
%f"r@2omFBDDob:`oMn5-WHp0o$0l$drdL]%qI?(U^77P25!-n;rgYOrFqgma9g8I3I-D4(K;=D5hKbSR(\^Ko/P/s@7NAd[MHVXP
%'j&&U!9m0\RiZaYh91Mjb8=]5BXOn&-d(GG$c=tL0Na_C:ZCn65JGB;Pg99T=s#f0n*G\EE.;64hXfojMn1+J-_c!,PrSJW2Vc4G
%TM)`pZ+/s9q/j*03:hdq\igJ:P@$OrLt$^?o(P8&$0mF=6X(/IQ*(^d;5Cfq1=^f)+"Nf=_,)@[(EOfInrl7tfIPc$7b%EG]Y&Z+
%V@ipX3TBIc*CEb44TCf7ZfE2c@P(g3,1BGAK-a21]h$q='0o#WqH67/(]J#'2)q]&@4tR/^O:,pP6*l_U?eWAOQ1")_[e>-.pe%"
%4<4EaoUa*3]]j<!PY;FqII*<bThdai8XJBI^3o+-S/@`622S.iOmXq:oe%@Z-he_/Pb+Hu:UUiW_ptbi_>oB<gtRp?(C"`&!7@BC
%I[dhDNu-p#qrp6K]6Mar8US^2K"cujbsXFGp.TN^V&5qJC7u_+EPrc$FeK9T&AfXB89i3:mVk'qXmjW\&&gXS7ta$>Ch!lb3t[eN
%m4;^uL-akQ3WjBuT/cMsYES(BIE2(CM3G31mgjf[00`=Bk>)3fSpnO4=\MCOXBHTYW&WZVpmdtDiF:H`+o$'R_qOXE61KTY<5WcW
%/>=@5?/)lK,J0?MH5en4'eqTEg@/Urm"i7sHsK4>2\HW'%)*RLr2du!Ctq;Q\EIH<SPYOR-GR8!<uAhRMTmp^KnV+G*J7S-97<Xu
%.jK(/2FE3EVRU-u#mCniBLrS?:'bk'&Y>4^7%sp[[QDi$Rm&<GZ'4UQh,_Jk6#<.NP;f7r,aM_a&TSB_h0]i;0fct&j[A=R><%g7
%7K'G&Sf%0o<tA#/5*:;s](c8&O!qTfG%YU\T\pqG-%8T0a,PHZQ!AUQYEdHk]$mO%#,,UqMKehF2M,\F[Ipd+Afr;=VW"tX&4WY`
%_VoLo3pANL=Ym'J_*PGk&/*r/-*`+V_<>%oiPusF:`lpL![:LY[H,elK<o'"/:odN.L+$#H(kk2.O0+m0bM?U4R5^W[M4cXQfY^F
%]goY1_DI1<eE'@T>XG/)D+.!]kOd-/;^s;OGUOXLJ;>5"]-PPPLDil_J[YH=FoL<dd6W=F`*ATVN7cZl7&KKT$iqTFCRc-[;Z`.p
%\,6iW7&l!H0#>4JF_"ddkRnn$))$DC[WQ]*iaWmQ3%8mjN5ZtalGWQ>5X[#$^>,J#>%X300#Ee4=Ir4s-@W&QUgH+>JX/Jd4Kn?3
%oIr0]"F0;,g\9SA<Z^p;e;/U%HS='?0Iab$HloGkKp&"XWjpeZd!<N*9t<p\9#EM[PdRT;.RE6cIF&5%l1YG^hj9/;ilS<V7k#Vp
%X#kaZlnO+:-Q:OuSJn<S0U&l(GX?>B@</<hYh%^\M1Qh%O77;qk8EkX"O$"4iLD]kV5:#qU]15NqsOon)J?p'_-kf>&+QY%"LY8q
%W'052&9/MQXO^Y9b;gQ!b9m'*@;Z"`XQF>+`c.L5f&]VUpP&r#KMim1a?tWI1Jp.hEU;F$(]"f71Omn:$r8-<;!#a^SdW"okJbI[
%rDK2M&J\W]06`5YjH@<qB[sj<^(D-_\K/PTIZAflc%+'"dq@rD:!<V8G5AI^bV&qp^aBlt-sV)M)M8Sc:=#I@`>/KM#;Ir)*#5s<
%Il&e(I&t[RC\pKH/_R@lDV6pY:hUf6mM9GBZ"_:S$'ApRb.#)bqu@b[F]:C8%(UnFSmtat,/a8dmm(;:9'K=F`IVG(bc;!'QUQ]^
%5l#i@<[N!>S3Ee#<2J+`;3jA:2G<Ep@\YAd]f26a&:@_FM8Ps=4sEq"-nF)/.^q^u';\]k?6_+USRm>nK=V]/k-@CIBZ!-9NS`\u
%A"o5#Q-tCYa@c`u9#dl'4]uDe0@J*K7(r,3Zk!LkjkIi+[*:1!%eMJSqlUkNJ^Mo1>XY<noZiDt=9c8.i%UsEf;JKGmH8_FD)8fD
%@'R2n$<KAo"Cq:M6OMO8.__<$9eB+%c7'_<\XYcbQYbo"/!eX\s)ra^Y3(QJYUWQ%G<Y/GCa'Q]/)kh*M7V[_@:o%]U.B<YkL8XE
%Zg'[ISA@0V7=Xct(DL+3I;!2>n`O-6?Au(,@t?%B!0kWH\4/#o7+T;/5*a+fQ%jH<7VdP>,VhPro9pKo`u:<^h.";BQsA4@Dq<LS
%0B9UfL2\L<\*r\ChAQ[i!#,e1Dl9MAr;.7Yqfb6](RZjN/o(2`^<#Y=mJN_\J;i=N$7cHkdk2h:GI+=%&PJKS#lL?B.*[)"A>q]Z
%]WgR-9Ad:iYCZ0t>]92VMCq0=PpT0#,I'(?,d>AdH.*/7mFDE63WhCs0OEAciSF#Wl^[>N@HXYO$[U._fqNPnf!Dc&lPS>*ROp6\
%<Rjb<a6BUF6XuZVK<Buq%\i;7>[uXX$EmWX)/qTMUZ#]GcmB#lmXR9<%T..q.!3@XK_k)QBMl]Ifl$XHlFme'H$i2*XY2J=4!%/Y
%07ngmi4e"@M=(O<qU.DY:60NgTk(m@:Ro]grPVi59CiO!FD<<^/eWuQEgCc<$`?^KQ9hV$Q`eS+XdIXZIQP5r4#fkEK;]op9%In#
%FsNi/f^YQ"YQUV0Z7Nd:j)?;C?>54\+YU%,E0[6O-e/ELBNeL!Ea0a^hg*aqGiD59LKf1M.O-=<\oa3M*5o6j[%T"1LfD\Cg<.-3
%jjolPZcLDYH8E/^moFZr?Ig9cW%H>KK*]X4GX2^*RC^HgL]iD*muL52fRegW>H&Z3kdXVL2>c;0H6HVQ)VpXEXJ^<*4&\4`0QTWt
%?pI=K9!#uh,0OVX\@D]dlURamFD02r$D;$s?sIue>,nZepIUl#^o4Op:N.`\)kf;O7/WV2Loe5/IoegT3ts&`j+Tt2Y>2U4WAOe@
%J8aGd'>/[Fd-.T5%Nq"$.Lk6uG5tO7'%%^)HK0[(;.%HX-J^QE7^nPgNNMgSEt2pt<L*+e":,L73k3M>l!lA.fHGdl>#L2DgO/e4
%^sgakPlMAR-]qWWJp1ro)irr.gC\F\X25M)+2iOEf9Rf3)OI'GU'OqqaX>Q&b`bSKL43.WM-7Aok^H^jQniB$`h5jsG*hmI*np`*
%mU,o,bsKTVNd./C8bI>d[Q[[iWSFK:$X,Z<gtnCmqq9c:kj]niRi#:/KBq+>dBr-j[i.FTXOqK)S\+b?*2]eDq!rMrX+pZ^!k%2V
%,OMI$1[_QBE(F+t<*GZ437)]e_EC"6=/)pL!?^Y#`')4;CfBT,h,A.Z>N<jl(#%deh#+\p?IjE,2Su/gXEJTN(R)l!IN(GrMR7G#
%SjS-e'P[>K*+eb6k;[jb'K]N)po"=!m=5dAQs/X4M]jKQ$P#G81Dm;h6R;Dt+gCUWgiP'=+`q=PgY#7!Z!?h/'79N>^<!eT8g*03
%,ITC+72jTmRbm)(>T8'kM"YB-MMNj0E-=bLZIOa;TfGTTrmc37&,h>kTtQLBgG)t@,dd<6?Ij^_K188Obtr#*Pud)R;ZtoGAD+C*
%R6##a8[h^U4ACbk@\_$GArFgtQ>>Pp*Z)6Vk0tX-PWX.NpJqe,:F-&E.^L]qaF?XmBGFDNSO$lmWO_2UIBH$2TWu%N83GkbdNZ@B
%",Jl9*p@NTXD/H^(Wo97/"Pq-[gQ')6+hI4!jj@^26fis@pD/8j\d,:>q718jHY>e0&^fEFkX.1<3Q`!ZbIZIUOLt]@s]?=?G\Z^
%O1io(i>J;j&AEb6i1&>UDn@mWMbkGXe;c-S'K2M)&bOGA>7W<;3VF66\/8)>DiXHC^I;`BdZrYa7Q/RoB72i6\@66u/Ca"m:$C8r
%Mu.\FR9,N-aiZ=N$Nl&Q"l)c_lIgfaB`#9!^F?MLD*s2R[3Qp#CXS+e59sE$Y7]4i;Ej<EB#)_A0s[Phjj4hqqtkOP?PhhP-Sd+H
%6b1EWB40Ns]Bb4:,>^jc=:iO$QWNQ0\N9gTGi`p7k@3ZVk3^Kt[-lcK[ruoS/U;&);;WG"A`Xdnm_Rjn(13)1@/p,=Gp"Xc9tIfJ
%`'7"@kA%7K[,2rhs1U23cEt-X`<ucd:rr-(r/#aDH0Fn2H4JqRU;,S>PsSoqq:,jO(mu$B$9;$E\f^4(1#,MgYq`*gH'Z'/5gTEX
%fLC;$3*VNn@%jbkn(nr#>#K`ti.&@FW4Yc\a',1cO41cN0<t%?#ah,e9'qhhrlul"-5_3\#M?oT"*13D1b$jb,l5!-$e-28`ag)b
%aENIuCKEfO\_3s":jZ%3D$44tZ)K("d@I>S+b[*8T<Lr[mgn;?9lk[PK)#LXSgl(?4I#lcb\W>#<4T'Viikfda%7uekO,GW/DWq)
%mpX=/CTF?V`]dD*7W4En<@+T[+gN[^_"p6Q==ZijPf$S>3DrW9ZA'&CVeGSiE%'@t&@6,Ai:ca+JZJp,b!'-$o-PLcUl211RnC:?
%(h>[8_7*@HZ&#n+!kRt*P!`@lc)d4=@,Y==Hh,`QYLSOY4!-VD-?+[-\tg0_0J73b'?c@uX'n^@`DB=2KcYu)?-Wh9B_87s>Q&N&
%!ruK>;L'foiq;F4Cgn:SQ6It)r6n.0njL5?B(@LLZb#@QrguqPCqcuH@pVqHp5XsPX$,-Ub_S?+`N[<TJqKK17e_!JD#>QXemRe!
%QNk')Ieb-c>6^$OI`c++\m?R+I25!]q8k>Ajbcd;Hsk8/<jbmESfWuSb6>)=FQ^rTLYpBc`#+C0]-X3==^`*YeZVGbQSA\gJ@+g9
%@:1s=0.<"SG1XG\5"[+L(!FHV/kY@0B\2S(j)h-)VXSbZ=P^Sn;<&3?b"af4/T-gVCZlg<NnemO-D=5V2U0-)`E>)%]nOqC4q(NL
%VmeZ+H/(RN@c^bOVlSt+ddEM7rVl<bETW"N'CI]e+Q?sRO%*b8YB[l)lC0nQ<^Cuo.N[j>N[Qc1A7nZHk5-g'?-?+Ah3iZ[F6H&A
%\4^jN/+1QeYcgt]>8G\/W-T)\i1\#c9)O,;]s#VjUehW)ei8C>$AUC(S9#Rj;FO;>^S1#BD`X:5-f%%FgJ_iBF:#BH.SA,7ENE*;
%PC*NsMga#*o\2Cmm:0OZ";5:e%sGW2dIRtU7FeYYpkFBlMXR8JHe_<(?f'As]RZ&MA:=l#3D4En#3&bHl,5)4c\GE+%J\.iV0=iL
%6`V".>'f84[,Mu(7*>qn%gQQFfA@/br4ZeW5@CJS/[KjQ'W`B(O1Y_>ekH!'5*'TRdCS:kc#j5>N>B>ecF&kdN#JcgQ?rQp=P<<3
%*?36Ro],88n3O3N1]%+?rV'md8uNdHIgK.5oF,fE`th6;JtD!X]^n-JOeZk`EOm6iG9uuM'k/.!+#hf4fRJn!ja,.iP>\J1d5`^4
%=i/j,CalOEa)F2R?J![E>Ds;!l<i,m^>_TG.*=6ZZ'A)>)>ZB4MVb?S5p?lP.ih&=o^?;b]'f7`<c70?Sh7_*X&o8uJEe;CH4WV4
%$=?D,%\\1s/n<GQ4*7;IP;Ws*m23PiS*N\L<Sc!Ek!fYn4t2W_hd;G=s%-ioq4)2BSa4d7j2fIdm4$VK/qqu)j9'([mgo?Bh+Sub
%f4bjA='aG6S2Iiace[aLGWcYcnlop*WoFb&SX=IFd?$t[=PJ!HjNACC`gCL^iL;j\6tXuVnBHX8;!paP,dc[qj-FgKU\'H9\Wbk\
%q,?VQhNrJ;3cgVELN"9ideBt#YG7<(>BZg0RdiP;iKWAPA]"`4E3cCdX%?CgNpL06;"\lYFW]J`(qqVLX(T"-Q"RN>nTj=$iRt:p
%rW_B?5</G.f#%"mU[,a@.A"qMa,9A%ZQ)d1dh&[WP77T;JK-sEd+LSs5MERC;O*kk:d;o^a6Em0%]?W!Sb(AU=-pL%kbC<_(:pb:
%+6DKR;1?3,h_.J!$_Q`\9KK$>la=1eNClfHX]Y7(2<eb^dAD)\5P$m"0jX#G$;'KU&u4Z9`@Uee=S@fdj6B3E#E`>DWg5,Amc73t
%#rp*;NM!!?%n)l!mmHl]kS*A;5SJirUJL?#l[h1g;&nYi`kUROJH)KmpOlhO9gU.7OplT3a8iKd9)PF]aHhG:h'1W]n34;HCT*,?
%9>WcOFn*URK\kMQ:a/oFYq`N2'_)@o@V-[(VM.sfapB8;?bKCpLN"#O8K5!TfT&mA/LnFTimKG&YOF<^d@^5^hglMkqY.b3/cU;B
%<9P]'!^ek[o*o1PkT/<71HGGVnG,J%#;B+-rr;aX#RZG3=YJf[Vgna<klHlKM]ku%Dp@6;bt*O;UPlj>DcPItc\O.\dS=]I6i?=9
%9&tkrO"J?4R;JiKFN3hC0:V+Y>i]dWj(A1WI[Y4a$FV,6=pest-%MH3-ZPJ(;(+"/+4=i9/;/ha&6;[)r,EOK/(m[Q^,#aE%RI8H
%]Ch#'\67#dbC72r[i>0PlX,rP!<pQ(l"g1)L0E?U*oMct@^T@rrk3$67^"[uhD1CVBRN(9-QqF;=;h9dHMSJY1Y8H-51G3uXYe?@
%[((%4rp?652s>E45Ag;b)7_n)Dp.9YgT]c=n\Z9bg/c$P5IC&S48>-c8m5EUiudN"c-\mt<723UrKk=V\@W'4`VX4U,0$'U<RgW\
%n:0Nt_A8eG*4+T]`L9SKb;JE&@t*1-T\jSLmFHbJ-b"lrp@u>'ZYr<_(fJ'cDi6+g:d_088DjN6F_LnQFGFo=E=eOc#gS(@8Wk5I
%J,/Qp@Q7uhF``4NNP]5>#>rU@f*)H>DdU@R1oKZ[aC^sY<iDOe+ZFeWI5,2&?W2"oKi!E>/=?5qYpZ9JJiLC`LU6C:BBSuQI6*P#
%kP+\G^[7P0mmQ=$jkY>g`-<ME<r?iRm^EcS2pK^L2Y,FW?t'QJkOFU&?'rQq]CEhU/cD1Ab7(Y:f-9o0P.l.k`h\i+NWEj6$3Y<k
%q/ioBY':R!asnJB5ON(_48:`,9/WI&=D1lfG_g65h!Ne-434j-O(meONT,=pTAEZ1DX%..SZODn+b'/O0NR95B3sTAMC9*co`Y*d
%'h;j+EYnC3U%B^UQut\/8FMt!L`pB444a#D#iG-U?.b1))TIlZ&[PLXqE//:/NchrdrsW?NOqQ"F5Hls-spoiUq)/EH*\X&9D<_&
%M<bRrC":h'JfVd/`u-).`ZW8^gAua%=Oh35Cd5&nmAAZVhq_W=_aWN;Cj*?M;LJ1hX%1>oqn$K.!_)#q6pKRad^llH#kZYp<J7U`
%@W/Ekes,HR(_W+\fM<TiAFu;WgR,bD[I34M3G-:eQu5Cn2V"QB-^2Zc0k_Iue'Z:akiF@H\Q;>/^*?E`'/>fgI/M;4(TATh>Q&M!
%/XBf)^HQIHke4IkGdHCRg[h:c^Fd8tW(ih-LF=fkjf#V5(l0Do@B(u!Tn^u9$0CF'7?!M:-C<%#B.;'c)L1F39=,k,0^[^t/6:nF
%H#GY$e#qMEna0b0>IHW$qeZdPD=bo(FE>!A]>PCkkthNZW3FVX*o@p^M+0A/i?VSUD(741'(NH7fNKVLXrf"qbcb9&4-/m,7Sq9R
%dopJYIDg&.F:<ltrOgt^:WMPi9\g`'[me$[\_gH]a&S!'YH4FAHMm`,0'H$VL+-=d-J#D\`,80IH=T^7XkF;[_!l7HOD36L''mKM
%78_ha9'oa]-cV`\!m9!4?8aCD6K+N=).F"An3Woi-7B*M%T]\iSn@[aZW.Qh\'o<Lop:k`J&FOAa4nLYGKSh:m7u\j>JZq.K&2jk
%G%3`',*KTUSE<<2A)P*[LeLRHPDH4Li`c6M\hB:p)?YVFjgZl/g3tUeU\uqQdc(g?<Q4X[%[8(<RD/0DFeEG3%A5BK0%t!Zep_Q&
%G4Z:+5<MAY8+-(ihO`deXo!78YugC0Ek?Rg<dHNMq4JsDB=Lma&/QG,V1LK".:5:rQ-9+S"+FK%@D$k`XeVurS@*lsSqDjhZjBk2
%qJdhpdPKVl;gTPfJ3qNQ\I>uPqLA7=anke>iHM3[mMOcN\?"3Z2TKbYh^lk9dX><^`bZHd'5<^M)C>8G]'MFQVRVL!X/relngSlp
%R+L9=o@"o@m`=ePh/2dQj[O-(ZVdJ/.ck\urQUiFTN`[=^4)<W(Gg4bb=@.j99La1$b%-fUs7cOmBt\<loZE&=]*7YB4*1M7NRKO
%j[df?-DhkQX6[;:nr:ZFP$]sp!Z\@_\*P:Wj);l>DOFoaN`0W>Q=)TBgJN0=p[bWk2e2e?Wt-_"]3;]0qQ^D^1ojV3$dHlo\JSJ8
%)\buW*KVt:l6<JTileX`.,=8U'5OYXAm&%tGAn]qC)VEl:''.1PdG<E)KocQCb9k4b/Cr[@niN(BOXThUF7\(p$@_8B"_2'(GUoR
%7G`5E`ceue2i$I3C&VK\hcK`(h/5(;pEfTSqTX?BY3an$`"MEK"'sK.3)0\s^RGH.+:q0tdu6I&[!p@<9+JJGV4&F9OI_uSL`8'Q
%)hoO*Bk]Vl&31QFe3O4,G14m`fgoB,oFOcl`f*)F?2)A>S%bHmZHY\M3>8m"kO,:^.c'P,qf2JW.bq2YgZ!\Xdd1,ASa2G)B<,M[
%Mki^-'G4pXM.u`G>'jg*p3!gSU[["$8=nrNFLde9;U8PYJXA^*Rr2Esg1!uqT!Z_JgCrn?D%3hA4<9I%,[sR.Pj!'pdEu/X(_AM#
%^D`5;/4MH=1g[3"iVbmWo%Y4VgLGDN-=?H6pEfTkh0EA2]7p3j$%oc]7V?V3rL.Wi.KgpQ9HQl'(9rYCg&PU"+X#m?prDq,!Lfk3
%X4B1K5AdV8qp%@'4h8UOH/i;eR[j3ITM-q9'<A532e)(2Y3pli2#?(9<dSC.HX#mfUs"0I$$XGPp41tj``L^fIB#MEZ/4'n_[>6R
%2`c/"Vp!WF'9*"H7DjN2OgR#LDL%9s2>T^C&B90:nE-Io7,lMnCRV7E.NhgABNo>Y@G-&f#..6_Q9,memPX%Oo^E&;l$jV(csTQN
%eWuLb[TWuAfi!FhrKc?4O1UTtHgEBMp\QLkI%>/@jEC&WXn:YXTo5UmbeuUgmRai=[,53CeqmIO:Nq-Z8m"4q>F:Ib3b5/E&<d$L
%Q+l(?gC:gMm>D/Y1`P@RR(:\ZT&`1EmVXtUOU($"6S_o??eFA2>LSodm2m/r@uL-//PRu%<i$>[5Ge7Gi-d(`B,?FVJ@/&h[2lLr
%BCI\9)[.4[6B#$^7+oNgMe2BtKCktT!0Eg`4$/>\K.&ti,@47`hLGOZl*k09S^m*7gof4`Fa_pG%F)Hg)InDaN_Mm!QS,&cj6m2>
%APkAX0,kTcn&omLJA;,Cf!b/FK>^/QAunZP<7?JkeG%:F3V.W8j;E"`;"$KbfkUMo1mSe(ho*O=5d]-D`1"&uBM4l&i+DM,q&!F]
%o@qU/c.7A(,k"CtE?.9Fprg8).,aQP(lOl]R:e=^B<<M2(l"T8=\kWcd:L\NU7T"e/BK.dQr>_CM04ui&c:W?9JkUonieH*#7)F-
%4Sb@[kF2[kL28mtS;g*ghi2VI^>p*LrdB^M9]#O8G3;(1PM7ndiUjgbnr:umI:[kTT^SrV@C]b=k0')L2cDf9JU=rV*6Ys1aesG'
%MHGTH'aXjkb;?gC`)5gY4Fj4%TQet*PM!=W9oi^r]Q:VN$b-BeZo5.X<HISSgns&]aq&"oD'1`[rjSG$-!\1Qa5K_[rTr;ZZJ,KW
%W]InUs2TWNIBL&;nnA9*5NMT@k-m=bB"Ami8^j,1SXIkH)q<0j-bB$!=*a?Fg,>GC!#3Dk;`oiuT&@\KmI%O<R?(k`(./,)Z6%fP
%A1>t4GS&!b#&loON%#lfg[p$$H.>/J[7HT2[jh)-d6c5S!pa9_@hN^,qs?b_3=*)ak3dW1lI52PnDe;/ZWssIqe6k.0Z!'7_](M7
%qb8Hlh\9F#R0`S=<=a^C9U%YgNU8fe-qhn]D^VEIFlG%D2lpkaOpG?EK?$2Ti?Sa[4h*@_nWpQkLA7c',h?b`)S/BD^li,eL`r4#
%AtMi8mBO2`?[$/QU.rBuo#L"(.rqt>+4_<FZa?c#%PXt^ZP3!SAjoB?Cj!ooR,,OrIf!Q_5/B./Y+-mkc)quQYc<jN=Q\@$\_Xs2
%XhK+f,85JjB\.F?fe<!Lbk:uHoR@-*0A8J>Iu<B97UJ!cE!]0YpTK_aa(D1rM*2?1eR9O!Dsa:r3s5L9MNWtoO<;cALieKCr3IdH
%2NsVXnP@Uk-f\*8_n*X<5LkgdebHYDdZW^NfP@5[LsH#9gVo.unu"Zno1f'p`VldI8&4Vf>mh`)eJK:()0bLkF\[JHDBWqbr6tZ#
%DW^>p^F\*j]+Y.XK&Kr#RC38kP2c:,:F8Q0J5g+$X%$X2Y"AFad>q%"F6]>[SfCgrS,.@KI4ojtL$WSVC<?$9^FCRF6,*!ONdY.&
%#Vb%Ncg<pQDu/i-q/DX+QL2tSrjIQd[VNE5^5a:`I[W02+djq;NO)]Qe3e\]:2k@p!eW6#eidRWC(CI(mr25bQd;eU!@EVEPGFN7
%/gB_Sale'2:"Z+-osll*rnHZjHPH,,%DCHk:ZpfVTt375DsMeG`P4(NEO*<^j6_`=D9nQ\R)Ye*RA+_mF;XhJ_\5c(:.qK6]7UB#
%qFOSYj;a[!\'1\)+odu!Yb>DA:O1M(9LAO-2WU)"dY+"+-a_8;K\8pu15o95]fDrj?hhlb`1]cDYi,YPEk);*HH)+KQSX`7%m7iL
%"uff6a\jC]Tk:D?,'c1]LOOFqDiX;B=hesY^T:)<C>TitG.Bj*9jrB5*g%'fC^%M&jsDGUS9I"9.'i5qJ`YZaf2C94I(e@A0;*T4
%k/"nb/-W8!#f#2"Crfnj\_AdTL6m1)H`]"=ffk)=i0FO'[XDs4?B!1L7Tu:TrO#So7gJ,;/DZo.]*!B>=FZ`P3,@DQjaR.lXEA%%
%$D%tX/sEffOGNIR"VA:78"n&5mZFf8L;?f12]@!N6+W%7cft`^V_5+%ZBiD3m]M*Yd5m'cq>_TFfNWJGZ7j*ZW)D\=GiV]A?GsXb
%-FkcnK[8EOIPsB\UA#mVFfW8Oo#KuR.rr7FT,,!M&]H^HIP-J`cl2YeLC>tt-9J@Q$MW:8=BRSB5t/KFK@_WKQ>V2Zd'pW-]75$o
%I5(nK@b%qVSh?llU4Lj<!o90=`IYPD21fd1c7=_Yh'14Rj$>k?Xf*";@@JL'U&kW@ol(K1jEW`kHu@e56s$lSQ8DAfnpS`sh_k!!
%TD<KqF_.^$IV+mn!WsZAV<>>SrbJStVrlPj!48)*(gMs=em].s7KFm_/jRL[<Xm!MFG(sU0F!f&1Z3[-@qBPErH<hM=6:$ZnTM`U
%QL.-hIp^)dd%Wo4_8WPVYbtqJq)T_J`!@T&-SgbPl;>:s7CDnXK(.6n2.)he.3pBCq6?UD7$pB#r#7B`j]::9RX[EtG(X\Anp]J7
%&'=caH<IX;\,,D'L0*3bQ8!8_66fhJl+3>I[[u@gL`!k;T)=H_HWl;*G:!_BA4U&l;D`PFjN@n>-J.d]5L\ZGfYc$EFB]:EC9C+2
%:4"XG4K=i:(asdPmi)u5gYKNqpJ6S*_hkrbH`r?Tk>Zq8g$ng6mR\AZ<,2IHI!@4S+m$p:Cb:P[-=.biOk1/lB:OS[*Z:P),G<85
%#H]\JiWSEd$sL*+BpEJFj82S>m-&WIDDq:=Bt-5b[n#e%e\9m_hY.3KnMnPcC>H&Yq^-^$UNX$06?,FGMnRWQ5![`dEfr$>)EW_\
%*$%#.-]61*%UX!TB_4r6,GU#/'*a[sKBPUqDE?I2r^<a4I"NU9ThhdJRDnQ/V?AjME$e]F%>_qbKOPcR6Em=AOWGDU>qPggjn;s8
%]U9[<%d`E8W<lFAF2[Llin_.nF-XMbs2V=`c!oK]l_cnECp(YA$E8Ri]sP).afL[LM2dhIRd;dB^2d#K=9<u[0k?$VmGm.K%n"dL
%ks%Yt.P_^=<-6"de5ma$krEMH"n$3t`QT[Z1MFqejO#G)]Rf!d(/^[ocfa6Kd+f\FpN(S%PeYK4a6>P+EP$1^<k6416V%19DX+A-
%0JkkfY^f_P[tnY6rf3@8R`][@9H8]ObaNeFFoE&TI'Y,k2XbL\+7&P`rAUh.^ON@<WZFXFSC8o`SEtiRkeG?&Dd]h.NH!,a+s>iW
%bW4l(V?.Hem<!`8lPQ-_%]D'o]%H-)5$d]jYW]qf0jNpT^k_;gC@CKH<lMiJFkW78#u-]%YrEA)R7X=,ZJ;@/c/(aNaTlP2ni.jn
%ni4Kt1:'f_`\8URVL<^Jhai^XFOn<DQ%iq?_u<T33=sWJa1951917;p/3$kN#7Cbp*Oa&>:putsUGkok/]dZdd+S7[T$Gr/J^aS/
%h6Od9aQHFX9_!9\5-<Vr1>cuja5+A^lC0$gC#.cj6/ItlKK62+4W0'A0"lY;+?d#%iM;C[mmWR'L_u!2Qt%g%PYdV08<a1:S"[U2
%4a+LIkg-$'kS9b5?KZuR,/DP;E(X%N]-hY_cc?;\29kX+IeLIHSng$na5Pi8gn(^mlhpaOd2qFuJ@AJQ2"00f\mN`YCO`rn[p+/;
%muNBK]:=(\s"(oad:B4/ooqj)YK`.FJ&&BK2Ua<I<7WGD#?F'Q<7@&Ondu#Hf_UJiLjij%A3LarK/f)tdm=b&?XApFU@!hodL%b:
%ME'UrR`5IppkjB??Ou@gaUdV,,+R*skNQiP5QAKck(!D;^Gi@n(H/7>lV[E6rjeTb*l^MR7.nee't*9Vm&kBmh_4V,Qll,%_WMU2
%_M=]INZ;NO3r@gl]0JLf2DV<pVnG.VDE&W;"]4ZW*OG'!F%#+4ESf7:Yk8"B"E]ot)a7,oeS4dGX?\b9!]0*U0LkC6Ts+]V+J;X:
%D:XG/=TE!?X8aXFI5oTS2?"<qe?9@ATpsG4!S9;@$k@Xj?hX,8T(>3FU(h-acVZK>5cg;iRe<=BX,FQ3jbuD&aCuaQ5dV/JTGPZ+
%Ws<%pnP_GpkKO`t(Pli<1n^/Md3>$?k2;&25gh*q?5Di+m2W4+aHip)m2rCB1:C8gR[*s!_q56X+:`pMW/b[E-u9!/htji1iNbBL
%"g5^[IN":N'>7)kAd;Yc_'Fmce=#=[L4VDSK1ldE-EnBO"XMb4#6Qus'C#Vd3H_Sq:><Lu&/tJXi'iK>@?kf%"V=\F':V76+,;-G
%^4s>%L@'knUH:2?1WsA3gb/^3';c1$I2s&3AFD`uc$Oa.T[_5[^OM2(^srUV^$,arEXosT5u6UJ*D^hM+uC`9_?CNlZDih'58`9F
%W#TVb>QllF=Ji'PlYVMm^2O\qXKK8,C9ZLG[+$jt^"%0H=JNiT=.e[4Hm:p(:2F(g&.o(9Nt-!:"OTV.=WI)&i)#kg+;ZmL[RO:t
%.m=Tn;\2pcLY*Rd'[]1^;f.do5)>3?dRFpAh[Cc9cqYrsk\/d6/l/!Y&fo,01\jndi?r&[a/6m[HL*.X#XF;"EP/-$]JI;dFC_jk
%NW4d0Rmjs'9]YBRP&"Mt)ee)\LcBSn&2rL`NECpf:n*C[LDn7qBXW\u0VYcR+jRFoIE58AgZ.`+P\%/"a);F/.gpG\"(%M70^Wdg
%O=VbN3$Q!skf"6<Rj`h3ZKD^V?*q25%MHHV*/-hRgFkleVP\EE.e,0EEc`/qaT<q`Kg@;G0G95@b$_7s]H^T\DsT=XIA8*ai$'6&
%XT:C9j=@L'3J]&g)pfeFG,uHLm58A>V"ZkkPRHAD2e3rWbrFdmpD$B/BuM0+^kj2E.l_II"TZ?C*m[:qHte,OA0CM6[+[#Ce_BX2
%iAM"q=;52aiQ\H>,-k:l/ofV/6JUsGQ^B=&Mf&ML:;(gi(1i&/)7CUDEM:5\H>6bCJJAGm8!i_:aQ[@>SI%+'`RnWg^R[_5>EEa%
%9]rWqF-O10P[]T&YGFP*V*MC<(SH)09A[lK[U.32\krPUO\pu2o\7@I:/uDm9G:5(iOX,X7fKHmqAKB`-$1mNV&ip8?-4LFl8?XG
%8T$bT*=[ATomm(nRo<+*Vac<,l!UcKOP*pA@!EMhorW$YdnYpAj'\)O*-$?Bo/]-8$lmck*1Yoh<a%sI=2B5iVZ;9S/pSUpg(8/>
%"Ud:3S?3AoY?=G,qO$Qe7>2ei0>:]!DT1#NXThuO'5\fX_'_*sCsWqAp4Hc]"Nu>)VMl``<"@:2a[Z(QZ*T>h4?6Td*5I+e0H-("
%Od>'oF[>+i<.T?kI];ou"7UTYMbS/;?9s4tiOd[c&$6Y_*n45,EnLqE0SoMREJaG5l\sm5+\lrnVXEOOWP"WHoBWCOIL['9W2[B:
%Eb]5'hkk6M^6CE5fHL#I_9!T&D%G/GTIR8_aCuf]@+V^^aB[QGXT6GphL_9'OQLKEOJJ<l4q&]/nieDJUf+mq8m`C$`T,V0B8\I7
%bcO31C-hJi56IoG<Ke0EVmrL][L!B3!,fNL)^s-.%ai5?6I_6@i3KQI^s-@Mgq2P!8;pVnBsWG*Y]\G]VLU:S_R4Top^3q:04Jb,
%/R2X]R"&A5.;IkWW;2XDE5DU+-pWUm35)'`QX(ObH:lZ@rDPl".b,DEaM^JP#P3'L:AK)fkha57Jrogd_B*,]\(ESsgH&/=?bV..
%io]<T.ZToK7m49aiA+)1@#u0NOO4X!/m6A-R#'Iqk#f]ILRF>%&@&\HdTln]*cBus5A+!m**Aqtn\,aQ*>JQo7m^S;nZKT!LeA#E
%Y64hB9EH],&<0E2[?FEL6n]Gp@o=`Fg&%9W#]FY;Z$IB1EY,V6i"360+;Nk2+V:.no>;[sVQfKi^]IsF(oCLYO<("3:tRjlKaOF?
%XD`gFA]jQZD%rVBXm^1@0EhO`\;aJda!dRQ#79Dqcucm,I4ZFj!HQK]4C-J+=/&%_30MX$IBrd3/"=//J#p0<!=RElmZ"DZi?E=f
%Xm]jH:ucT<\UZi8227f_<W;E]E]\BrE]EP4oSYC&o>`*sk_M#[9KI=D%+OD4+FRN,cn1n]35\#QGUu7\=>Gu:m-7n-%e2A;,n402
%@c/,_jZHRa8Ubd0j9#J67EDkog`S!P*Sh;`+\?5$,mR/i#BA)TE15]39sOS,elh;k*UI^]^?bAuK^>Foa50.VAC@Lj+4#N1OUL0M
%dCX091*OH,D11bYmJ*g3*76$e[fK@]\FWGo05K732279j_Y$/.m<l9`=dNWTA</(k%<gNPW8%"D#58^S5&f<]k%,&KD[3609WTFT
%24"<`CLc8u)9Kk4'r[k#PgV[@4%pg?i3VQOWLX:p5I&>4aoBip0E&i$?0%uj)R*R\XgCZTd(I5#Y5m@\1U(n$G-OnEe7gaJc5:.g
%W:XKQC"?aiM6R?@BFkkjKljOI*8RrZ"Us,F&`1?!Y9@O*'XHF[]gO6W>idNk(UKjHL'd\`2k7$ToaH*j<WYV<:6GJ9*$/l>HBHq`
%NEF6Pc_VdDdG%^?/g44l?o[F8p#DL!n37A]?I(837>ga#,mPo).Q">[>[2JT4YTBqN5+a]YrIJ68HGZFP)J%I>Wd?mOr9?5(HRE(
%_pF3VXSPCCd+.VF\I#mN*6a+R`68*9VqN<nG2"T#C)i.7`gT=:TcVUI6(Z(7qQ5[]%=5?$JV$m:HsDLTM,$eKG+.SL.j>u!i#&uq
%Gi#MQ;qaspHOAZ5^h5%&H#Z)UJ!*>X@'*dJ?gMBLDU@,XD]ZhC`Q`-n_\oZb?3P>*M]fHM>+$)%/V>ck*<o;\*;E68j2KTU$7l-:
%2HI,Ij$&28&;$]jammKiDkfT(M,o5\"U[,4^Vp0i/.NZfYg/Q<e[.Q<ErIiEhc82qFo8_LM-Y(mql#@(]r/EYjofNM'pdVF3%Vb+
%js@&:6=c&[7(c/q-Tsh8TIXa_6?H/L-\n3o_a1l%h/lMRU+pJ*LHUI?b,..O)tcK=iI+@&LBeEq1NZ&s.;0KgWe6lrp`.gEJmg/2
%6Q8F8Du*T"N.?/-]RC3,_/[i-q]N_CkaR,#[K*cKL$T</FKR'I&@Rj`2t<k++AWIJ.MUo/-*r.0]pK/sA>tK-!:J4+iO3[='gh$$
%RM@k]PH*5NFm\R]c4;:_9<O)(TN\!]`iVQXp0Gu#7QUQ[R'(`K!WD0^FeR]S5nuNbA-KYV#pNLdTeaGIglc%6Uu&Ys_K=adfcm!u
%/r4]^6^)5#<;GQre;0$c<i&fONPrf38J&#)#B53p/_J\6N/4sj3tl1@A]Z'O/96+[_H0]R`uJ$UYOfg!dorOaIC!2_ga\',6"90[
%`9:>"C-S/S*s0s1=uGQ5R+(dnL,6KBpqNNjN-/8cp6IPjSfQ(ti;d(%%$m6Y.3LrV)U\+KD`M0SeG&'&T*Hj-8<)J7-cAeaRL6ge
%W?(gKQRJ(ghr[M;.-+Duqlcj94<S"ZiX/"("QEV0Z`Ru66K`ZnqU^JK:Q3UqatNG_09DmVZcpdUHh4J#e'r2$J7fHiC63"MP*c?`
%#9W[e%\?L/CkmKk8>,]3`.GnkW1sFGTFVN'0O2I`AB&PcZ]U,nh7`25CC,rs,hlD/nU"r#fEq8HITB;L4TYP"oI8iIPk&!a/r8BI
%#;r3l&=RTb871)h)6H/m;PB&e.a9udN$3p7ba)q\,-kCU84FeJ%d7[rI2-iR/@*[$.Ruek?/S:[V7uDg^Fi$0W)Fq?pL"sQk6")^
%30q?"gmSYBdX,-/5QaEiki[bhQ]^p1!m.AL&\Sh_Lt9MmLj`Y,PeW1ES8:TQM`/Ej'E&ns'&DgV6l`m#Ylp%QFL%n>QSTaZ$[4?u
%ZTtut<7&6b@DKg].-tFe'tk.Fm-nE/8"r^DNt1f<10CsW:gD37:?T#C4^'WFNGV')1ijL]"bT8eR2shappHO_]QrK5q[f?Z6I4KV
%H;k.g]elXn7c<CgBPW(mo!F_b]lb,CJU:d+m>^E:EPq3HPUn+?kg:AI#4t*9YDWChW#^p:efuGZd7EgWVd*2gH2_GrU1onU;M50r
%ELjdm3G<_1F0m-?+2U5oSFF*:/W"\'"ED@2Q\r+2'4%uffae<O2G>CE]huW&^*>M7h"n?nWeWN\5EUe,PrVNaPA8I0ednJn_h(pE
%5Rm;l.00Y/Q'n?f+t2)\JkEB[OgcQk_84?pPTQ)t]28CW=5<#;dE=F=>2<cYQO.+3,+b?0cLI[nSS+@tpeU3h:nUmV5eAsUfm*=E
%]kOKQ5mbTerbg>$Km_j`ioJb<D1<:#e*oPUYGc11AQ;).!UP"n3g-35ar2<<&>"bAQF1n!"<"81hM&*kNuGfVaM3t(<Hk>h;Jb^o
%\HQPnkgjJMhj;CG*P,FD612"s5CCK""]VC/@4c/>ote&7odn0k>5iB'kb3f1ok"$"oG;d!?/mWH.d42d]qe$'i^ch9DB8)K]eFI3
%kJu4b,YbhKi)"Leji7$#FQs[mK+i"s(qq!C2ji%I2X;Ko=?":[A*[c%!Mm3DUmL.RPSV7rq;N6HW8%s*BR]4c3n:7S,S]!N=Ue5O
%)R#p$ZOS^t8tl$,oAgiRMJ"<AkP=Z!;GR&s.J>m%Kd55T2<:WN+0NMR_VfG=(@879qruCab0icDToK8j/g\'*pFA<F?V4d.'@FXH
%NQ[:^jNFM<hF7'0X`2^,\RC,*j0_=g@.YZ38qObg+."'R^C'C(?V[t[4tbLP'[>pRI9C\*R?ie7G]hP;B*BM`js<$\Ufh?6Z9j5_
%,iNc_%l^f[Z\U)p(#tD/`V\nm(3`NALd!M?\s?[%[(JkV>$GIRYoTkb[Y>YpnNM_$>/u/19#EMq9g12Q%1`s8/n]*RXH/".N?JQf
%'*Z7$8K(rDJDLJ,GoFU(hm3Oub.nSu3Ej23bb8aZR1JJW.jtPqi69Ii<s95Cc<64R:d]*D>,FD5]5_8l]:KCGa;'Y>l.T#/?o?;P
%Om"Yba+47u;OZ3c[^+jnLIY6n+6[$f[fN"5O(pRP9[PD4f,0uW*/nrU)TC@XO+k"30Etjh\$es#S=\S(nDc[=OAnbeLubX/RnY/;
%U33oX;l2:j@dk5NA^9XDN?<6[%&.Y2AhPJC2`FK7SA?AfV#@7MJp&5&o@O#9P?5KSY]SGb8GHIYd\\&jYPZ6r1KE(`[J5k$4ka@s
%6[-gQRLRk5f5)VFg81-IYApr0'^m7OEP&-B?b9ib0psT;P%6.n"MH,sc\$oG@MgqT]3@tp$7(DTF</UpfO#9E=l*+R<IpferOf'p
%?iKf-N9Nr1^ilB)5jGqljrWLI3VDXs\fXZ3<G?K"Q*rXTe7:/aq]PF&_h@#Mg^?qS_\i#J:.)1S'Mn]"_+"Ob(@$Wh2+*4.%sem<
%)F.eb&1Zs#:6n=/?.A8I%YIV`Z9$PNLneYk8Q\oibA5'sj03upo:h$:PTQXSJDQEDBtLYa>tJ&.RGd#_D_R`?7))gjmlC4m)a(Zj
%Fe;.od*]3`K5r`IfB9$62Zc2ab$n_sM((8Pr>M-&`N*F^kXOY(V(>;^iJc<P%n%,2o/+an^6tEO64JX$9'eP#DRWH?F-EtL22&t1
%Dr2h?",U5@AVBdo6jYIk)Q.U8=NpsZ6tZV$'g`eI\-3,3l.Wqu$amXof8ea>84EL,n@-h3!)WYoWXc84hBMO,82HF<7'Fiec'c5J
%nQDJA^%m4jY>R5[U!KF@1ejUL9HS&rl<Y7,D.*P-fV+kR&k>kIS^ec%0WaP'C"lm6Rqeb5_M]HTgsoemFRL6s=6i%VF^uM-Jn:ig
%?TAZ/fhP?!hQ_@piJXjNr.rP>7kh+h[Sn=%&hq_5c>*(/h:WDaA&(M3\#6qEQ=\>p+*Zdb*`>9o6m%d;0Q]&1oEUN)1bQde).t83
%Hi&d1]JGc`Dc_9*s+-1$1piCCGPb\*0X'lPX>8K-]?tl4WKjf\p6rW]15l-K$oRZWCE,'6;!iciSQ-u:[[_B3TG+RfkqV#B)_sJf
%YPm7:CPrc#n8k!n;d_p@cqU2D%jdb<SL#/i_7/hH<MSS]G8]U8d3-T_63!EfR5VahUQ(sFFJ)WQg9)Slha#4HW=Wa(ICd)SGki9P
%8F)Jh+N5\e<tn]6T=$d6Q0@X[RaD>i&DsB$4un/NjoH](cN^nVXlV:<2)s+H>A>Th+9L-=6VIuZ"KV]N0*XMiLr6khF#%#u:*19d
%WAc[aM\)VZ(3:/iE6u3OM3(+L+\_5sGL,Qk/#Fu%f2-FJdl]"X4MT,#g8+2qZj%*(;<VUB=%@/2MX_O`fte&^[D/(ao#p;q4V5+i
%A&4Mb]gk/<+2J9gZ7C6g?(aEo(M]ONh8)XeSpVWcAW'2s$#pc;S@iu\k(=T@l>Q1BpFN*7l,bm:'%b2UpK<\Q>DLk'1]UoUD#k>^
%\o8d@[%5AXA]X:2Rc.O;Hpfn5>$_J(K7rqQ1c[>l@2Vk-)l74Od"\$&dA[Z<EI%?n/>qSX@GFXJ"\<aWK@:KN^O]ZD1Vl0j?HI#,
%^91m`4mL.H7aGHr4fl-Pmk*5XGp?.>j4^r0/hr,4l_T<s@)I""fW7Gh=\!\TWs?S_W"FLskIOVnJPr4B?WocER33?QSUGIHkQJB"
%&".l.#d3DXXe]sEX"teaa<!]&@Db[hB%t@+&,=5>@K@Jq//OO8lAYB)Ol59ZJKYhB80T'QCK&fL"6#TGo-B[0pceS]>ick_B\b`I
%j<XacpOTNKeS2OsDLt$1kB8h_LiI:2"s^BnJfhU0:8)p-NoSn<'\0gae^M#.K!3kE>+*ZhD16<\C.etEh`bhGcnFR$N2VgL8I_6W
%_W?s<Lo"Gq&2AlbcZZO6G<&AYc:DJA/7.@Z6/hKu`2!Xd3Gac1qSGIQ]BIF2gM''g>7D&shNH]$b!IKRK.*,-55Vb4`n5FE6kcO9
%f*_AZmeXZ=LEo"C^-_0[GM'VU"C1L#VI"eC![G"s#ang9nfb43>]0U+<QGVW`X:G5"mj!o!F+CNW(-QYcca=&O5kTb*05E'mR>)h
%?]1OHLmH+REV:SE]Ao,D4E(Q[o4hJ1C4<^f\;ifM4X_;?dr;opK!fep8Bu*djguGjn;s0[gmnQ,8RnF2CS:Ii<pi;8g]],7LI%lO
%/F2?"c(bLoY1gaG[q9.;E+$H,=:!0RW\(Xc%Q#h&oGuYI"NlAmaF;%_Xc;bXX[iIPD'@:,H*37HKK6?8#!P9/NJ]1dJ"kN%d4t/;
%.9qf2=?9cW)JsmE'%C2J:T]cd)+Tl7qp,k(NfMl\+HB0Z'(=M-6&Kc9Wg<#8/=_-"*.8OgG;\,D5E.Xei1M27M<nGA]gB5R#W2>0
%fa"Aih5+\65P`^<+sEIu0&?ca)AH";aPV[5_T?.0.nU5qCcZAo<+6p&N2_bPCH1[++62WA_lrH(kT]qZ:=-C!"jAW/43lMF\baJf
%HkV4dLbmm3_c$,2lS^?;6Ao'D=hSZLc+%#r6>D&gXK^\]:*CJ7-*RP:%bZ2f';h9,iOj,K"i\-G#8ps(nB1=3U*Y*Tbn$W).=<"J
%[GC9T)VK>dXWMJ[A'^aQm_/6XeCuZ`^f:8$*c1?]A'8<9HX-H=#q+mOn_hT7-=-T7C7b&#q;0!gk;+0!9^7bb9t#bI,Q61aDRZ'Z
%-#lEdabj>4j*f;n'mt#Je(_$pl)I'[VrJU[P5<c@MS^(q]ZhtS&^aAI%]&q)-Qn0XeZP!7(V&p<FSGC#\3$L!FU6aIlo4?[m2(^k
%G&k$VaQp^r-.62a9bOd-`/$T]Iur[;FLaH\'a"ZM,csK)O_ocb\\';DcoU;c[6Wrg3M*`&1DH'Sd8"Gs\4j#16A8.MEhq(4-ABJ@
%Jrs*s:(pR$`SgN5&9eX9QLe:ulCr*sLP,@A^!+tT$6qFUIsgUPFrWF@s+jX;lM8igI$.X^JJLN8X1SR/>8HRmI5qg;F:PVnATh$j
%>)JYGIR8KD_UQ.b9n8h,r;re7TIi4H8C[C<4]"iuLNk35K/.1R/6WS*mjFjI%Y1M&Ck#g<GX8l'cPV(G,dePskqk$1b$s(A^2S&3
%6m^jL04>57)0+K]QBtG'q,@Ko"[5u<BT9r*[)n_9JUIX,(3(X3q4;7K(hap_[*ck:Z88^73j+'I4k6U&*(<uPAo6-2EE-Hk:T@;$
%;=`99F\=PElF>nh?R-=X<`=&MZT=6'`t>o1Hq1hNmF9/nh6es#@seQq?Ail/OYeq<U77#-?srgF)'CK/WAt$>mC[(]UW&P6k"C$c
%+/Eu.PD64eU*-VuD"I;h2D'8#<6fFFE0@sU%(isp?lDaC'$'OWkD7QZ;:MWF1)rBR[]mr$4HIQJ)rY^3^+9KDI-^\"O4;G`D&sDu
%C9WuqD@uNV)#=a*`&\;haUIZ)_gfpJl!bZl\3hXk4eKqKm+h*ZDH:gdR[l_iRFlY:PHd4q@eZ)OpB:`HiOQ3,S<]"BM_/E.Tt+7+
%c:GAsf=)iH?qN"NpC)ob=$I%>F:sBF"m6H>RR_s6].9X\Q<[gr\WpH&>oWF8@pDCS"\=rlCRHkQqGP9>R7/auMk1dp%,:/'>Lllq
%Lb=&@bK)M4jaot`A'5IWYbu/Jdd\<D8.mLUf6:0$%Y\J<#(G`-1q:ILoTn$coA/o<I"a]mX*Fo>SJ,.EW.(!R-I[d0a4h9LXjbsd
%G#VH8O9;6l3pk#r7n8N5dr*KIFdNf?UXH5bA4M8>a\$b<C*1aSn5T+D>Vki3BI3;3'mDa3%Reh@Vf0K>e+'F8d4=`"6M$H9!(H>g
%5Cgj1rVV#Z4%t["`PFu#](e^/nAS];K[KF]Ab"7<T^*aM/?B,g23Hr[6Wip+<Rd*J$^"SW,)\L;fEW29g=oDBG9a7jI[S:QG8R*s
%[kDPb=+YLhT(h9=/kh93HZ/2R-VpstN@ba)6<et5TR.`STo=b&^ho\`Bu^`nb=Ta[f<Fk[/-[%3-Ooi44n>mW#XEV],\M&tK8`lD
%k]6tm3s!g+8n9/A-"$(uKfgP=,'Z:!7MUT(M'+8tOK[T[n39L,3KU60N%&;#<OMiM2dH"ABpoMlL<duj]^3MKd0uF+(n=5\7s2T*
%=W$m]p(]cn9[?m]n@&FDA]K":XLK87CY\t:r8SZk6(a$&r!jDt#B\SePiFDo,Q%/p&C4&34:ZAEeL>SUpoJ&qA`D,/9@nL\2;/NM
%dQpf6)0#<thp8;"Y[Ok>^2Z?N!^q-be*XAg4.V;R']OD3]<[dfGPYlj$\qU5;'Uj(#)\=A">[1.-K49BZU`'_?I)e2T60@lp'r'_
%cBh@g*>(#.*ZSZNXlW9d'>6^%2eu/l^.)iCaUGaVU(JN;-'c[6E)ol^T/quacrX,RGa!H*:ld%A2?]kcfM>LY;5^2R>s^g@EW)C,
%>Z5BFU:3e1V3inJdU.aEqn;r4pDTpucFk$&"UDmOfTeJT=,9h5KqhXQ_R2B:#&igI81uaT'/KtdXP%0%Rh;!(gU#!TWCFeM%''\l
%]Q*6kT<oQgPVaT.?ETPE8/InFXrCE_gN"rHD_iD`DNBV^dEQhjde1V;>hp*n1II/r*ZkL`9u56u&`:M\E9%5uqiL"MN3n9o]Y#C!
%1(oieDY3"JNL"bBF6glO<mVXY6/NB:8g?5ig#!8OctcX(KGD570X.<(.12/5>o4kUraPjs*P0=Y)E/p\9W,L@$i$@4n_'&GC*+eE
%R*1tXF:iSafRE,Y"K8;OQ&0KP&h/HMLMFGsbui(KAP?fuNpS"A;dP!?Jamc@PGJX`oFbZd-XWk;E#[u&]^>m#m5nW"a,$.DV7RP9
%LgQGr`l*@G\<Q6/DRQ'TY)sNZG2L!tFJn0-"h9X:\Mf)0r0SB#/8rX*XNK<kbTl("!l(rSk8^o:a;,'EU,(C0`74_U[Xa0[Y/^8M
%:<UD5lWT#ZDRP0W1*R_e0e4C7.o2R]5FTasc^6^1gE8uYk=%'!"4!fJa-6!dR\UL$_p_"[`r$S5Cc/MJX:+GF[B2qFmu\XJ)L%Md
%-eqnb+l0+cp-`\Y6%k?C^3CdV7ol@3\XhYZTi:8pBOB)I!$fWqj>)[R(i@A4BmK$L>USFe&taI4'@j-SNJ]PsoBlN:rVV=O2r?of
%_e63<2WueC<o5"oIm9L3GnMl/mgt:f<>A;/_ujN6'EVL:9+dq0dX8#;9&.CK)7k9,/'$Q%&42PUiL3W,Y7tGVKT[b$#FU.dXeZq.
%2#&tU=d8g3JNqYm1dC]3]cY'Hp5!@PAsa?2X#ht<[\p=hQ!@n4]e_hIbQArKQL0iJ7PGTmMo@]$E$(Bg$asJm>VZ=2K?[K>j-oa'
%brhULM^dbI2Y]iYRd>K>90-[DiU3gt=ba+Q^$l<F`)NJ0(Nr#>AlA?3e*D$uPSlI<+8B)f-KOHhF$$T>L.7BghXHCB=B2AcXac\d
%\^+*Ul;PYS5b_nI('V!VR*@XS&<WCmVSk>Cqc#F8K#80P@19nF,*if=R\[_72X^B\]ttFq$hL,boR_r9LplM1?6aKsdRCRKqua)u
%57_:^4Pe-f(3I;dKh^@JpWNA:ZC6ML_`d+-e(\-Q8SJu,DD2#c)!q[!=4H2SNkn)u]9?7&c%`+^%7J@\3!W`__<TQArH)p*@1g@p
%&;>QpKeqSYQbu>I"*lm:Woo;Tcf&Sa.LWFRU&8onK?*uWaZ\lT=JU.%P"@dUYDJjX&,G\[8RUas!at1_R8X:ud58V=s$>UDY,9*p
%pLn'acLlH%f[ko34[19$[_,Ga<\%cHL-O2P'QRTWMP-<_o/cG2]8"ub5l6@Rcgp-RprrP)5X2<(.cJ=UP&FhoS!i:GcHL,&EOqcf
%leQc**KFn\5b^'H!qJ8`YO=R50B^^A?sVQ?pd+^Q9&s@@9=_$L`OC6p_&($q7rgB*^%4Y>_VP[Z6urlKM;+h^j-(,LcM4u"F1?;K
%Wbc/C]]286*3'Vh@Po>b+=]JXFFqT'J5`e@iMT!0bC&jBL@=VK#gZ:n4-b."UAR",IJJl-56Y,3AAUXf6pU"-chBm,mE=OYjs0eD
%])/HGD:WX'Hi'\[_X6e&I%DuuZW^8GRA.GlRusDo==Pe0M4^BWC#,QPQPqs\itW^r(jjR2)'OXgIrS%b;5`9gTlu99pFE_:&_J9h
%p^bC&Aq(3_s,?Tq(9ZD8P5O'58qDV311&E,@o%]X&a$r+8KQGUQkTsdhnY&bN(C,<OfXRB&qu9`\?D;]Xn`'3WR\bNKFu@bkOMd,
%an@M+Sl[Vk9oIpE"c/kZiXs4RZ?35s+f=0h@ZO$]f%:-:kdo6;Sa^!uQ8I5X"p8d.Eo"d8G$?m-pkQAhdTa<%6@YNl0qV2M7E":U
%WM!NX`eq:n8RJM>k>b\Gn.R!t*I;"J(T3tbk*!I@MF%\@%=TlQW?0prK->J&IZIb*?6W?n^_YfCiE7F3KGtn\4k_U?clMuuk8<ea
%:,aIJZ8PMVh0OJjHLeq0/PKHns7<lJ#E+'Rag7V6j*gX&.:deF5Y$ic[ZdOiUDOjP*IT"*1Rga,^36Aja3.G:kDNW)mlNF/,7_Nj
%hb6+6!J>X>i4M_%8:l%ACYB@jqam4cc`/GR19YK8Snmf2lQ1Ub,iH.1oi3X/kak=adbO>%eOqd&W3"f$n_R+IC+8\%,0d;eU&j(h
%\k5HtEG+*#;h]h@@mCsMV3`6t01qe:;/qQS!*R"+5R+]uqr6&hdCu='],mVrmS[^,Y[;e?5sN&lhYG)OCJ^(`J_D25]R[J0c^9l!
%O'^Kgl@Q]1F[cRM^IJ4L0"Z80=\406m\sii.1E[Q#g!>4o^!SP/-)d^4?4mTqUI71:-ujS#A4c0L#pA'i)`dR*?3*1e_%I6HO?7[
%!2I/PXIgl,^5qYa,,'#u*F\d$B0YdC]H5ml$GYV20iNS)ms?D-g'd2uS*+XX><RGr,Z&e'b4S^[[ZVHu\*\Iqk.CWh^c@D`>.2Km
%3bVIj3;lhLpNDu3X\7]7n^JcFL!TE>>*LaGpcErAj6G[nb1L$udFcQ\ZsGQ-o:PpE(kJ]FWcanJ(29lh4<`.D"kGEKO4"<M@u[e-
%T%8;q@*k\EJhe^U@F"@'9*F7+_d:a"/QtE@k,qJ*qEhNE)<ol8WU8(%KOfRif"<hggS6``fcgU3Q-1Y%i+I`sqU3Ju7aBs7XJ8"D
%E2YC]EJk6JDdW=SQ03>N:L.&,B^(T,X4!J`k]c6%EQK&/NX^f^?faJgH*^!8QMNJM!RB)o^aa(eN$mN;41l"S(q6Ggo=,at;l7;k
%?6t>\*5a9V/b:,Fpl3:m=3DrS`7\pEH]#p>01<?/I2[u@HcEdS&.M3dM?DFcp9j2$H%lk6mr"ZJa'P<O\WWCLeB8eg;fLB0f1r&(
%7FMprC;bX3/U,^1<XJ^h=<;BO!BnUjXju/Kq#qkfK!)H9>5Z'(,Whd->-VaUi45qu>C;^n/$p1m*dJ_CjPJQ2)&LIOm(N9oO3?Qt
%@?%0=/rt5DC+S2"SijQ.MXZp=lI+P3?Ld]tgT`ml%Z'O1[sI=ZW6J6ndQCJ!61`h%IU]f;1m:ZF;1oD7TrpQh&KYc3?[IE],ggrL
%S[QSS#Zal`:15d#!75g,,D$nnC!,b18c:i`\+l-p?GWY45[]K::h0YoVXDSs.o?B9*Hp.fi\FlTQ`^#'d^*UoEPl<Kf9[Y6cpM6N
%,fl1Q'D192[/!cpoPQ$!Y"40n;_HftlOL^gkWNc[.:nkka]1[([.NPsd%J7a_nc5F/WL`abH&*dp@=OnO;i%&]@=oK`29h@o6CU!
%)UJ>t,T`[/qslSIe+[O'oqJqiFZ_s@&oV3l^+0KSpSl\:GV,Z'79(Feb5QkI+8?h`)<,FV`oi2Z=F1Si<HtW)FD8.B-rF.VXZ%0R
%N>%$M4bl[[f$ga4BE>F8JDmueq[ChIiAn2M.n.o4O>)Lu/uW^/0/\+HFT-&V`p$#j=]6]BRP(1Li.!G8U&HnA[)*^.A>_g6q\/MZ
%2)g=.&!<6g10V3_;P;_h6G2bKntIT9;RIo2AT!>HVm#M+g<iR!Z:`H!d:MN@:?JUTDUj!h1)g[bke3."'WJd,iLF'B[]%6BFm@G,
%lHtjBlj]$=f'/d]-2Vtrb;HU9(D5$eg:Bo4,'$=g"K&h?l"o<B6H\d3c"h>,O$GCjo6J$g6%6usm4^5PlC#=W3C39/i)REIpptpD
%:Uc`-C1J)"dbUYr%c+G0\n*C_qJl)&2l>:J!G8JDceM.?i9LN<YO/)'J]E]j<`G!IQV7Y;h%7:Q7X*a]6FKW6jlp2f9?N)+SV6I>
%?b@X5JDQU/i;'bRHftAKaFKu>ZuGodX)Zjf5M_8tfl]'&B>b8YTEX*7),e/O@#K)UBd<@5K_%U?.*T90[3+SE:3HsZZ$X*7a-?qi
%LDD3(^R/G2=T5!1\us?,e(52%U")]dKdiHR?i^&m?@<1YJCaV-Hn43)o+SlKM[H#2;&($5(M^U:BYG.Gans0=Z+AF!NN3klSdNRW
%/he!g<&Z)9:^@i'=1*4=Vn\e=h7';oWVP:d7h@2.6Clfc"$@+<L\aM<:K6$mWct=e2a,!S%O(q9\>.MR*>+:r_D!1gBJ4M-'m^q<
%n&s/PBO"pSO(7G0ak]=s>6UG\]0jPET*C';;Kk?OKW4YQ#)P@@Dhi;_DI7e/2&+lX_`?G)87TV-*]3,'NrG[MnL8C:U98Y/E`bpb
%M5MrG4N:bl--)kln/1OcpTpY^cF<>`3hpGrq<4oi4X,ao%=^EEV*la>rHi&dJQTUS1EBNs3(+@P4)@0P^-XHjhoG5/);`ToDQg7e
%kk7\VT<!(nQI/U[9C9A_rZpA["sd]#CID]%:&J3&a%m4!`U2m]nS).*T#_aePdY23Ljbc2RGJ8kJ+963EOoKcPX]oV\b@FQ;+fRg
%E[Z<q4b0OV3NCbhpY3erhR*F^TWLleVf_4j?Uf45@OX?a%E;CtSDNOgj/@V496G\tA85KFX$cM03(1q'$`JN(pr*oL7[gUF_8@)]
%j5cP!Vl3G_!l""Q*C3oda#X9UDl$-7pV1o-^@J[O_^/jp=VC_NR#Vtc&h_;W8VR8n]D]6]HKT\LU(V*8O&,PE&KiU\FFT5_NN*R8
%>;&j^(HuJ</OH=uQ%gXiWd41`X7qWZQIC,tH38YHi,ajg*&S5d8I*!7]=ak]VMibZS/^]:,0dG0a^h=6Kjtf?brs"4#:nZOE87:U
%+5e_O7_Frnk*UASaCgWDJh6@QC8r&+/\5miLYFc5?iLgDftS)lXT/#<PS$EG+DuFal?8Ol!8S;dcfs?5oRXI(7@qX0T25)0TDs:n
%q>sT-i-INuJTJ*PdLYT+M7>r*/Hl'rC,9Nk_^$PUU5BJUgt#ge']NYt6@'<Q%n00H4U@]89DGh(b;:VS6Z(H8@NV'HATUE$M7Jr^
%TsptrMI.t;C')SlYBDl21U8R_;*;\o/S)%HC7ge$=RftQ_a$2N78:(ZM>Qft3<7irE3f^D86QL0\<prE*%XAQZj`e[4o."kdc^f5
%EXl:1db45E`3g&P[1&n:fUe)u7/VAab9CRV2nfhQZuim"7'+?*K4A`<<X]lj7V<):@p<0cJ5+oFd8#T3,9PJ"CH$6@q]@%d/VX6>
%;\kM*n07g[3N#,X7(sW1'6eBkqi0\bd6N!f;'S>]a!tam2K1H]?J/a)2(DRp&PNu5SYI82js_V4g_N](,[Z9<Kj@pnhNiVmF9c2)
%g@mp=iAVs#-ipK^HYc)YbGl>Vp*;7M7YDVl7-b--$dlT9$\LSFTkkIE+D.E$%hbuaa(Y1j&sPE<=9[L-,cGV!24jghf!P,O[@9n;
%U#rik#.6N4/\ttW=9;1IF;#;9>l2Ar3#E2Kd9S?ik36A4^!IoeC`>f/E(J'Z'p(8'2pn/1:Z5D/Mk(g7Og#e.4ZNLXThaRdd_7NG
%#Jdh93X(JRG^fbAfp>'`>$&D3_dLRU,hCHc>1LK*7SN"m8J'j_d]Wo3HLqRoe1;LMo@2H'4N*&Ann#bJ[]`'(9T7piT>Y.qXGn\@
%@=ehKM"$I;:!F:U`1bR5q`J6m._@-DF)d@2SR&YYb@M+FA%(U+T+cl<3&JmS^uuc)],"mI"O;29,aqC^U04XN9-r#r!PoPdR&o*-
%'SaP=Z@Nl+JVhW(Z&.++,1.1[)'Hbb=OTosm5EfMn`G7tNE?Kl?Nf19%Y_/#HW>*GAQ[X4Wlnk!M*i+Jq(C5-iN0mC;"U"R64YBW
%&C2iYO`+k[cGu5OX&YPQjh\pH8VZb?m=r0953l=7J6D7.#tu+&M%%Qe,><>o:Oq)S:,M&>fUH4>ETp1>Y:c'oo33CCLV3$<4EM!I
%H2,Ul*7/32"&s\_1AI@DY"qJJgK^B&Tk8FB^RbX[R4=<?.At>'B:=ofil;7@W_&s2QZ/816caJt.jR;6@YdK4O-Lb?JYc">\CKL#
%PkZ@#YCH.^s6DoKqu?<c+90f>q9T*"^]$HIqd2Vc=,-%qGQ$-Cq`"QP5Q9:7oUl0Dhu;0@qfi)6p[A.Uo=t6jJ,BiPp0[jeJ&[iT
%/,mk[`T52$;$t]j-dSP=Ae^X@8q'KKU]-L1>*LR[a6!3E+#<Ln6\Z]+oWj>j;:ohWhgAgIAcqJaO&<o^$niRis2=N)j85;cd"T/(
%4_7--6fQ[L;[oe]0ZN'f-5sG$'aK8.b]Q)7`^*C!*+/S`'5?05nO3pQ@,dmNPA7GF22PuuB5Z>[lRt@JTj-*b9'.4n='^+pJn2>o
%0&Ka)1;)#Rk>+5ie>#qth"-kpL:UP=I<=AMh`m1oNR+4\;J!_9_\+1O%u8QWcAu0fZ4#;Cg4fOCk:[[Os"Y/,g:A5;?4%7WN&9G;
%5^`Q_h&h#Nr>GKX0tI5)J%pKj]V!4bT0Ib"8'E?hT0#!3("pmp,l)ne?Ust4k:`(5]+D6kIOntH.=3utMfh3VcJ@a*0OdB91Vr<k
%[<M,?W>N>?jY!%5;*qQA=[Y/E0t&%S2H5483m?:pk"8NeL+,RrHZ'Yh(N%9+@0inR6P=M!Q$s`-Os+#Cl8j.Tn5mb=oSRa/8h<$f
%Z08pnYM]61^#ekKSnZr2`okYa2NEQ(nt&R*rKsu"7dM+)fdA=ZFN`]+@jf\#ZTOkJ)L`A@K23K$SUQr&)s533gpl3g2nM:sdlI,)
%`k%,ja6@+1E,8;,:4F[JqOVPhN4@WKH>c3p7Qj9=b;kCXr:0Tn$h7eEJ,8MY\Eoe_:Ns;.ojV8mDSAI]ENWV8dcI%S9]C?rfRE73
%%"I[rBdQ];5AWL+)u4b6P9+i3`'U37Bp-!ja*IO00PZZB"e554hh\6mgQsYmfs?@?<VO"*c_3)'6h=F1(T3rhX\W,[HZd*[3V\9c
%UKlrL]"!:Ja7-"q-'CDl^AR>Ye(7^RiI&Dh9A>5LfR+f'QTt?ub-3K/PA%CPcD!Br`b?I_jA%B>^pqaR^3]"H9Qj`[[D2Y!?gr$G
%[Se&+?'rgWo&G1h4s_B.5@qd%RN-&nlni1pAi.;elf\iiH=\bhirKikc9(b85)@d:6!h!MVF">Lj!]#[I>NjQ+K"YWFnmPIfI;u(
%A#*<K&dtFmDCAm<0!sRu:1=i/GOMPCdaMBR0Vk$Ek5M"^`EB8=l?[p+-G'\@LR9=%(,!5.(bX_,,/!3!bOlb]H[KLd?c6=b2<B(S
%ag>Zj+6c2$Of$:%n5uF*40BH/B(Fb$e'Yn389gm7ZjQHK[_WlPRIAM.&n<.J*O2FpmVT>9:#daXf]KYUkqD\O5jXg_pLh'D9,IMo
%i4:2bS:%^.L,S<Z0>o[(^W]Z%r"^D/=+?]lH)5p!#fSoUHf?a1J;PCch,6tagrK9D:_$hs-5+YL&H5!BrQ45>oD3HQP!X_idcpa;
%pLIVho(\p+GG8FBn\"&:O3OZ;cdZifn<_8JQNb.L2mM)rbi8N;pOBXAd4-[2:?7&U^4i/F\!#&Y7-)NFDC;[tiZ]qJM5*>JHI+6O
%2^B$<$]0:J-&!\p2Xh+Mj]\cn"F+maH3MgOT>X,>GXcSjHl:Nq%H;4;H#,V[?-`[X9Md3.UujroKQ0'AQoHLHjogW.7*`kMBPAZK
%QsW#k@9q:;W_;X_kJSak,HF:t+aeQ-hfn'U=1lm_P=D$r(oK$pOY=$!qnr/X\ghiOq/Z=j??4H(\$4K=L_<q(M9'r'-1q,\q+ir^
%cjaRPBFO?jBCleRkrs9cpGSXQN;WI(c&p1?iWT&<RH9cVfX4AL0q?<nPh*%E^Dkq"4o9f)\>bBkeJ7L<hTSH`g1@N,q_h6.&EKi>
%NY-W4(/lCdNHFuf10PG0]<c"QS#I!8UYm#BeT_U63j#Jkr\.d85.3e"'!4`7S%tE3.Y=T]H2H%ZA&Y/?]i<J)Z^LlEBJhW16jrFE
%fX$'A25A"(RaKm9Tsl4[Z^P$3jgl/*B<Y,F"!ekU<4.,IPkFRJ9giGp(pPk1#gr%PnlZ1_lM7(`"Ug<l+pePO.GSF()bGnmjO;12
%gED"Ba;U7:XRSquLL.!O=t=s$52nd$H\P;&79n)t/1TH)991&j[\qdS#Yg:qGB0fX__pGJ-#Rj)XW@\:M"2(Kf<MXMcgs1uRa*X!
%59u:G\VGZ>(tlB]Q0jJnVS+N/DTV^[BXN!1XWndA.C\W`:M12FmW8B0<7*%O?I%;dg"bWgh-I(3S=O-"Du8I1?TnZW>DeLS%5-Im
%$Q2[j,<`,)A_+bMVg>!fYoslFLhOHEO-0/uMhhe>JX?FN,S!8J2pe\:fkB1crh)!hM-LYJZQZ,*ZYYkDNm(,,`UcB#m*1Ktarpbs
%]4F7oN`g#eAM/H0ge<*l]@@j:Z=STpI@8[;OrIAT3-;VQXnP!]Lg<SdBAZ7EV=hKh*K?&A4s']Cj@C,T8BZL0rj&bS5TGY#Hg!/\
%,7/>#DQ8;R#'R.:FrQTmdb5R+c0K].3T.o)0<<E:b?'jE"r@cSP+)Z;-!4+4=?f>tOVoe,hBLOX,g@n$qV+#(.W#]9BQo$G/27\k
%dVp:RqKK;^\1Th\lko_=PDXYhEY!L>$OJ`bdQ]pV6LW.C2%H#ml5;)"X2]t5!6C5L?A<uZ$sCJrYcg*ann;F:A$'gJPsPY%d9S1*
%X<hUE'*c]*nb[G@E7ZRF)NNFbX#c/>L:@R,aahK&jj_`m<nIYGConB5o=H?Z$9ktHHDpfO(S".DRR:-lRC_==BGK2i1nUR'+:;nA
%=Y>:[Z@U]`B,ZB`M-f:4\8Zoo3jc9T/27PTZ5m`SUQ=n3lSWeNLUUhS?6lQdZWoro:i#Xb;K&+UW?E70">+^^UIiQJ4*s'V=\\b!
%oe7nFBNh41]6[QmclnnV?gd+Bk\k>'o/!XM;ncl;)-oF]N$_0h1NdB1X'C,AFprlo/5`1bg#/H=:L:SnfAHBX>PY@3Jfq8DJAR:J
%)6H7!&Q7dO`G(=>gU!&#!Q43NcL`OuA`Ob[H#qAh>4fD&Hs'knM3Brt(k]+kVQ+g##lO("W.c/<<_82]+,5F/AKR.;dq\DY/1`j2
%34k@NGZJZoF)0gWQ+'ckb<.jkg:B*C96#e?1UPLVM$[X8jkQI5[(pSYQ9<YjIhA=;6e\Fqf=("'4B!n%H!tRMi5bCTBHa_nb;FJ?
%0[@c"?1)Y.j1i$ZP&NME^XA;[_#lo3ZCE/]0M5:]5A4%HHWLZn8LD*YMnHXSSGj4&Z%f<U.4_`Cf5&Dj)82;@"RY5KZ_qbG@gjSO
%''N=115.g0:`.Qff"S2Wi(fU/<MBsH*F7faBVi-o#1gmt7celu(F((_4-Ot'=2Qt13/QUKP\9Lf5PDC!\ON`?AROJbW!)%Zq.''P
%S5*;QlBF2O^_s\]e6B#[Yk5h!l)<0/B"$kB<NfPQ5!Is;M5puS@[+R@KV&ZH=dc'u(6X&`A!g-IEr!8hWC6RA^8dI%ak2?C50)QP
%pMHq9qIqGqqe!Si6AJNh+jtVLk#XVMp1k^*U:tEU*jdBggo$X8"Ndk!UH4cdp>ji6``:.6qI/j:PmIqUZfQg&YJXcEMUk'?lK]9$
%k]+6<:<bHmq6;=:Sgumi4a44BjrF/>\ttB*^&(3X4Qn0Y)<T!/1RV"DH6gr9=UiZ5OgNW+L\(@^EWL?>/TN@,O7`4JK>Qi,l=Acg
%^Ii0ps!/-MV3OAG<i$Z]dt1^!DoYE/a)_q$M=)>p:Djd0qi]cak]3]ek85Uhj[.]IK2;V5p='885A69;3F>"bI3S[EpYM/Ke>8c2
%r]H(4J%sH:MWC9T5+h&akKcmr:mur^i_D%^5pKGPh^$ON0*NS$%_KdCBmAe<=%3bI;37`9C&"1f,fKZ'RAV%_9NVAU[6Wh'`6Yc6
%.hh"`32IKrTVmiNY7]WF]35%H=X_DDj18";Yp\W:hgYSACgt=OO3lB!IU7`'pUtqe]AlkE!7dg1pF"o*bpVcE+()J7D%(or3pVZd
%L@oUT:Jk/8M">9nIUXqT/"YHY`lmXPO7MBf]StfF5BB==ld^qs%XGp_`oq0a;#BUG08j=!5&":=IH=`0-fSQ]4W'<+F?LIkl:X0V
%I>1f#15ip*DSG<dEAq0%]&5fdBM__irVan%'E.Fr$h&*dZWpJpT@Z0-_7f,Bl!:K=&Eh:+G1P-_Q,0oum,!`\:Z&IYg30#uPk.$g
%4Ia=;f.e>@Aoj`m>peVFlY5lq`phSP/AI%1=PW"Z^MFgl=b,+Cg)ZeM]k.>]2?(eT]:)iQGZ*HrbOt8pXOu)[rJf-1TRs$-,;K?F
%Y)<)d3ib52>Vioh_tmh)C!Bi+\16\%W4b=5c,F"7)oJ<8bZp;##iuBgeiupubG.*>Wa$;`P0%-0*>#PiUqrp2h.%-L`@GoeQO=A(
%>P<nYeV;YbY!.DE@-tHVG*`*\`HtSJ93a_oTAt3b1u>n=F\Q^bWoh=(CrRLPQf1`b%E):NG)e[BnEi_dM%\Sr+gnG0nhpsK:MCLn
%I"-[nNAT,ih0la3073/m*G;N#%*n^@_fnXLL8=#sDra>;6V3N;]Le88M,KL.AWl=_]pLUV=jCoNo-h<K:Trn4k",d9!.6]>2!V6m
%h7'D/a[fqB#QTF35StqcMa3&WM@S71#DXG%'TPFaEt[FDGueC6C,/GZOC:.]',_\@&Er["m--cN4.aLH/?5fcdUj(#(P.qm+OF^H
%4TqB$+Z0YH8U0=B!9_/XOJG:6aXn7ap.)A`TL0#%K8dVr^CjIPC3+-86_EFXqLE%KFt;9BSX14>'\oB6;,9qh5f"5Jjj!gm7"X_R
%Y7#/s4:sOgW"*WN$TJ6NQk.;lM85LN*-e7CK->2L=).Inqn*fR%+H+&*,E^`$9Y"09l3)>**VrsDHs3IbRr%Kd^oOt[9o6?.+$J=
%Ts!F2=hY8r?mA(Y9XM'\QioW%80Y:^1gI>nAe,oK:t->8UKC2V25UUc)_Lhgat7&JfoY(Pe-uQQ;XQ/k`,Ghfpt^JJ()U&;C)OPN
%9>g-hJ_ZffSa/[MNgM_Z"?t++fqUmpH>G=L)Dc0Q;SqT^QOF`e%S+m5?giBFS"<bAi`4Zq_/*X,Ipss`$ZQT+C\:_Sk,.R-(djHJ
%l^g<QYY21]q@*PqKHuD\1-l7#g%t%RVaF5FP5TjDYIB!Xd"]mL2mO2jCDNW\p_:67c+Kcjn:5^5n4[-72?Gc1I%gf-0FeI8c*WOa
%;Qri&\m*-coNoV*;eD4K4F?p`Z]TBTI2sW"ARu;-bo_*rr-XR%-]kXIP`>JL>-idl3O7o./EjDcgrXk)/87<@"Z*VbI_k)+nL9;i
%<a;t3dG02=dp54$m@bn4`]68*9<0bAbQ(r*%Z)]MBX6Kd)0fgq,D1[*82I"P-b/0_rd^%hen[-1e3;kuS0`Jql`'=tW!O,^`I29(
%&phaR5Zs$SkBDlO+ZO"e_BniB`;mFs9D&_I^aM$nU&BO0K_<@0d.7bE3M'fkYC\!j5F=MV6!'\o@Q>e;O&IDTllcNK,7Q<[D?ZUr
%WF0ZH59mD'jPbi6=ckiXcf+\PPYN7d]$6\aM82-4@ZK^-mI;p@">1V:Zu)pS3Tcom7-'25,D7VkKdV!a;&8AbP\LBGe$]q%S-"UR
%c5i*09-!-&1V4EWM#->E0$,sc&8eKe8L`f$qc\mW8!K`tSo@K(%$$0*U(fcj!d6u/0]=F6SC*ID-Y%]6"F@=m/f(3FUp7nm*%U77
%mDha1Fa1='VG!>c9u:+X/p8X8&)fecMRR359sND-JNSlC_@[WWfFUr[VbqWIR*1qgn3+q.\RPAg!YmC@,*0Nn$D'3YoK>meXkf]G
%!2s,_MRRtnNmfijTl!ZKdif5aE3tHZi,"YYVjs5eLkH+E3;%h"FqZhK.5+5l,M3[<"_?0jW`=cSPFa!3[;;QVC',ti!>-rHk1W-P
%SIs(9,le.'$CF:J0:)YT9<)*8@9*\iAL:f<9RJ%imqEGp2-TJg%?_\;!`&>o7`;8Y;b^<X.:fAP-d,=,-RhRC,SBg"VN+VeE#`.\
%Q/T>XGR._+N\6g#nPm>A4K%<*W>5,o!\b9=2"0[,mGPG^Cm3cePs#.4Pp#&>8kqui#f3&Y8@bQA*m=o17(@mnTGeDu60\]#<6*EQ
%b6jTN'"JIfE>nHC.>\<31%,GNIBN'BS3nl\L'.uX*(>jJ^$6ck`?d[ZhC*^<H;_5.1VY0fAWDci#gf</`:FR'NOVq$'m0W)?TfDW
%U5Epj9Ysb"YD[23pUO7DVQlaaPqe'[ckY^tD(<(+-./C)N?['/&FZ@60'/TH9<fijT;9mt7_n5&<h:oX06&GJ_Hc4Dd"Xh;5[T&P
%1&QU9JBo:D0-/ATKp\p25]fOH98S,81`BF2P)hUC/2uQl3B=S_kuEen&n(N95kbsVE5"0K#Z_#(<!9pmb`JJXF^8,`W\9!<*@<Qh
%>q%#8IiOa$.iuNhTBZLpa`aR=bli+jSg4+!CH;]h+;F_!V_F6BHO^d+pu?FKA`,=i;"WGMc3nBr>]N>0L?hE:+tgUq3b2ElE^17D
%W8Nd9d?U`@*`_3PTP%=5\Yik((iWq^S6HfHEj>P6<#4Vb33KFk)X89Xjlk#YfC`Y_JR4L9f7/Pq$=UeOSk,AJ5Z:3W!PQk?F]+Tl
%Hn#kH\bqu`;(*Uin_KFjI&tMr"M,?tXC!B`iLtd^gfB9]mm[J2/eBm^+`?LZjp].ld[cCcA_XH9YqCHnp^Hc,5Uo0ii]C8Zf+aR<
%lcr'h0'SRQI&8':\1b6[S^b5<4Xjq\"MQQ)7kYbbiK`i-WLl^O=5JV;gI>(kLq])kH,AYg*KI!mYc&[\6)l8cpJE2;!RJg8jbBnT
%k?I$g'4(8C/N]Yjkk(ir'j=HIXuo;L,QqR"9Eb3h1(NrrKbo/CC'@a+&.)N1@rPtq=:%H,n<bBq&<-)LKEEkC?qSCAi";SSkPA-[
%Aj]*,YoEr4!,Z3GRaRj.,-FK.5Hq/j'2+0X2[YL#.[AM2>n@=4'mqHllGqkF3MLF0&]CGrj,T6)TYcbbW>$^bBG+6oCCGb5#i'W7
%#[XIMQ"\U&kj7%]K+T0E!iK4$3+JqUX%p@[.OE!^R=.?s26FEg?j<U=\Cdt10!Yfi\LOD\XH`"(EW]R<:i4WGZ[8XQ'#q5PI:?oP
%<@79idK,UFLR]BIUPlcS('_;gI&[`G^f4f?)D/*MUm5pgk0dfs&8l%8PUi;M*$\-BXuR"!Tu'W`h$1I-+XBei7=%h0E+,Tu!-^r2
%$Bf(V;O&#ODN2I?ATO!c+p/KcJ=Ze=RQL<Gh`2auKOrFTB%N1Di[&1FZ/3Q,L5?/Z<G$f5"T^Q*,&&$:OZH0pj`&C&k+(P_fU$'b
%P_YON`[M!W.#M1mL;8pDd8HjpoBbbT/3nG$eWQX%L9@p"Bd+CirgN"S-Vr"2AK^,#j5$c^/i<9T7lkW87$FIn!3=*NC8+;i8R*CY
%bO*E?rLbHWWAKG>j@?aDl.N]&pFH_-D]ViZ)2d24Xe%ciF9"W9QmaA&)X=_\JGIR+6O8M!B?%^p'Tg:+?[.?X+E^qWSAX@jL[rfU
%IHh(ldUsk`oLad/,aK&#Es)N-7"esj<e3N[X2VBPXrQ_pZB_#GXTV`S8ca4t&Wk1hGpY)6i/+BO;<lPp"t*GKNM;51#Q2di4Tnh'
%3TRm'jJDE<$5g\6AQ^5<U;7n(<f:.<7B.4m9_HE3"1IS7W@P1q(=nD+q2>;/^:N*(bb>L-4Oq-aMYd4u(pbR[ZI<@p.BbnFbbaeR
%AB+:"/$c`b6=/[4l>]18\oGZ'Ya=QWlb6X+&<`BW/rPrX8LZn.Xl*&;80XHHk9j#Ip"&]RAQZ!':bphSM,dJ?kj+F0=ofeEGoD?:
%@fdQ?.F`adkL*uKG2l\<*lkNl2:ip*KT]=c?/NM2W8BVGD>%!K(Umr>hQ>Mq$)B\G3p0floF9ST`9omSbYQ3fJ@4'Eh>IW%,BFT?
%@1E>!b_W)PGo0C%;Fk5f1(YN_#t"u=]ZY97U\^6!Q]Fk6*4;r]R9HGp;=bt?OKf+7S.M2#\>F?Vp-k.+*I;/p+Ab4/1FTg7'8?Xk
%gAt?cN]8&8!eNHPq:(ek<Y[<^,_*gq8sE"4Y0S,_1BWIDn2On,#MtSNSp0;A%RR:K.a2"N-)%o,<1H+&W*Rg).102YdGDaJ(`cQT
%21Yh;W@6s?(Yj3+V%T0dm]eZY5X"U-llD1"^r:'ioOP\R+JVJlE0\ICMFi`A&#J`(O[h)e'4!,fQAH^h$ZG]+:CPg;D^FlZi>I:[
%g5<KKNHeuX#XYXL65;qp;#&rL&91Ls4mn*ZAt3Tfh"UI^RW*!Y"a%-f*CEGge8PGfnZ/T6ZDAIb&5*IN5E\s1ZHa'2^,qPeaC?5J
%L)a36kpK'<,t,Y(=W+#cOM4PWesE$CaOkkP)^,,@ian0qMnsCGFZ(R:k<jZsGZ&0[b0\$Pa9?N+7i<<](i:1qr<>\JlR%tH\"`"O
%2W2O8Ju>P"&^ZN5Aof/aQ:X]r(qAcfe.E*uY&l-^iB:#/;lOjW7u8Nin^'TP,t^G1G&g>?/X/\D+P%_qe:OB'8pY/Z9%H2Q?rBe#
%JObj$4(@]:4M;;&b)M,TOA#ZX'PfOYe'P>'#,KG>.6K8B_;'6r"HEq5(n&R,?.r"LZmH,HBdiN`A3sr#Hpii3!JTio>5s0?U952'
%:J<KeXPr=s>i['Di!):ud/sCdBjLi1h&:p1q[I4C&J3,5+pOC7Q:(5n:eZ6biZAM^P/\5MX2[ssi6nTidifp%='Bcm=U5]G0q.(@
%=[@,'(MHI1UX]e)BJgA$Y1p87+6]I,5WoG2Ce#mca``\0f13i:VFWDFNPRK83';`VikOEF^jF[72\fg.[5njqNG/I:j$mG)d3;g@
%FJWoc[/4-"4stZW2Y[?i>V59\WPK.!U9D[K)e?d*4h9lFhPX2_;`)3F83B8\-k0:-MLA8K)>[gtL_OZ4gA6g859`d'p>l9(UI;Lh
%2n$7^>ObtDRDe/0"+Y1RI=XuO5o<_,K?u4`-Ak9]>6!V;bWruDJlliSk.MM>SaVE+,1T;4OGX38*r!Gk_'2h/%-6[-aO1d=1*Em#
%B"+ud6ps^S94o&^%@G^O\^&R(KD0n.c+-Eq52_JoVWg>!,Ik_^qucq3YP04TC2rN,"BIGY#^eQ=%mcE^3Ft,s>ZSXW4Lt=:CAiG!
%5:cRoWQ%reGL]egkGFR"D10TU%c#`1gd;#Bcd*3BZlggi;[GC-^?10/1:XK!DoqEB"khFSmJ:72l4n7Gce"n;J0GVMbp=`7q8(*O
%dKIutCa^"tW.;/Gp5_KrLEc@@h*c(%FR$\\8/i>`W!?'^IOpAMlO.V]_J(n_<)4.U<P\GE4FIk*#BR#:1(]WjU8EXee"Ilq*oiWu
%3KT+C?p\73%&mTqpC;bRQ6-KB)ApD47L<jR@`j6gN<)0C_+R!C8eGXD-&'`f72c2,$]RFqV8K1AodO[dTLI"=EN3!d=Sum[$:u)M
%*@g_f;AeG]aI]usaTfn+KXbpNb4E6;_QZc3-.2H%5KM6LL`K)Oc#]S@`3/7?O:d]['hBJQ,NT6/^5tO/]JdFY_N;^<(`j2cQRBkS
%H5oj(&=T8Xf+LVZStbWlC*S5F)SQ9ARi%[(OuOU-WX3uY@PF[2H_b-!-H6*.#k[(pdM_Nfn9+g@kR=/!m%fY;n;(TXn;Y>`_@S2C
%JPR?gkm8:6/&$OiR!(1!70eF>l&2Q;M>)#WQ+H'tb>_ue!hs!ph>&ZpHjL'31^9mFbB/CmoH$pNDdQh-R#76WiSaIF322:gG`9]c
%&_ARQ&jH!`$I0K=;I5MLb\E&<L,#$jQO(_ALm9@IS!Ni4BM?Fg"%bp%;@qe8PKXk0Pcj2l;,.N$nZHm\-TUpU3\$_3)+%b)+-pkQ
%Y%u@M+m>i,:GeqF>m5n_;A!iTM#G/!W*rH%iKL*/;^fYp%GGQ*`8jV.S"$l*ToC3o/fe/gia*Ki_QI%KeOZ^#_%[^N]uE\MTgHID
%Hd)p-"tYePH]@f(bbZP/Y=5bl`%Gc-q2q'K0mMDfI)$aNPcja!SY?BbC7t<i2ZLZMTiD<T3'1I0..dh%<q>T\Unf1H;u4DK<6Lhq
%3/,d@LJGcBgm=-O:^Gt'_F)\=S>[ja<5<?5Vco0S=u=s*!-o%cYYDoa:ukUuJ9t;^&\tZsaM5rt+^jY#?7J.ZkgPWEJYLj9Jg$M'
%^)4LhJ[$^JfT#Bj`opfgXN=B[a5sOL"U>\u#jWYTngW9(!(cN)Tr[Xd(kOAlOJe#^1&A^*?_jp2b<@]l"d!23(gjS#Q3f>CW!P^H
%Ygf$u882%IOAc'eER>rQD2>Sj!n"&H'N2djUaoZMjJ5A%6(fea=R-U?'`^u(@21C?jKCa`kThke*^!O3*ck4VIcSBMp(\HSXkic6
%+.>[blSheN0X6DB#8D=NaGTCQ;@]4;(fP`""]WBZl2HS`VieD)##MK+0<-GNIO;'.bZV+ZQcDP]d5n6r!uN.JE2rS>5NSg/&2MJ7
%UI"s.)3j29k&NR7A6Pn;&$4>ERmAcq:uFW3ln742aU!hM&rHa_mhm%G-R'"1DGTb*;]I8t6PG8"6,L)jjeGinYgQmo4O?gaSl%"g
%=`0AX#mNr?%1e:f=9^,lF]A@gQFR,9.0u@C4!K@Uq@U^ReUZ<h1E=+`.O5QKi+mB7]KcN,*`6"c1C?K)nGDRu\O)lfnGK)tZ*kd-
%H@Sfa0OK'Z@%c]@L5\L2eCYA[UM@o\(33p&!CGOV(hn7K`b6ON]oWZX=;'RQLGgVm:hO.r8/O@oALS!M#p\5O*,ECs68gNPO^i_N
%d;'7N%NJpq#sWfm@:EA]@n[_k=/(<41n"^E>[5T/jo>bl3[m[ZQsLie6O][R,j\s"I>7t/i*8R$lP>"Q!<EAF\O&?_!D';k!94nb
%Dg5BJ,6WfC'P%67P$'aKd2IEi!2r<6ZrP7GeIW3AriG5f/D<MsS:I.>;DJeFMR:Za8R:kp%3mIX5lj(QW>W%k#OH1bB6`\T=RTA[
%CT**J,A'aV6=P%]Hpui.jQtQH`Nq^f&h%dgUohjV9+\As70l4/Rg9+XCQNH[Z)LleD]!A^n@;*cM+TkS^g;0C7#[*&Qk_p2O-WSh
%l3VC#MCTWI1iO4eRAmJR"Y:8]/;G;D?BEA2G&n14EKEq$D.j3j`;mk)aHc,qU@JL;RqL\6MW$,iOjIM\@jWZ*##L0h=[tl'?D]h4
%+!kYIUqYf.,cm48C`#S`*bWjL[@j>2$(]HHl7$[F9Q5W4;99qkM--qqD&`i2XHNKs6O;d^knITn&sQl>n5U[_6qoRsnS&U[?4tM!
%"#t<hS<OGn[.NGQ&!V&Rg3uj"%;jBU7eGP%'_7F[&`N)G$8ctTPjT-/(FUoS@Dr:j790Xt,1M'<V"TVq-h<uF6,$;%#7ZbJ<a^A)
%Q3Tn%Kr8X@6;kUP!rMV,bDekj>a'T?&E4-=Z31<GJ?CV922NipL`]OJ1Lu+jqa\J<+Is$fR1+m7qqrZW6\sCp=$KiC*\oI['iV]@
%I.X4G"s<I.!YbXRpG1Y3GT6-pmI@4i^gm(UJo[*o0GOfDM.IG4`69['A+DopA(O.$1j8Ps!t5[^IkV(M9o"Ul1#ANWed%H\jD,&W
%Fu5gV?l[SMSqch2M(-LWL*Y:TU4hIk3(uTg=J4^e5L9/`J43OC893R\OFc7KiC[$i(Pdp5(p:H4@aELu'Ie'N-u>&d)Bn5F@=&S8
%DW&H$dR=]df.i@2OO46igF=EJY_S\kYl'cZdRPdV2_`hQm#F92f]i5DJ45J9Sn\s"_SEr'4@Z3BL)TWP]ISFX+?69@"6)*AqN&Hu
%"cf#I1!C/*+SRmW$]2aafmtnoP%p&'`CO5pDjIJZcQC4B!h]B-8^_&qL4HUZY?4Qscr+VNdXC%".(]VB(-Pn=_RXYon=8WtZa^sK
%(^fF?(6i`tR,3KmKolUW9JVQ^!+(Nb1>771_%Thfo""hs.1M]\0fr$+`@@4R/rmSuV)YPY,$M[Zl)RQN!2&#WG?1]RJkLXJH_pRS
%`:f2-F+D%l6q02G@"0eakFW7lpdK\/!M^F2[UoeHFefL(.]qXRA`P.[m)@]>Oc'4#;-d^Mb(aZ%NY0O!im[.R(pDntp5VQp#n?Vk
%H.Q#iA8:$8Vr1K?nQkB\g]W%OhpSt,gc3F,IXqPl!#'G(BenZRR!@iAV-lAX[BUJ;.$GMVJsq,C63%Nb:^'Q4lm?"P0CXW'I9eR.
%HSIP#,pYWf\3b*e<`e$GIE+"XI5V/b'/A9G)@m#]A&!9X\eXhb$nM_L-:?N?8o,m'Kh!%7B'")Vf>n9N152S01Bj-'lrCpl5l4i`
%_u[FarTYPW<eW7g@-$moKWJ6@:rRB89@pEr-BU-\p]%B5%HGfF4@,cEboA#`j<]+e(>PT;\?9X$1##"20g4XX3&P3n7PT^AO5VVn
%OS.4O@5GqAgiQg^68@Yq6o_^%0XX._78Br"Tr0g`R(qI1d@f6YJ[=4VoujsVmDeXA>#i'?9m\:KDI2ijSGesu)\=&br)1&A/13ST
%%2ab#U(g'=(c3Lq-E+0QeiorY!!Q.B4a`J[EVO9PSl8ljBF]Kf"ZR/umkM]a0h<kdXB/JqS.8Z0d<iun@ZI*S5sSm=R(Yi[HUDSU
%L.;PqKdW,3>/TAk:,I^/CH*3AOe@Q.&/:co$]p(KHVmBVhqe4CT\?C`B48MB$?_e7.s&NH-^umuLjS/JYek9$VgqFKFiDGM7'jLi
%MStWo*SMH=_<`SW-]:c]g("UMNTLtmVSH3Tjrq;*(g[g'1BFeP+:LXEM)coOT%O+Hkq)3hHOA?W&*Xuad*8tBDCfT8Fa/fl"St`3
%1)r:7.AOeR@?7(JOcsAM+G%5,%%_G*<lBVf(YoEZaSK'Ul0Nd!dRm:*E6l6biJMe(h@LcpG4eF;=8@C1\1@K8A8lW>KV^Qq!58,;
%+7BOWeX_ef_1dp9d?YSUAGj%CSi\gGDH\\*?n`,!0Tg@(5^:+T!%[4X71$.;DW;VRZ,7JY.B],RX2\=(\$+J\96d.>a:XkA0N.-\
%$V)NOl7,$\6WI+;X+kCP]+t*d'R=_LT]r5A#'k!+9Xk;%,9k'Rm`KZ@QD,k=T\1p;Soo()45D%qQ.SuV_X;[R:>un?5N<,W6jg+%
%U0#!I4L!b82B6D;'Jnm/Q[#8'jq)5%\juS9NXf!qcl-;8$j+``=O:ZW<hP(o%^nQAa_ACQ,)0`%jCnih$cqU1N^S+LKp6i#65sp\
%grpTPQm5J*Z'i"Rec<$d0Q:gC#-Bbj!Z_b&@G)/gKZ]H+Nq@\-_#o];StBP?["+S'=`?/5$a#i)222Nr^qLXRI]fq'-35'f!G9A[
%i7<Df>&.jV3YY/]2tKUaGkNK94kcC\!bO@$2*A4eXl5[BD@Op.nglr+`eO%"g/pH&B?+E<epmp@AnhK1*1#EOe%\Ddr&n5!*@\`t
%600\>P8rkNLk;j^)a%-iEkBD6PNV-A9]2W@jTcViP19=PgAas+#SF3N^6g*ErVt#>bm_CbC@m:\)GDFJTq3^9R\A][0'=]?nD,W8
%h(+XV,T)N=$?"lajji6>k2XT_GQf=o4F1KAgH.M?ck,^j3T^QQf-=dD-r+(;)B;7XBSBpeoJWGXK6A(Ab[Mn0\scOSa>H*P3C?%K
%HJ70o'(\QaR,b=r3as1h5,0/*^BjssZ:,n_jm_pSA,GbTM6e19$tu;"`;"S_K(!Ih@1&&!&sj=YA;!BZ?lW&H0H-Y3(51[S"-7?&
%7u[UC?3igC<au>C?]5#?M,.`7Vc-LgJ\9V>&>i7[$1K_9TO&">_9I`5<FX%Ta)m.5mE)+A(utn:NZLBN)oa6W%+s`5(KfA3-+Ln8
%Jdjq5F-m$K&i\uorX8oj3m^^>.HhH(m'[T&*(^5C5G:_g&if]S?\;aV63d4C*eY0SOGW9#:^-iQr2P<^)Nj+MF<i.NE8B0M/W.Ao
%<#1\W:%1T/G@[A[QXXp6G4Z`V,OR\`2A_QiMIa/ka0Ls#C;C!:M-]U)B1/+XqmO:])fOV)qm_5b,.e:V'mZ;QL4s:L6M:CdV$Ii]
%Zu,p/`S;3JCE^fB,)cf9]#/;7DRtrt`FA@g1M4[nilP4<f&?OFU*CS$[t%t(%0)*;H3[%a"JV0$p/lVCKP)07$rB5RjG-DV@E&k1
%d?]WFmZce;"0Pi\q8NR"#_OiYk*_p,#;q6@U&dEk6EZ>Ng[/5q`J?VY2^Qe1pQJB:MSGuB4'MdB"$2o:+4&tQ'#9_2DtZOh<W=YD
%R1bb"(*<;H%%rDB<:F15g^QTmo#%Zb.7It1"*UL:kBBUI[RN.X"d*J)555GGpJaDl>]c^g^u^c7M63.S!F,>LP2a%\Cb\NV2:YcA
%%)jV"%Ud<#7RXL8TOU`U^sugFNC6GB*)RR`:-RaJj(h0[d#e@GH9oL#D`NOa^XBaV\JM7jH2P1.WPGL<mrRbFKQA+ddaVj"MFj^Z
%2(G>I*a)o70>=pA3pYVIl&iQN^VB^4XM^/`$gX([*c0u%-\LeKBn7Y,K6odMMnJ*HY$#iR@taqmMA069?`[21kR"li!7ssc??GR)
%!:G9V0B#6,O!B7s%_h?4GscWHL[N6q%dlaI`5(<a9+*/J2$>!FRj1,^#s7K'?CppH"!`l>>6=:8Tne%Kla.fsN;__OC<T8-i.atQ
%2'=Z:@$%[\S>UoAM,tT^jYd,K<B#m^!NOWIQYr<!]9;--R&VE?IckF[)e&U]gB5CjPOC;H$Vl6ZX<OB!5Ula@-O__?S,!;Xi=G%7
%#cmH:\0^K`AjQu1n-Om]6\`)hK?p-P%`qiVN6*.h9Z]qid:+po]"f3.'aG_a0Vj,N?o[q?'DbZ^LMo"qbQe(k:C"5+]971_To_[)
%d/eSV'#QH\@$lfYh.Sq?PrP"N<ucg9YAhJ]fI2b1#j>iUpR%GU+Q?$c*L'`j<9,+H&%'fF'8\q+8+j^/:LhCpDeIdTKHK*f)9DJ>
%QALchq#PfoaVi%i#su4;2je0si+r_Ni<2-L6YG(l'[QS(lrG,HB$D/uE[#-LM24763b^&4B$B6=`7"69hB47-F_g0*(kQ5eoSU7D
%HFc'e@nIq$+#XbCA\jKeY&f%?ThKEbEni;D(AmGXN7idGoMW=KLtYn0!KaM+Nsop;,SDP^0u3Tt59_=97iisLZGc$)i+teI+APX]
%J*Fu6N!<pM`O=.R<!.7:VW.BJp&_#.i"5;N(,H3bk\=K60tPY!/f2C$9Fg-tV19s8CCI3.7P4=$jMS,`(*gkC^.[ZTJYSPN=anL[
%FpQsq\1PaD-j!%p$S3GmD.-+Em94Pkaap8*":!FPJR5$AaVVl.('5us4']tD.&G;\jhRSjb#F7Qj0S(Y/"F]:JSaLGA8oNg8dUL/
%<uZmbIDF;r''4]_1cYE0f'-24KLHdGEpiN,/a=<N/08)gPORfGiB)Ac1D:.DSQQRFhT2H6KKYV+kmVlc"sXHU`mYkn737OS60pFg
%T..8kqRhB=gOVDMX>PZfp.p:c8ONX1Pc\)]U!T>>I\DV/EV]7bb"3S9+))e^lRPfZ#=BA#=nF82'l+j@EB\@*a`1+9&H*`>&u<2C
%$]_UBi'W@1Ql!m+9N3,@BSe2/1at<>9m,Znc`bm;cr9=@N9lFI'`2os@R%X2qQ<l56HtNq*K(uW<'QJ@5$q8:Q^k(naM%]6IYf9B
%&!rh*6K#8hX!W*=:p:9$'O./Y+:1FB9*jPJ$&Uh?C;>NBBa$Z/)%J/T8[g<%]U@Q"YIWGUa_U="*$@`qQZdQV(J/Xk"oc_Ps1U.k
%#Uhnc3bn2P(Hc07W@NQIH>a?:"+*gFXtV6=pU;h&$&@H#1lH6k"\0/3_q?0*<\9PhG_lQEKF,=5rt[BmGpD:rZZb]'TGGV=&rN-3
%+oWn_L7pM55Xn9"(fJRt>B#<06]gA,JAcTk%grFNCc$#Lcp#Mp%`D-hAGo"WAlDGA80B^!O@dPt_@icD23si1$\P9@3:f_Y"N@=3
%h\E2m>n#5fTe$CeRaL(kZRXSuq=)NY"n&=\a6Zf**P)[mD(P6$TW]kb9(E&+Q0#RYH3hL_^_)>s]-7^&,jQj%,)?Yl4`\C6`!ckR
%/g"d5nchpSLZ6F!!%62sQmit-HqnPM>ARHALK=a0I-cV!ThO+'F79&CRo>2AlJSlrq3(ks]E8WP$KuE=g*juJ^r<W:5VFPrhnn0U
%)Dd/E5ZjAr(Ck!G6?)uE8$4"W)CBc187[F.o4_2kMGs=VZ*`LJiIZ1Pm]@?(*s8d1!3[Wj*4Up=3nX]k7a*^s(*W3G[FePIY&\!)
%5[S;7RpKjcM86tA>d+L/YdJ&n-P%DEXnK`:8pSUrCk0[/Ss"c)pcA2\M#"MBbHIX;.#"Y#Fk2m8T0=s,5qntgnO_rMk;_a$e2X1)
%BsbPWZHYXroY`((<`^+q/HkibVFG@n7>1aa:ZHa+,fDf%@!`7@d&ZIEmR8%;P`jW8"!aFbZo/YT>1B<N1!)rrb8C+mT#>kqh)Gn_
%AR8@8,*`R6K)fa^&GYM3l9ZA!T=%0p*"pM3XA32cOY<C\/mH1kZHE+],TOFQAjo5>?qRna(GH9>;T1(G,18d++``9i`)XbFQOJL6
%m@YFqcmg(+?hO:4MDL#MB_u?ae<cc1;^TBVfp9jUO)3*ob-[c(c!mb&@'8>#+S1eaJh_(&"Z<r$\>"1=*%2@8PE]N!S69neLJlP&
%\7/TBO!N73NZ.?;^U0+^3u`%YAA]%9Z^clbW^j9COBN'-+f>a$c6;L,l\aEC(.&:o_f9ug9PFSr:bNfKX2#D<>:(C[Y,FNnq^>:_
%&CjK4;8k3rhb8iN#oumVJ&B?9iB0h48^5>#A!knH"=V)+bRnMs$*S3o[FguK\)r%U5p/Q'*`BR)FcMf>E`Ne<ZN2F^_^uLVeqr@p
%oJ!*e("tJ_qk6PcSp&TcA\rS8RM#EJ'^,I"4-F5=RmN0WBYls;$8@.$I1sS?.oB2;34C+-J5sT(1H2==3d)=_Fca9g:*e2Q@n6%@
%OH'Y!-+Op^lk#ga&Y.>p10HsfYSiX-!>)Zc'b&Y+6NWlGNX&-%aobQPG`pO6UH-+!MF6)?El=/H)>I7,@o>jWZD/:c8&B&WMa$gQ
%b/3-^3"NV^/.YESA:7$C_IeVuMD:JUNc`,o[#n7^<()F4oEua@%"RhQgDiNlaAJ[q;AN>tUD`$DTQ!0YjSrB\s&P&MI8\+MO;Jc)
%5O8>VIf3Va4f#@ucl=Q(WqbYs,.'!VDt%_h)%_5c3C'&jjRIe)Q<HSPg*@6]&;qtfeNq8*fqc$g*O$3WX-6Y@^,R`q,I`g?V(kB#
%3:_[G<^6r!NDiSP?l:Q37)TTk!F:te'==Qj;Vq3+Po_gLikHX."s]W\b(u)E%FPcXB[].J7R1oKMH^uEX@,Xa2+Wq42$DurUYdke
%]I=WU:m1/G0MKD;8O57J#r]<t+A4^AS#3)5:0jI4_b"7+((`jK[MIcM$q"C#J?r:dr!K9f:RIk>)Y0JU]50m7%b.F#DnJhLB$q=r
%o]EW7%`K-@"K!'-j#iD+,\diu11fjb9'Jsa4N%nf^j&X]lU9Q`X2lG6`5K+;YpJ=+<$?S;Yi$VP;\82PS4T`jPf)R\s&o0tl765Z
%(&qq:rsLK/Es\jSe^CF*=HWhd<i@MPT^t:Z\G>t6K3AGCD%fIXZ=1tF50+K]BMUDQ^S6+HnFXQ:$'<FqabbX!!jtV=V.W9e\-dNI
%769+U6P"CpP!K-<?p>4E[lD3M$0o8Y4Xt`rInPq5rd;XR+^efmkQ8iT(:_=g()d\1KBW?Qd02/SMlMBlU(N:XG>2L\/"K*7<^]I]
%6rn*EIfb'eYoG?Ve^QugMDIGgZ*#V_n?+1%"K*Aj!CMG^neKH#!B[uL6H6W.4(f=UeW3KT\i[_=oQX!qEVc2u!/hM(2an&hVCV^.
%/me9K#1)3V-8*(R)%MT+h)>s`ie08#`01>nRT=CZ,+'^\NO<`7pd#K%WA"B&ODBXUH&=^CaFiGFOPO%0W9KS/$AN`q_AJ&*(@gE5
%+ghIJs6?L@;u7uN_T3m!RMQ[r76D<L*O[7Ml/8Wp$-A=?'LcV,6L#:@#%dL7U=1H%^mTT!es7l\3fJ$&1asSbAkPI&#CXOmXd9>B
%[c%BP7Df!0:0.^q)NW?9Tp.1G0QpO<H4(]Q)WY!KM5r7]CHT3DprDE:Z-R,_F5o)r."N&aq*1h7'UT\/iFtofloJuL&B9$d3fQJ2
%hdIHS$/%g*+.;9V$=P+._sHOD<Y)$O`]TAq$090sTQO#5Sm_do/5N[XdnM/$#gMuL:pX$W7#!%\8"nOCKYq`<_VAE;>S!?i>ShDh
%g>8QLGQuKDb_[kRi(`N6`c:7:jKqa;6WjK:jesTeVaHlos'q\Hb.Sk[>hq"YW73QW+f2eB?-8Ye2=2]N4Qp81$8f%iL9cM8.V!$#
%)dnU\(AhtZNj[(/f\AflE:\UN^tq_I5:Zu:%#9pf2XmjH=h4&Zg@\F7.&A-'elp+a.4\)nN+;tOA^)lB`*!M,79:<Yk]\PgrH%3o
%_EUq1"qo(C7J[pI2PRZ1!k>8Sbhk*p3\KAFdj`r`9!R()mL_EB><ue"J`2j2F0s0I=XM<"-5Zhl(mAFJmLlj(lQNQ'R0:)23:(N6
%'EKY!*M;BZ,&s_\!ifSDnVFH[Ugbf/Ej3^e`G6iY`$5ih74<mM8.n:uXTVNJE2AAPC6di67*#[kMmM'_$,"X"Q*47?F`X;9PkYPo
%V6s\70rU?21(VZ=g!s4M^phOQAA=4Zn>$=[?[6+..632L1!Y;U0`afg`WFp,/fB$,\qufTd)J+68-2PHg6<I:iqAp2<7u(hO,Xc3
%-g6(Z5\u^EaA$QiRQ$"/6(d'rDWD$08XHXE5,ltjDSKD,VoTcNfXgHa%Ct'<OL&[)\dX`'.nt_=b@)M//R[r'[XkmRAI-Ei4dW&q
%]qB4QLPk25GjE?Zq_(6+I?=4*_u`Vs<5U7-9ZiP3GRdqR'@'F3`Kf*9'_O2[%d5s1Kg9tEne'ZH)ffk+qgj!%N'5#ZHD!kc#*/j`
%&Mlr0_UDeTE4&8[b=gD!15'/b:3c*]&7M)h>,JP8JaKN>8?1SblLh!Dn-Eg!1PUFT1bd)hgOS=GI:0=S.3E?4@lp1c%hI<Ih!e(5
%lbuJ+:5he:dWdM,"G3=7!X]G\<PqP[r"p&@a[?r2YZ`@f7^+%;SC!&M":Vi@C8cd_&m#_oL2]daHcgl8+p6oqNhhi?E7dS<Gqnie
%.6<Q8*4K_0fJ8F'VsD:M9+b$,RglnZaghQ4IR%3^O=r#DK!40R#qT&ZO&_5Z14?#sOMg#BI!+?b:I>D0n^3G7W>hR@a]_"PnjM*`
%iWO7+C7TnE6HkoM2AfmOH^*U4!)@_^BuE3%cZ1uk^V1Tm6gAVc$A=nC;+t7d[`AUp+U)I%U0JQ!*GHEr>6eq-V.#CGM05t_?p"fq
%Oq"FS&d#"&.ciC]+9NmRf1$`U8,?FhE%-](+f-1&(<=7eR"6n_Tj8ZW+7Kjpo7`WPTp06N4!E&dHD#!U6?5S_-;WP#9":i?<CeX/
%L5ElA)$<,'+Pc#4mFHM&F!OYogHgZNk8IS@@OXAa:'sf!0++L!S?)C9(R#c%:q493"\4eB(0llaJs'FcFJLXFhqPaLe"N5W>H>A4
%C8OAW2HTHt8Pk^a8:s>+WEdeHD2b!`"O?&(=P,IWC`ZKl@Gu#&igL`OEa^D(?V?c0'8&2A?^HrVopf9X+D[jnhGVH=T\ud_H^P<P
%(j*_Sff.:+'(lm_q2T3ZGbS<"*F2k%!23JM(<^3<Nqo[Ub6[or".A4H`=f8>_[oDYX!BPOiuf]pjag.u8^isWTlQb8@0ZT>7J">]
%O96=t5S0?k32Zsk)5Rle3!Ps,0Wj"L@#uL%8@D7)!=lG/[rC?MRk'D(R_a%:7:ODg62_&?Ze@0qVr1(-!VJT#6@2+?ATY!#Q&d.t
%YsVla\u!,Y7HBF#IY=5b'W?qY(p,&gbZskgZ'cQ`,-XZm^nn7pA3d!uB7WtVa/,/./MqG#+CNcJ,K)e'Q2niB@>311V+GY8,.M=1
%KU.l>4H+A7A,U?nHX@.VC]qXR7AQiS5GMc.6Q%0p+i?T;FZ("+FmJVo8^fp90\'+Ze9*R_5`=7tQP+20cB&'09$!,<%J=mrdS!0U
%C%]hU?B9Y]D]4`qKuZi[9P?["j4knh\sYD[<`e4IJs@p_<'UVZa@gS>\;5NJ$o57ZY8\lmPi_uR*5s0j(8Ubc@ZkQS!I/acC^6bm
%%R],UV`D#A^j4a'Tqa:hn9P?bk,&tJ^/;fkBfN36SrST6>5ApOY0S6.iCXnmkY'VE)johlY]3?Dn(_%'Q,#p$X9o&2LEMU0"&AL<
%X>-p`F=>q/Hj`fi8>pb8E7:'>lp.nD,j+k-bdhI`&9)aCB,M^9=TZS](rh,n)&NA@0pFRK79_X(==8!F:$PGDPif<r)^HuZ-X-;e
%O.i@h.GCdVE9TH;lUqYE2=fd\cKH-b6mA'BK-[_*"j&MM,tL:Jn46(\bn<*a(1HI!e8T9:bI+8F6KHnB*$Q>8T9iYiNpIE,dX,BI
%MZLE_f_"]%Yu<@O)QdY4Tk=b3cr)Yl3<cC1^ua(8o2=Wg7346:j'he^N/+r1*nhm!0<pn1WrcUqU+pSBI9Md$4Y+JI3pm]X!m[J\
%g:?91@*r]E0pY)>$FiqO=EqD\ZU-Y:$EfCm[S4f2h!2lKkZDXLAF64b-n%-p!qrZBeU>h=`=E9KA@kCCMPkoJLa+rmY2-gJ?ZusU
%Cf?NP34>Q&\MPR2R>>ur2rln'W30p)8T%SEUUu'G4o>Y!G;LIdOA[;3Uis!dPRge"WO?1>O/G$1]PA1nLu/?GRoK=eV5,ib]])<b
%CM!fcFLWGQQdXH(WdBt_(\-go_8.jgSB6nM2Kg<>^lU<l&1SJ)Miq4(2/DBD[8%#=_dd$=*8JGXcTDB_C0qg=)6.JS*L8]Hd:\TI
%-"_A8L?E`i@`scaP@8Z@^b>._<>BfC/dksa"E0h;3-MfRQn"_jXg"so$J`uC*o2'4"#:s4%j&P/kVKJ1JY/oP+1L_B(lo=d2`?kP
%6DM2YI/D.`'lX\(!X2KmgPj01CajFKh*_q&Z,bnJR0GVT1?``+qWHQ;Z"@pWbqh\[6]T2pK#W?8QZ_"+EtgCiKG7%k/tP7\.qlgX
%E-kkgVC,Q&bpb<K]ABG^2MnGj@,5`!o'P_BA8,G,ft3A1,$B.AeS*CHSq;Ufm+Hi@VR^S5^Tr?q<@H5K-Y8F]W^6`\U!>?1N<>Di
%=3c`ag0<.Y>fAW\<,B"9Df[M/fU;N>=?h1KWJ&gsoDkbTgdrf=4=9?'\BEpNX_G5"Ulm$@(48\2j-;\MEs"`c+62<:0mY?p\pY9,
%T+"Pu'A;@\.g(>ucSm`[B)K3Dph[EkroPEo/WuinnjH62JQo%n[r511PX<54I0WoNL=db8mBOnKMuB+#$r;MI/,G*g:L&s[P[e61
%U@4tp4to#f(#lJNJj`t@Sim8'Yn""WpqYOcbDK^l&r$YXn",;eUuq!-np3/F337^_(Zm6GW3g/>W,%S_()Tc:=<95ZTLMP+<,5I3
%&["K"F"-[j(,[_?Tc/aG'[$J7"G<W)YE<=(9k]T&4J,0rXs4:,eMYj6p&]\TEm-7gUrfmWXhE^_RM2Um:u,7%eA6,^6Zj#iA,,cf
%Z`\/;A;UFN;[CSVZk/E]`_`A!b':h/:NX@C.nS-i4\ZmCCq/gLOSO352!J&f;j5puPoVq:K*D!*SALMWnEmO_jupGs17)P2g6\TI
%,)Z>6:1%2n/6bZbaHmZ);n=LQKTi,G@WP4L!bcL35*VD0?&b,c1^>j1RDj*\!t'or4L(,*9es@+e56;*-t&#^(4(S!K]s:F?g78"
%Sg#2491^G@@Q.)WHqCM@j>EmDA%M@S]j!8ZNP\d(O79,E1MU(oHp'BW2iMun3I#Q=h3!rk&>5YfoM5/Wa/A+@Vr(NU(llbLrQ38J
%St+Jkqd0"`rHrq\UN:[_'_crE]n6fqm>p#"m;JPElY6BtdpF*g@>d>*BQq)/htl`Hn&L4=oOY5X?#08<Zh)^J]AN(J*Z_HG>;*G7
%L_oX>M=<T>h=c-Q$i-[&dioe$NSa,I[kmq4?E;G?E)_;*$YsB@bmB1$;Wngln_t*]08"V`F)g"&G$7D,ej5dES@24S48l`DD4UE]
%eT^lW^NufXom+Sm9K7o:3B?DLe7RnQTW>EZc;@:@KVPs&l[D[Ylj(M%H=uF>:@!,-X*Ufeg"3Euo@@%T[[eVgJ4J(&IILPB"$DGB
%9(eYiG"rSFSN:";]aG!Z*>Q=S=Ol$kp!98%670Rn(H7F0K"AV>[]ER-GY$#ErUpI\nC6Be%n``^'p<YG?XpBQkQ,12%1^,h>A*-Q
%m^E.@X;V\2\u%<r<kik+m/VRG^!go#XhG50>IT$24.@oI,3BdiaS'kTjP,=<JYK_Y/bk5ocEjRkASpPHn#(KKp)!M>kD%@^9+uGe
%gc6t`@ZCRshWBI,nZRl!T!D^Jd6?g&eW:PNX+m<[RG]/pW5VI?/5r+>J,_J)49<fEX]:Wf;60mUlQliT1r;e?fF[3_pfNnkXX-(@
%*u*Zcg-pWaW+=ab+,h9l&::)L:j3TNOXS0]re"8E";uW.q=Cf`kPtF/[^uM)s2MsGRq]Be3pmmr(X!/]*r[3Kr1gZOo)NX[`BhsH
%Bau7:9mupC2T]HXdeO]m-BWprK)a13>lBlc8b$0NO&.g^qf>/J]eqWK/*.`*\;@^=mg5&(=Wn%&O@ROLk>0G\F1ou?<kmI)[mMc>
%(d<9'].o%je$NMLd!0%?ri0lKh@7kbUU:0;'5?h3R6;bg;Yd38Gu!s+61^iVcC!1d]J_3[<a$]Dm=F.'*SVtdkC%UKEEeR_jNpYk
%McGR%0Q#DrZ5!9Ij%IoXi4m!Ys*:^QG?3N"]_haD^Pc;^#ld6#J$S[I=NL)X>(N-N6i[,L&bmXS;#<tu#:A^6fb%=a0(lD[+48#Z
%!<.-?@-:D$moBJti!TL$2">9%QSP6DYC5KabUcrkFlFmJ-i_PALr\:fkuZ='WE2<QJe7bHs$l!Xfe>S8%+F!\/cSTWeVMR-.Uf`V
%9fFWb!9r8;,KR?RH:*-DrdXi,ZJLZbaa_<r;L6dkpOE**VuQa7L!c][%;+<AZq='.F4"ig:6D/9k$"qg,MD`;FK63AkMq3j"T150
%)*f'Z2^&7-nApd/KPOUIjdb%*b+XEp4=%:G6DK:NH.5\Z)fZlp>--ETfm/B'qsXR)8utoQi;[RoZGlF6Wl'^dd"G"AMACC-`0Y?>
%'U>]"k,4I)qH9XPF)lNeG]/_KmDi(SM;'9M?i2"SBWRTQcc3$^+>=naCiZK^bT73iS&f7X`SDsWq(jQNV9]kQHu]-e[kjEIa4d<;
%hS5T??VlhoiVdBOC\siQrc(g"Rqbu#>@['>n]=qCUDr<958A5;2"n#&rVGYIort?sZLcY,R=DTpe,\DC*3G['2:g`MhJ8l76)3*p
%TFTnPL%inTBE.sLrV!^\R[NGg!->PU1]Q)hbY2b[^"Y_6bePs_D;e(T\=[WPMCHac''Dlfj?lV[]b$HYLa<BDK(9F,$2oIBs3R$T
%`.dBfMf50;j'*X>5D5X5_(*1^^^k6!LK@[-=of_F+')TD`2R>3R$Jng%;i26<lU?3SqY\sXIdFHq[P1DGP^L)NE\tlPjHte)'h/#
%SBMgO;2EPWOW+MX+g-,C-U0q8krJG;>t-2Wh76?VJ<#\-Ce-rY2@X)NgfQiaht#f=1It4Z1J2O(3_1DM8dt'qg3Nt,#C'Nm3P.OC
%b,>43WEG_WP5E3Uf?O7r+aKP_Ft^Vu\hu*PB&VS*b3RV4f^.U-m3k-.rSsJ1Q9p>UOI$.kjlib7"*)j-,+HRn4]>sKXM9:]$VY%O
%FH4YX3K@<<etVhP@W?pFs*E)5D4B@cekinGjCC3L2)]=ajE@IZ*,a_<eCL]!Y^M'=PNE5*eLc5dY@d=RbjsF/Y:EZ<[><or'=VZ^
%cZ<;G,,_jJ%8a11$[Z-e3>3MI#.jdS&]1Hh/Ss/+[uZR(h4]'d^60Ao`l7K:IV1&IDO1+`^&Ht_kB,hT\2/LLG2(1(rNH7e\D-k>
%gM&'&]5;^X]aLZ<p-JBmW)$Eoo7$/ppoje$C;*;G/8V]jrD$GME35=Rs0nb5-'G2oX43on`=-ATkIoEja4=D\f,=VF?iB]?nPNrG
%%%h7Zhg]Zo"@gW/5mQKNAk6t"@8,#%IpM]gADV14IU&ClCPo=fRuI$sl"R&Dn]t6?*R\QP1>gHZE72An$?U)VG28`Dm&_5k8'<le
%aa1S>KCb%L<tqp<adAg!ld1D?r]3('FTL%m-?+Yi&$>,J#JJeP]K#/GSo;'`gK6I2!)tdm/RLrlBrsNp+"jM[gm2jTU2td'f%O-5
%e-0[I^#%G])&J5&eP3gP][Q;cGLG'kMt8a$XZ^S5e.t:Jf/=ai4n#=:FTK8JQeX:dV8jT&k7@G^CMd@V))sCLV3Y)_go3?>LY_!s
%emT*-l@68=C<F6=JUGGAAn-=gO'Smc<XM*qh`>EQMsQg[pa^'Zh*4-f[JNH$J%+%m#*'Qlg,a#A.=?d.PDa>5)Jju++_+N."AeA=
%m-*e\2*]4!=mnK1?Q3A1Z`oYei28+o,U>Ng+!!p%58\"uhSjb9doTTPI/g]tFF8(;OnthQ)mF,\ChjCGWFN)KIaDk@b&8?i53X)1
%\/=2$,Q=]snt.;c;q5=\I[ljFQ8eTpmTrGBPUU0nIVrm=Y2*%#PR3m"`_#@+IAF=N1e-Ga4c8.ar\57!'bpt'S!!V3#4`j1NuOtH
%iV2C#;86%TB!%qFg\6a>0$ZN\IBL^NrU9')2D?=_[f6YL4i5up",F&hY5]P,hM&#.K?n<""ue$cg-bW6':-U2V/1_P_hPK[]GR15
%:B',Abl1bS;odc7C:2Su-;HdiE!OF]8#h.;GGU`kRBd:Mm2c2m*&X,IC%&Ed*rkJgPY(fK]eRZTqYP>njqQ"$@IWqsrc<#,6210D
%^XcDB1O@H\kT>!!HP`SMJ)eZ47Xi]G=80^PkNhrmrisneL(@N^rI:jm;4L/@NB2H5SdVN$U.!Lp^XXn8=[&t&L/6"5>QmFc\")#V
%jjX(_3WA`cJ`MlKD'JFe3Am3lg&1j2p]qkKLE<sebNf$HkJqZ=HX5LnLAS/pG>IteRbfkPMb3VC5YDM(>l)2sXd>T.T!u.gNmHGb
%a5,cs3Ts<WqI-5bWo^\c=s=s?oNT)*B+]H@QW,p;/A+?>g3AA_ikXo\Tnj5:3tU,:pY2TuZaO&#_nT16a%*7_0n22$nd=bga+I^-
%IGRgL4/g9N\,LZQ6uDEgq:>"KMl9Q_WDr8ra/>KZ\QZh(9aBk[hG:gVW_B'uZ8[*E48grh".O/(38@rGJ(-J.fp&VH-b]-<k8D1=
%Rd&D[Mq/A#*l2[IVakR'bo::O7UXh`h0[N&L%4'de$j;F%f$l_f&1>s0k+c)L6u74kisT1q5%4)f=$-<Rlj-A(>*]%J_^jE.!@C_
%'spZ>Af/M@fsd0;X!d<6cU%$cf2\!ZEgtp'IX&.*OUoL$T/8ge[r0cN=0!uT>H^*nXc8o5&4`i5$SPgNh>=G/qX#kdKDb85iad'Q
%jEa#UpV%\mo3upHd>@_6FB4I-J(,RA[SK\9Rs4rY2Yq`>H71brmFsMSr:=aT](aAD:b@!+7i0'H%#3b$m+'HP[=D<f/W5lQaZ`pn
%olN)o4m\`2USX]fdD7R(6ogLnD7Z:qnCCg#k3M:-lJUZ0O?Z>42Fh%gfq$8;WRu.PW3FSe[(!M`l#`Wl@D@"EX:8X?C%S0ETEoaj
%dK],D?o@%*#OjWRe*+#c[!JlmFa`YASfH9oE-QUgW1,+k3pRjd<C])`ea%]hrS=9spU]e(r=P&GOD`-*4$5UjYN#Ld4#CV^bKE76
%L?;OW8`5kO.+KfBA3cf876A-QdUcKsaH0Xc=^[V=L%im-GP]RQ*hN9U:Obhf0/1=<kAJs0Li9RQ0c8D^N\-N2TT7%>&GFX9<VPK5
%M(eP7OIKE?&`2tf9tqE<RdX34m2)4WcM`]65%NNMeY$uTCM4#-q6o288"G*A#fa"TO4N]%?3U6G65Tr[+j=N%HJ82G5!T$P7r2YL
%BDo"s,HWd6$I1N4Cs]]Hq0H@k@^F;Tgh+IA)J;oK0Qp7u%bgkbg-\5H'MuEJh1TR9[D+.FlDr^mkknF<g7uqp&GATP8anUV&^QNa
%]++Q`9be2I-"U):5C6k?H+Z1mh=b!(bCCPS"PrX45Z^dogX-jn2AD*]&eD?1lOAl0X;Ecm95sU<fDjGGc$Fe7)2;u/\D";rFjOtI
%rZ'?gGi)Zm]P\\*-&=P8!tliI[-\<*Dr'o5D<A5XO#hpRDl5Ss<8=e:eI`dCC<nfo`XU[60%cVNq"R7J^8r#NEue3FS.&NOF;P82
%%5%!HG3;0/,Ou(TG(p7b>s?,<B6BOiZt%%O@0>;b0aM;qgQ:%F>Hi<4rTr9,m?m)F>33&!*pPT#?FSZT%G5u`]qI#`&AW6\>.6au
%DQ#KqD04u;l**O86XQfPrB[?:fl3s(%o!9nO3\Ln33="4n2*Id*UrJLS`RcG_#nhdfQ3"2<K(c+jLDV+:YojPH#L(tX2^&idh0"B
%!5H&Rp7$E#nXF=R)$VMSgqi>kTGaQi/2B,Il:GBiM<9=*lDELnNddlh@pNjjT;'@LgdYm]MqcX:]udfn!XZt5'<FOkiQOO;huao$
%g\fodN<]uWE3fYe#r+*h%QAkAGFj8om2TD[E>SYfS_h-Z_gLCG-[l]AMb`-b>kt\]MdQA,OnH-ZT0""jrpBFD:3Z`Y_>9M=cgKUn
%5'9*H\E!!)S!T-f[T#2T)tuREFKaMY:W(kF`Fm$&^\hp4cMkYKZaTMY$Z8/?I`&qlnpGlWCV'-/rh\eeg7)H?\$u%.hU8OhdJ)>i
%Z^8F=QbWR15J)$IH=_9qo?mHgAT.Ibm)&]%bQ]2.=8grsG3S_&ZRahUpN-B.g#C742<]fC4QuM1FoLdO_`KiIe[7^<9E"SDXO'A[
%E0+n.^@W2h\!L)RMGu3'jJa#$s23c!U:O)PQ>Z08?4@+qi3D37G5TrN/q$`LmW@!'hepTdG6e*GNPW7+`uBA$S[ICp!Y,umKl3jL
%*VVqjk54ReBs/VnXl$>K2=c3tbuXL`d/UJ]oGY<_G0IW`=^Si6lE%U%f'D8BVeEcDfDE%L`M`UD?EkI93*:R7FQ;lTj0E"g(LO<u
%>e>#tp.JPlcF.fWAjroNV9?u?Y:4>PP3E0h5<.CNf:S>RF`.*CqN[u!O.Vd4\oXj[S*O)"%<al6E&W#H7H@PK%u9"/k]O-qiLRO2
%rfuu#?@=Eh("W'SA_7(>n_X1kDJ=`inP0mI<N#+i/)0C1rl=tik7t[:ruAa6qR1!^<S^atIp.-nUpATsmH]]+nm67[0(oP%QNlQb
%m_tfk)rASgkmlio^ND&Q%DORAYBP04HOU`T0&=0[@a,Y!Z'Vm>?MYCB4>,sMfm`R0]qX-BdZlKmmo8rUp+pOKmG?$QV:2!i\U<`.
%DWgntdU%-h-2U[V^419:G4dri](P%F2XE8iaE*8lq7Fg@jD0HUmsdM-IpG-W<3Pgp^=V0G:Hig&Dc[]pF&h&7iTf\idrB!2n(+&c
%P@nl\Y7KbJP23U&8SPA(]:Jhr='1r.a,a8NSLmq8qL6P3Z2<j]][o[QVqpb-40rM3_V2YME;ZAL\h>*p0>CKZ]'8QCT@3::G?6E1
%4SjHm#55(.a\R-\e#boIYPS]ucY$7k5'C89gfZ;r<HY&thHG5R2sG7F')CASb>4D:rg8&C]3`nNLWK;Drj%3ji_IZkpW9JrT@^8/
%=YB+7e#,-s.spZ+mOW`9lW&'0*C"_]D!c,+'7'J?487n8fn6S:qu%lmQakWLIkc.lQI9PQ55)"fESGQt4'<&9]mo!Z37-u3U"?3O
%(4L\cH?30\HE3\(Fm45@m5"G41VICH"V(t^?hsPINimSErN5r>b:B/G>>O,E5d)]W>P?1]j\u3!T'CIY4AXq<XWOUr/$@.6eoHd(
%c6"VmL[m**hftCIMk-\KaclJGlWURFkfV\_\+f?l?6@I]?D/;PZb5t/heBZGY!6.8&c"rcf%*X^p!0Voh(491ir8`0_cp/5<dPeZ
%Vr%6kXEXX85X^WAK8Ze:rmAhjq5;''3]smh:=Z7j[3H_7Rnn+,1O-OpCu'KM71BUp_7NpsmTn_f:Q,/Mh&U/&q442F;qfUemQ%mL
%O.rYXD`Eej?RJjGDE1K'+$?b'oX"-uj6*raXk;S1ZL_Q*dVRI3X3So#Nu+f[%@pS,^K/UWq>4dTl!MZSgn;`rmQ:<LAoH(pq;W7'
%J*?6K>Id]+.1ttGY4ML1HEZW":Rp%aeje2fHd95rn].Y*IlJP-]Xt%t<bUtGG!>p#\m4oBl?mo#_lrq/Y4F[MS=37F47.+H?+oq[
%XS@*g_+h[hO"3CW\E'f"rNoj)["B1_UM"WY/&$JbF.`C&N[m:V>'/[$G]^@ke*tiNb8WCdhc1<6)skhp00Xc8T6g+<([bp#]f3QL
%s6ab#1sZ?=oBttii8G4<.1g?+jk=c[7p@s!\[:344<Yb:)I0NE*&uHZg3oOb1A-kHco^Z\]5-U$)r!%7`,@TlD81M0q/5LFjQ]QL
%B7"-:ol+DNII5FFXl=c>dY/;/e=kFc-%?uD7HA]d#JE'$E:%Xc3q'0+H?0)ljLo#e?Z0+Pi:3YOj')bHl8[%*%?bAUpG2*E5Ng;K
%g0:7d"nWpql.`n+ha%e<ja+nR_2a/WDm89M?K\bXegc#84fG)V-1r`NW1B("m-+^m^XVneZ]\M**aQI*an1J%JaV(/?:g,c,(jcP
%6[ISQAr&RY@.tSP\86Ik.\jUZfdl=l[[cLCV@0uOL[nc(\*kho<>7XeEkSJjCa(CcTX%YG%?@H7m8WhK4F-WI/#QsVMh4DeYK;2(
%1d5"6qCK+YWggEV9@oMU#l#A-q!3Vc:u:V0K6AdUmP[BL/FH@siZ$`lPVjUq:@Rt2d`:P.D\utVqtW8[GJn-I^?4e>FdHIGbPK8+
%>GkO*#J-M[Vs;IR.3Nl<#Or3]o\S+>$uj,:du6H3Go0kuJj3XC?eYW;p[D,mB+re4D/>BA<2jbQV`V*U']eNorm?1)8^hKcP7t#9
%^Ya.B4q;b;$0sl-Tk`m#s&aa*,O/rZ9pi8TKA)2%)&h5Y?XN]eft7ANe@*$M4K'>82W=P1@T^fXbOgEYlBW;!T)mIqlDY9LB^517
%;>i,<iSNqj)<-_?\M_S\Kt*(6L43C9N:n0=^:5N--_7/OL-<5o^:)]'?cIs@hH4Ns98.&sYq8bWkOiY)g[Dd<S'M"R^:JB(%I&u_
%N)+lXiK+]Ua)`ZBS-eD%Q8<W2=mb;fOm78g/CT7.I3WbUe-OPlFt=Wa6\341(9c`k/19?0jn&?-aF/\*R!`Rb/Ks$&L],mU-=2-`
%8b"5kSdOgJg7<2'/!k:?1M`0t\'s#7]h2'4-'VFDhE)T=YH'K5CGsj_s(T[@%">p^FM5uDKu(gY0Al:]O07UJq92`RXu4je8/OHJ
%e[5-WI;q?>o2f_?IIr7@oqc+bmi2`_^m5];gp=l^47I^(IP^Kpg]itkK?D`?B;1<0,m6D<ef8FuJgIk7]oNuqO7\)UQ5"f;fZAO>
%bfBjR8S2+7#2A_F!ftGEfM^hHS?Em4n)aMF37FeOb+uATAI3f#QK;c-a*H&G?9.1cb(\?Xh@-Ee.2!rC#[&NLRRQ)TZe515<O]g_
%D,%E&g2Yl6kO224W;;q-RQ[0h/@ObblX4/b`]MoEf&*;7bK$E6"$`l.;a%3TQ+*Yo^A9]$NBgA6kN,l]j&4np/.qN-BFU7^7k^dh
%rqre\Nl\lmQ=Kg>fcP9bA^&th/UP<mLQ,,YScA@pH:5p`I$531lh,sUdj#bb\?W<D),+j)kI5pYm1qW9Qljo:I&^^KUI`\fmT4.]
%\2H?AU\rEO%kfd6)_+$sks6E;of#+uVK+ff_[FV^qOLY`V\^iijBoXkBXa*bXf*I&S&0uMCPJ\FQ(lReeY*u:&i?V#1Q4J-7T*Y2
%JAF(oC+;`Jq15C"N'S5_kt(0K.1W5H!T]NdlbCRqXRk0K4J%fs@%$;?c^S);-2GOfNlfqieSot";#I!"<GtRQoh])rn3.=WLR::k
%>K^uKWe9m&_(]#fDG1p*8e(+adSs>bK,cD?ZjS^!"[=%bAHg(+:eCHRV>4!`GNkLY^/=c9L]ERp]I`=12t*;kc#`X5qN(%!%*>8[
%oW@f"n];It@'o\+1>^m`n7uKZ+gGE5,9HOsH<$R/ZJ2]VYO#\)/KXVLLNqH%eMu%&:eRI2q>/n%84EhO53qo)H!$gKNhUUMEQO`t
%^mHn4OK0_kc8V;!ogNijd(cpeo'nE9\]tcG?VZ)2H/5gH(/cGX4]L8(pDQ_^3HT_lX<!N=]LOmnh/ONCTV%4gi5_Wf37L!V2j[L2
%G95>hG062(AWf=#-7`ff\\<9ZPI19MYHB^d5?<]qf"!efPa/Vr+lAhlmZk*:5W>HENK<X.Er!/Jn&=R5F7q#/23'W+>DkI$o>3Zm
%LGC*rhhG.cSJ7-b*In%@D"]J$Db=)_B%Fe%<q*&,r=oXV>[SCcE]7>SD<f&E/IMQ0ZBno%JJsBUo;_+LoB&o:2tVh+0/PAI&(bm[
%]I8-\-rgUiXlVWk-_k$u`ctjBD*0=c)(O1]`2=.VO5#U\f5=_n\]'7o2SQR&(9^GYJe6+')&DTm0ES!1d>(YFNC$#`UV.UG>_IoJ
%[@,+`m%%X+YpbICH"iit[%*HF+,p_S$JY(9LU=GnRMh'dk1-F.V,5LQA8R@0HAruP/A\]R].(E?>iZ@m`,qcif,I8*%Ck.C_qcfo
%V?qJ$mks3E%?1%3D,Te6FAIU-$J]Lfe"6g\J9UrHQr7q%'cedDiGO1bi[*9e[8@O<2B>Q;.kW#LX&T,N^A!q2a^-H`%l39b=LY-<
%B-ljIEii;a@6ZM218#4b.pCI(ggi-o5NQd]%j$u+,?n+h0!W+CYC@4gjLD&c!Xd]'14Su4^mh(p't5X4H$e+-j/.V0\q:GBB7-Sr
%A.PsL-5QLc99m)T1CXd`1nNEl25UAJVJ]-$kE/U*_q<I'XnI3[cg<:F0?<eAY,1`#c/#/OO0>$62Us:2TS6+\pdH-*@@NSTs5@&4
%j]H-*Xl"$ag^s?V_eZA;pNR%sR_hsIoGSOn1n9a@OY`8J\Ttg&f_6UAg.K%!HM%+)qSI:@IKWc\BTVbpD/__>Oh<nsjHjF_44O0Y
%*[G01eQQaCRc\-]4lIhY!Zh3:@cR`0Q%qJG&MuN2TDOV$i68't+^-]C"]VVdrlQX,E#!3c9s)[0[Y8]CD)A>KgS/Z.`7C?gWP%m_
%Dc^s<<P]P_KPN(+dIlX=h+cG<2=>0j@,GU49WHY+XF.d!XHk>3A%D:7[RO=makKTL0Li9@CG2m+S\*Us%UJq8:ftu9T"^U/p53@0
%0W=U8[C8TdQn2Gh%]e<Vgt440>]A!Bp?-3+M?g<ejc4W_IAa^7rf"s.[aWED5Ae0J]sguWc;u+2<tGVW%Hk&BOc$Dk7Y[KgS?G,B
%O.O(`&C+?!b@`a*K].;O[BY*83coAYE5%393L8!#SWed!e]77*R*`go_YL3YKil'Wb0\*>_tiS-q/T\Ir,BCH=M>Xn;`J2F?[XII
%)cJ'okGs[*ZeqPpL+8\]2p7_)lEiU46n7f@hn/`chMJ-"R'[I!;INWn:nq.3X?il/\^d">X'Ph`De<S@iM<J.&F[li:5;eOK2ef\
%<)Z]V0)qXf>=KjdM.Xmt!],j%NH\A?._K]bpLrS)ejT!FaX/gcb$b_gAgea"_>LN?GRYQ`prY<K0Qbj,.a)uR"n*1STUP9&:Ko(>
%QW,AeCA:RTp%"7C9=E3ugr)J5^tej%X'Y0NRe2[Y[1AUY.r*TMH#gEJYe+L"-:>Z<Wm&[3(l0@%Y47-=c6+uS`StbmE%r7,>+l4#
%ia6.D*fUjK)d>4\U/pGcN?Ej*(J8]*ol?3acH'8!h4&HK"7Mt5*?#0r[c]j#Bb04#YLsY^ZeP03Pk_[FJdh]2Qepq\[Ofh3[RQ@2
%Qa7Hm*MCYX!u[lUUY!mgbuL*e7iNA*QCL`,VXW&'r=(V?8ke1tRI$AZj3!<0lZk^EX&Bmhdm2.&`5pJThEQEp&i3]3TJasbI\`@J
%C;YDI2&(N@1ji&W9qtn:Tdl60RU`CIJ'XfDi<hHpL'7F582PO:7*A(<9L^jg6DA&Y`K]jIj%&e0r\-W%,>S@WW0"a^%hBtP@m;ef
%Dl+ueWr\5h]E\tXgE[@%g\m!%5pJXch\gac7BWeLjgoN@*W]G)L>]R)aLW\I/9_h'n<+h.e2qc;EXs[spPkJ].YI,CT%ft".)Z^V
%6':-b]%?0%F4f4r9IUgtC605bZb#=jL!>'A_Xp#%^7C=XMH4Y/Fe=\)i#!\8cR9i;S[LR1X-kQ<M4F;"_0!sdd-59I3NX0ub%sAS
%XiamV.&f\B"]ZMQWl"D.9bK<n.TgV*V6KL`UbRj<]pYi1p)D,";_t;=iN]mMUrlkZDOosm2\6`^eEsi8p#b=D"7+3.2`Uj.onCR&
%>Ar/orbuVtJgV),iLH\j(G(M_Tub!QT0/Y!H34PIZej=F.jN$N%=(jt=`<Bc4*tKZ:;_A[JV%pEeiT!)O+RZ=22DaB];2cboNG+R
%5'p6N)JbAA(a5p_kspr84hGe6fp/6@0MV3Os3@[T3gc27l:iiqO2ak?QJKo&IZ)Y\@k0N+'^hH&+b$2`4Y(e^_[sR3KOeDogfVR>
%;1-kIJE9\*XYUdV=)Br<HAo7[:+Wli0^&%GZ3iL#7l7jRhRo5D9&@CXOa4l]R_%mG*LU"&MQ<sU4#1`%B@r=joBMiSV\kiRb]e$c
%aLmq\To0RQk1MlA$I5,aA=i29olA89Oco='O3GeG;'X,<1lfeLq+#.<?@H`<NQa0t=pH-7E8JZuGs`X7BC*.9M/O9Amn.4UA&k]/
%G.gl-L;`lLBS\aP,4c"HX*t["+n4heZU_4qGc=ch*A3*lC6X0WaC?qKb%fVicDt3eT,B5Rm+%L!<Qc,<NVWdu%H84FLQTg:\$+o>
%j49!FH5\\_kYNd\LXC8e*AbEF8/R/q&N"N^T)[@)"BD;7RE7sFNM]X?Y%rlp`#,40`%Ok3eM/8:loYUj5)dCl]8%VGUiF`1BBMQK
%bm",>WLoU'IN^)aYXDW:rXrt#3Kr&'a/q5L]PH&8LkC"[)E9Gq:O>7T+PGAq$^,p$V'+G%^SVYilcuV+-V.8]RR3)e@$sWK/0LBR
%O=WfJ2+r$s*_)K%1o#bk5-GIjL<?./ci&Ft+i*_YS>f-<hX!?_%Eck"CR+EV'*dR[9WAXqpEtR`.Z$(>TY+kIOqS)^ATZ7mHci^I
%o'C6`9$0A%:nD[4W"U)i$d,e$7T+4VKuSa2N<V=.p3XNLhr`B6:DVsa1S<1%pk78GB+(sBWdd7=XNoP"?=A'_D!)6A\n7,MgO'@i
%0jc7UQEKu_A/S;aAKD'4^/f:[<nnFTm\;J;>Y=V86N$V]a@,*m@iCMn%dcmS$dUKH:hfmIX:h:OB317]ca24Eh/I"n2kRjV?/GVR
%!c"jPSA"Xe?3J%16+`-0Pt.H6<28=JN;7q6eba%k>2F#"@<W):@<['6N_O,BI[f;2V1\Te4hFC(2XG>?i:?K3'`i93+6lJ^I9Ob7
%!kGPIp#p*YYL01?CfWadmSeP<hp-%?2I3I+^!hJ3Hd,'6eJ,@%3VtNIl'2WFHZo.oeS?f(mRHs$PDW\an(7!A^33Nplkd<_>8MJW
%c)L'[g&?623nWoDcaE_(RHe1pG"o/%cLo=dqh&et0BIMNZ%N!e5?s(P<=sMeDQXMQk119mm0`QJ^Zd>34LmGODp%I=?Ks@]2tusq
%CsM"FU1sYeo1qHb*G/Rg;<7q]mk-9S0%_?#i.h.'k(ML&X!`2Ur2^Kr9r_\-nsi\uWH&3/R0GO^magQqDDEOoWF"sf-Y0>7Z]F4q
%26HFqA[\P*MJ/`Xjn0NEhu)8c*aLXgieCK<anlQC=BWrs<<cGmpM<Z/YON%-q4@2LpE]h@2)EIgUfWS59r`?R)X=]_?qeL"LDA?T
%:9*..6eRi=FQ(Jbf@hq\qoXXQ@g0tL.Bp"5BN#E-/!EnEWiMDF)q\4M3I-Ld2X7)hI:Z9(eaK)>#PO,mLcKWdT=%YP8j/<I]0*=$
%9K048oTTFSL:^_e-*XTDP+HQ!?R'XdjFM_j;119jW<W(HGn!J&YckQlNco#LA(\g/lmo\CAp!HrW<N!\n_*KreVOA)11T=B522ko
%V80gNW'1\;R:]i6fc&u]`7#"Y.uW\V%6Xa#Ti+kMa5W3_qjPHM:*HjF/?3Uq6lT#fBLJRP%d^5=g9^tZb$JNO,+)tM?PrpN$VWF^
%YO%?T-Ilf6p6A)>c."#_W5:87YceI$NnI)NYcfUX05$'37UTS+<*tq!9I6pH/H0:Z,&L($77P`<o>qoW;]7m)0/k6*&PHJNS*Gg]
%#DMZ@L!<N+,NmS.0W)%RN+Z^h;n:!>?s##,g_*SQJ)_/jjW_`5<W'uH[`pY2'f!@Y?X</krO2E-=B3\eV#$[tdHc$\rT&\Lm'Xi4
%kL\C[J7$b[Z-,[d\_a3ZW]ns&<,Y=-Tk/OCa&Kole?GZ%ph)JsMLRYb\RtK1)2Z5RWD#b<VC#o]b2RoG\QXtur3%[NVHEk:,d584
%jLG!B6ro?1`W%o&@7^@3#n/alr,6V*kXNPkLij2eGFZ&8h[GaI)I!0E@@H'<idZXkh8n2fjPkYF,NQ:3f>OL?GD(D%4ITH4a4[4m
%E)TNA*@]eCqQjm('0U*kh_?YdEu%!2d(:54^53(PF>GJFDdq&mZUZ=NkBO@J&0BH)!XK>c*qL5TjYdq*Zqs`"TjlpS2d]U9lEidB
%(4R8\^+@?pPfJ!U6B,AfY#^p]?rH04%)e\2'S=)LI>#9GeJfVL2:/fh"A9o,\-=Qo.A"F4a0>i)7]jR2m5P=&V@i2GM?d60((/I'
%5<;/<URF]FrTH3sc/LmAMgg3D=s[\%3K[O4=f$?#Mpk/FZo-)S>E^]0g>4Ks%KgP.&;kL^IA>_]11kpe'T5&eRVHi_=(>hraE)q2
%hSdCHYn12D#Y!%ceI9jh+V[B$P7UG5^iZQ;,(*W`20HnoDQsrnW'$.+T[]q)j#e)-RB1WS'l;<[-<<7/9E0tg?WJ?9gR]igcf5jb
%s)L6(=ScsQbEV>l9dm##Xnt'+W.<gE+\aaj5]G`S=BkMQGHD<C1hPRY&n[=ZrAP?IbL]\uDID;8R:9IWWAnghmu(>*$$_o%qM)r3
%)rYFA=>!UhegN_k<qt'\":A?eZ"g$>hC4H](sP)IJXE3%q\nd.*ms&r^9;Sb\BShZ7asQ8<XnAB?(9SdZp6*[J15a19GW%`ij,mV
%^)X?ADmY8^nT2H/hK+?P.ZR1A23<]O<Z.<K:i5\@8\6@EI;e&-fYH#F#55CVnSD$bm*4aF<7SSCkC01:HM)hgf,%KXk,jjO7Z4lY
%A#^!6R^)F`2iP@3.(n@[XB&dE-h8U(\*Ism/ulA&O<T*aQh8;_A?L=5C"hG"PK)E.CpdERZBEJ:\D)YPkf#5kLc2D-ZacHr=7bAX
%A&R3;Xh=i.iRj-EeSn`Wh\FjiDbfljnF:4,LV+,/K7;]>^WZ_2&(A!!BD<*ggmq_3>^Zl$L)UtB\E`O[QYfInC2SS">:)hB5B*gu
%m=UiZ9fM6@:Fh>&c,!=HAOp5/ilgVE]g8sCs)*/?Wlsnn8e/_lA>7W2eHI/rE%?9X[_G"O;;&#8k,S=Jo3kWAi_`uq](Hk?YLsc'
%_56T@.l%WrB84L:IpG7ce'1>D/QTmo.LP(50#Iou?orM2!YM2#Q_0mpT;plO5Lr9c%>(YiSI7j@=oP^6g$=#u+oYd_&%GfrX6N/s
%]K9I\h>Z?_mFfWgBCC:SH'qge:+H5&DnH^_S&LA27jeb7/q1Ak3??g+](G=;esiSJG4H?0Bc;H`h8^<Z6k4XTQP2m.HF%Qg\4j@b
%qDlicH+u)#?_r02/'+#=-b\Cgo?OH.:TM+12aJP?XtWD3)H3e=CBX)b7s!Ic*g;b?ASi?rZW+tmD:^-H)PJk0Acp)U8gA:].=Alj
%Rc@EpWNu*`bXCE0f.+23Oi-46P^"VEW\ROa*<^1'\:N2UYdD&;NJh7OYh_i6?tr@kQ!pLJLAJ\E*Ri$nq^J)*)q@-Z-J5NcMOS0_
%Mac4iBko!KoLsDHR&qgufmUJ;W.HmU7+BeCrHaH-Ou5-oPIIF\9_<L>>[O$qfNl$*Cc$JWKHuTNrge,nJWRfA/^b2kQqp"OoMTNq
%Rh>6ff%=fI.c%lYg=+?Qio'bgDXh`1_#$"5qV-\V['us38K[_Koj\VIfEQ9X?pu%o;-/T]-d\n@pO<8a?dAT?1H@g7PHCmL[n2VI
%?+sh0\P`\4&M)B@Q05):?*h&Z+fQ;JMtB%I,o&diot7ijQpqh@1LnRr8F(j?jcZd'9?a^AnR>-_J3)C%>55"8Ch^X8:+3;jN.>bI
%OI;)c0'O9j6OO2X)AoUd?lQiSRng:]1f8=1_d5Su,MLM-66d)E-8M_8`EXiM<lZFs+2,ZlR@;&=MRe)XOMn$dLr2XR+X)\s2YHTr
%,MAd20/R?#oN38nR6f?@,A(2-7h81-\k4b>H?H<N7-e0XNCO])B$?@TVX]Ia&W@`n=>H`$aJBeL\k,G%M7E,VCgJNfj[($f5d<Yh
%U&Sr6_HO;%oSOAaS*d(VX>')OqhL%DQ97_;M.20Ah=H[B/"C=8%;lNl$AWo`:T7G>&krgNJmsGe0m-*L0luQj1nnCjb;BG6lW)o3
%#$J&H'g-:D:c=;bLD3QC`N3,%"V4+Gm2`Ok@=>ONbA9+0pe\6R@JuE?/@VAj4=jd<l"%3-$Qdk\Y7,VSDHQD4h@[qCSJ)`#XHhoi
%btOnh)AG:RC4U,7#cKD$=RRc*p$Q-.^YiODEr"F4j4HCc$Qdmfd[@D(']Tli/.2HJL,3YKi*lQjSuIYBS4_TN'-TBD&?*`dLNtms
%9KOp22V+E_',WN6_8DCuB8p9fY\[_0qO8apV#@i$RBe/^$6+aKf2k$R\cnN<4D\]DT=!Nb4VilVRCM0`G"h]s_$\aRHGMssJkE'a
%cK$c/NEbnV5!"GcBp0>qZnAZtC?i3p[,>A@[6s1jiduq4?E6c&cRJ4?_T7JU\kKQ2O?,lbGZ\>?E#Ms]$Q_3PqOY@X@6Kno;l=U*
%OGiC=LEhP:<#7Y:0pJJ9n8S;e$^5isUIIrjE`$32YXZAFXl/.P_W.(!4KOnB[B4MuJqr$1jV>pX7.nu[LLZ/*itOVW^p;je>fF)Y
%*nFhhBi(^HSF`,c69B%?`N3c%96IY[VL^Hh$Q^qN<]_jX=K)c%W%<0QH?e5PW]aS:%VMdCs$nYc=>*:k$r&\2Yi&rr3e\$;K:A)A
%X>569?OA//GZ^"QbL7ddGaQC3HPk'XL#Wt3/:!RsOsPS,Jqs#20Q"Ip[,>@qi)SI<2IXG>gba*+I;Wmk$bZ>kDlVVt_X1k;&*mRk
%D5'a(n1_2;KkcCN\n;0[.kQ!*[Ys-Y"V9oF7TQ9206gSH0cgbMK6S:<%r^'#4!_dT$3^t+?[PCDT0gB3g.+(1q41-o_qVTL%WegN
%itjhZZAqs4RMi<e@J-!1)Be@k1NF@pb[&UF4BE^XmfSgq1u/j51:'#K?X7$^>D*_BJ#[R]OGLBgh`hoFRFtSQ3Koe5TY1f01?R0M
%bL3@a#E2I*EEMV=dg[Y'@,nG=mVMOm\"=c">s#gsn=H,^Ic8Q/T%h11&CQ9[6ne;grRi\CQEJMbiFmE6e,AaAX1*Q5>InhO=1WMF
%`q-Z409:VVS?8n8CX1LlQ0Z`hUM$(AG40\-fm/md34f]mI!0[/^4(-pG!"TP(Q\OEH26BChg%*Srmf\GcLH/IJ%Bd]]O'8uE8E1]
%>')qLbWU)4I<tM8q>B#4GJ<ijk++/d(S:<srN3L,i'Zs&s2$qTmpCH;('aC#<=fe7T0oRAr6"QWrMTC^UgNTYIsh!-p=e%IDtYe2
%2nC+A?J0\1oC2&>T3(1;d^:G1Qb%rR*X(`XV[#HCCu2fOEJ_"<b@eYT0=WPIJ9Pr/ji]1"jj'!?mIa(s$*VT+YYI'9_#RqLG@t".
%hZd,49WkUEID(5=f)nI(MdObrS"CJnr?j*gQ#jo^K#KZA2uWQacM%+0F_CU;iBq8@l'%=IV,,J>`7*"PLUVbM/_s$j]Q_r85L2ZL
%j>1Fa5Q6W7&"U,+S`SY+1<4&t@WCf&[W#]W[+=<^D5<!h.rocUn`H$CG%GN>+2WOeB.n0MCU;3BGOGV"iU#"!\L4Br#R>e[TA>o@
%\`Y'Z/jFf+J+hU"95;'*?O:XfW\<Wh!>E05?JBF;C`Kq9>aX.+]/OnGqm\oG>MeC.rV#6p?2jQb[eak@Qb3niCHpu_na$29o]4eI
%(09&V:Z.<Br7d:X2>*gCMq$_;q-Qeak7[f?I:3<Y>i@nk"%JsY_>2[@cX/,E'0^C'Sb.(1pE%"srDE*;o9>#V4'j`cfQ4QNCWZFG
%I<jk=I'Bkb54I.\]t/h<?oPP:XI7D!9_RkFI-IW25PV#im7Pu5gUVIO_!J4J2O:HUXKHagXO?LHHqiF6+-mV898hZI_2eusflIu0
%o^BG]<IaGm298"Wm&4=HbL#==P.s*EaB3sA-Ao(r-AjTB<K"K`F:BeLbB/+1\u[$X&FVJ[TXDK-rn?BK5CN4tQYHgZh7Nl_/u]mm
%:Rni%]7r4NUmj#PoqQ^]RqqD\=0I*8SU\%qF"@#oDeOt<h0JV9eo&YPh7VQCQtQrc*)c)/Y6M3">K"/K0R8s2454uB4"iN7*,uil
%28_AUD!75BdcU+cMsZ5q%j#tRh9QXgM*"J?C'U1;D0rl84C%u6/Lr$cVs;T0CNpQCDf6Wi@/%L3qX(shK(7R2-gu6T^f)b-d.Zug
%@t*??EPoKpeZQ2\JNg"WY_&A6gI(`:PqRq>/H7bX>0[KGV2!U)_W2J7h,"NL-h=Wc%1f;HIU??tq*U*\(\4qSmFBQL*<)M\>OCh(
%Msh_g"'C80]g/Db4+j0`;gnZaT6#3oc.cKK^SHn`X^tWIhuZN(:p>pZOBLG%`iX\@)AtTk?7WL[-lsO9&GCip&9W5M"d&4TSYLmm
%lZ/Z%j$X[<X\[Pe$LI19mBfM/BKZ<k+PWq4YP:(:ppo7P45G(HcSh<<LGsQTOY\BpSX*'V#?T"Q^bDB3iQC7'Mc"WuiRY+!m9=5C
%Y7u2'QoF;EYpCdITT$-tlc%G;F*-McZerN?GVpl%TSRX[&ZJmbhV3:#&/`4l@8I@-Z/GCT5]C_IpIj=saTY\V^A?-%Qus94nEd9d
%-R(tf?=e.6^uc*_mb'S:hKBrks5:RVn3U2aAjK=W"h##8_X5\@hVuY'$la?*h>-]fJZZW,YkG89%/W&o"D\i,D=,*K&*nA&+[$eG
%2/A9W0"r`B1fL<_Xgm?<2J'1E>7j)%>e'C>CWWtdesCD\C^se8]F@]G3h8&1TjaI4/98DJk-%mK[>?MANh7sg.BW<f"YtWePQ6>)
%'.*S3gp:SD"0[LS%BS[1Qb0shV(4K;HY2?'W2_iJ>ab%l]lUnpHf+Q.7)lk,k%/5-c@Q-d*$RK#]Q*LI`2:L4nA1ra3nYRaIgsPT
%Xh(3dGqn+)b/Nl=]KCD,/k0_)`%F<9]/iN?`pqHrEVT0G)%PsiWbN)$>_g"5*/"EWqFr^NZjrPt*=E*T88>+1Z`0K$($$e&pm=,E
%2V!_Td5K`2<7*Xcd``f6cg0@5mrRm?&>>Qpb$k1%E9N;Egu!L!T_gdp[TeE3AmVorZi+qC=[(pSap1Od?K3!df%XS+aW59FXRQ3Z
%,^4_0Z@qs:,.XalEl.\qOke=iR1\<ULu_=>:0VuC,Ef\(VF8Ls?`KFI`t@%g`<+QijWsCXn2(^0s00/]P0LR@2a"Jl+?r!ID^pm9
%NadA'+WftrBqgWWg,,iQ_nt7/@/uq&BaNjQqD7Q'MX(o<;a5/jWBXl,:kAS[#l%A)?hbqFlL#!k7"SqC:'o2BI@=5M04qqlNo9f7
%VhhOKmXENWoi:sl[G`aaIg8L.7uN,MmW*U`a8XJL%GP0?Zi>j,^:X:lmKhQmKP@B'a8>Ti^APWf"<=gB6M&@]#N)B.P=7&8YIcm.
%F/uANm+bkJ&`U'_pBLZpm?rIB8a<dJaE:RJ,`,`@cS)l#rmUl:\)Yr'P1X]sr+#-N"4qsDHIU^;G<.B=s#f3**F>7X:=!.r>ANt>
%Ccls(KU\OMhGL2Y/:MF>)em<bkH?7^'"s2uhVDH4ZJCFGqp&'dgt+aGl0eR2=T@seftDaUVs_SEGMN.-o?u"ifLRq[mXP"f40QS;
%MrOXD\1H2i^SX(WmpCBiX1e>ZH$e9Yp/)Nq5C<26lsKM'W,lNnq=E#2fk#+!`U(J?!R(`jDb8"or?5qo"o`GaW4@[OPkb:Yg:jpc
%\"bqS]-?khg,?5_5cmt3't.8p&r<77CpSBq68Z!l^m.0@EVSEe4h92!f*!.HE"&LjDOu/iai_cMb09^&J*l2*n,2M'5Q!8/r8FR2
%pno5.ml^O=YK<.,e[L#-b<<hJI=;(=YJ9i"O1neHp@nU`q!j^F^jl9#?[K!VeLua%h1VWjnaqNB%i"X3aj5(J^\tE17:Z@iDr^=G
%pL7"B6Vq--57qLVla,3:hnB&Xm':g7GPY\2F],YZ>DKo_c/4[Q8UkV<qS,6@@o>PgqHG4=ph/Hq,"M[hJ(VkgbPiU95MYUV-i8ZX
%j$2aFi1Khr>OgU"qs]_rPeoY4j6ba_XSpH-,PHcAIpj;YMt%lQWkYoj\>PtPk4lAC^O!.%HLK+^j.,m>ir/]0=8iMUIQoaiMiYT&
%ao22TRH3URj%H+OC^Zd-jjT_!#V5-9Dik?eF6`!?hh39S^9me0r?"kJ,ofGD^&KN3!Vq^6.tkjU]G]NV?hs!E)rptIgV:<!kjr0Y
%hUB5(^@SIFrma5?n\IsYVJm2j?5q^Re\%I1GjjtunAh#G=aR?do#I3sro66>p2$@LmrKS"j/;o<5Pj(us5A%6HM:crq7R0r9$YHP
%VgnKp=67O!aj5j8=;@V$dD,:<@4_!pQC[iBmls(urobqr`U-1-nR)2.@CeZqHA_WVS3W_)^C("ml!fqd)8E9KgHttnpA?!<J1pln
%]:Zb8mZ66(pA]I9NSf-[]e'RPXt\^]pU^Bkk5rFeN!OsK'@$/boC#4/dXcf7'A87-r\Z40FNqtNkcb!^H[e]"%S!etdGO7mGL,E,
%kYeOs_<9mks7TIjq5#aCS)q=:qRO2Pp`W]&]mI>$7\\Bqq1R0TIWgblV>&hm(=ZmHP$9[iU\ns7+PL&nFlYjg/q*9dpuf)F5;.fM
%_eZ\b^EpMWMa'c,+pID0'_pl6hbs3rj)qb:I-W:9OU$<@i()[9U%%09HpV<5%B]gN<aQl(YF[%G%UUE"os=G9B05-8iR%DU]0C)n
%J,0)GBhT#XhnL%W3)B-Mc^[7m^&E@oj*T+C5bJ(rI=:R"0@\VGaldTZ);&<hk-ouXlLjh6Eql^3hu)#?Dh%0qpN\oCGeO&VBHVa%
%a59F:T?#f5kg0;(PLo&\HL"X>rkZ4bW,MY"MdQ<9Z*n++r1.:]q=LdrIJ;bTPgB<G5Q%&,S`M@dr6Dd3/J+HpB'B8orXXhVQb%&5
%W:T&*CND$&O.*_"r+QWg.c\H7JmB'r3]GSnIm&;YV`:4G)h5`>4`eKQ)152kNLtuPVfJWdro<ZYI.!X+D'/cM)a#^uZ>QN%Z.noO
%HR47cm_<g4d9DA*e&@+L:r!&')o3'Zs5dG>`qSZrKMJbUq=!$.J,P'cY7k8hrJQ0.O7_<Ombdq@B+pg/dP`M&i$E7,:Ad"dJZZPt
%I*tc%,k&glCL?k#Rf#J2mdE=0bI>4Tne/O,qsD:De"2T^R&WBf2_^V^r73g`HeX#X;t[af\'KpjZqp]L0ae9OC\9dXr*4-5\'gf(
%r^lr5rTg)XY?Qt_?WLNhiM!_JImJL2s,7o$IlVqJfB,0hIpmbrIV,YIIpmd(eQD,00;l!<;q:n'qDth)^XU#g^5hf^]rFk5rY]p_
%J&6mif&k;lF8Zb)>WI3"cb"8s'/!N]6N<HtY4*^QNr`>0qsT"3bNL9>1t.3Yq8:PXn67)Nn%\h[8&+oqnUpl<E,XHPa8^ANs24ks
%FdM[3bH:.r)UQN3]_]e:%j1`3GCTDW0"l9!q!i7`rO9N7l"BJ_lKPW^IIcn5TDmHuQO*KY[i^+hc$/TiF=6/<Dt:ZXH[YYRH@OE4
%IsZfq<:?Tcn%\_AFn[ckc]A+teQ;b>l79WeIt&:7_gV><rf]FPC&SKirNH0,s(>jAGusIKIJ:L+HJSPjebsF@7a*[Ek:t.cD<!hQ
%EOWJ(O*9Eh$$',5\A)WJG<k`Cj0"\fhc:bA5K'JOIF#;]piq>Nr^sj;\3I`S\HV;r*;-JsEo6F;GM\[NmoO:]IV"!jkHu;J[lrW0
%[AU['l[Gs]k>X3q+229!qnmpH\\[Y1)JrjUUWghsp\c0NrMK"bcHs!tKspSq?ZW6PD9'#ka-ZaXp;.TG>\QuXP7cACd#2r;4f<-V
%p_Z<@j41-6Z3d\H$2tl_YKcE,5OUE$BAgA(b)8E'\\kn)cRt9\c$]7!OH%Kc/NZM\QMXW8<H[0ET&q'5daQiZ2;K'"#`q*`9P$"G
%ff\orZ6Ah@PWa_I"P(PEWCUe\b$;e3WSNipGA!'m8o4`)JoBhrdm9FXH9^Q".J)t':DhpU`pQ$7LH4$A?VK`V:!]K-F3b]'PWdY_
%6Qa\T>jl<o2>2N<VcK+mKGau]pYL]j3Vr/dbKmCtZi%i&Q$E#?ce*'[+JuCbD!#-`j1.*\.cobo=Kps?nrMq@HO-g&PUS-Mq<[E\
%FKPFD$WsTNSuPur(mQl"%qBYf''n*F]J/9t2Lg_"9lGOSLX_a<rrG3fhREG>@!1;eJC[<q:,#-[g0Bm+mle;#OU(le[Wtc9$3gT1
%=!o8Yr?(3HHg,lp"HGZ2[RF<31*Lcl!_U*"]<Z('50N]2:Vj2L&li+fIr@unb/gL^H/]>J>!9u*b;W-5;TH!P%GYdCA7\>&0<A(<
%6S5WY=*m]tePZ$pa-]B^R&k:7<p>RiU2?]leT>Q7Qu)u7/XC&SYJ(>gX%]*`i\X)7/Q+7dL27?6C0\EMq_[U9Mf\Vq529tm@-L>8
%3mhDQ0mC$IGKVa;bh63X,W`9?!*a=?p59%._jf/G+m=+_KX_.Y2%i^XB(eNLZ3A23R'D)!9_qltUp^PC$hABaR*,^uBA+ZY8sP4T
%7@`)=pXfBlRX.9\45l#eG3-XJAC$)L1Bk#LmDWU!#r3,PPudtH]:#i?W=lW?"/XH'4_m.%oBC]W>m`uh*GSd`:su<!T80Yk2q/$F
%N@Z11=9($rinj&%B<8mp"2HaLC?<QY=aO>29USO?ke"MnRJ*tL5rc7l=pb7Pkt/Tf;"j!gIWQY!QE]/l<A3L+H"@qdoP7+Zfc$&_
%(rTrj#0:<-':+!Q!KJZBF0;ZVPnp'0[]A2HCeI(T6_;%`F`hDtaW;#s.l;*E)OO.V+5FJra.qtP0iH^7UNTkVQ5JtX.<ndWg3k#o
%r4o7oMq0aagdYM2VT':SE3PPERb[uV=<c?@(!AdTr]k.459(kfF*"IAQ+m=MI^)!o=]'70Tbdcd]\QMk+r-nEmh+7%gP-h1nPtD8
%_6^t?R<>u:,sSnMiY1^o`2C(l-`_fHVTW)7mfD[,>8i^&<"S.:hEQQb3%=B#Fs+K%AKMh8$0tdlq`C+mULilDQ-qWpE9kk<(e8gd
%9=ua$`K7_i:S-#8VI%_C7f/7D+VtCE]@Q:>eE$(Dr0_<fp.=pa%tBqj02[SY6G"LIK!"V5O4.9c`S;YYANhRkWONmMiM[GBie#Nb
%/Y\=MFJX47-TfM>_[ff)htB*LO>IL)/mC7Z@IeXFelbG0fMf/>\c6As]sE'lor6nS$muP#X(d''oPOhHD`V(t_Y/O(:HVJ-"+b:7
%d'_Es"!R*0`_3Q_>\Ob8=GUdEgGZ)5WN^GoUj]Ce:U*G7c\YRST^/>sdo_qZK_rJPp6PB3aG2)7Fcm%dp-e(d,4pdha+n/cF`:FV
%^_75up2Usq[<8L<ZQ21bnUt`]UAG7>+>%N\f+;AGd8Hdo8drut+CpMcH#/<#.6+[:Q(70id^WC$f]G\D7#q:F[K&G2nlS5eC-%Kj
%pR6Qpi*+qo*$Dq:DQ8ZD*0Cct==7+p(\:Mm,b_Xtadkr3He_UWg+1-*(#="jTr_M@CU'!cGeK!6oqLZtb3#b["_9ro76l#qr6Fq*
%[[]P]"8pp/$HqG"[&&4`*HUPCQ1iJX1:3^0S[U?-,lqE[a\XD61aN0m;"CTbdTBciV/L6m]'q039&JD+?`[S8Z1[]n@/mO,d]hUe
%YASO/h%>$915k9["s[2K0iEIO1tI'K-<Q+O>,o(`!%'867`aL1AZ9M>!]!k-DFF0VJitao1$c54MPuW9ol;7P=j&H*\Gp&i3snrC
%.B41eF$Rg@fR:m@K<lk)-a#6##6cQ'5ZthUMoE#mWdgB@X&)k8o&0a^rlQFM0uQEAZQSgIDlK==]oYE[=SFifqF)9rJUJ4ZX)'t!
%T:8f\N%sj_fIJdNk(sqg@6dumY-uGYrip?QFRS#?H8K%'Og,hNEMnG+m=4)L2ifiX[4S\/?Gse;dPT,uPX[]d+c2`nnf`S:(5kC^
%HeVPd!L$K9h=3U"Fl\D"7tV=_qnR%m.`e`DGpsU`,9.`9'=nec:*>(8Dd?\R9P;Wl7=sY,Uldd2Rq[a3+gEZ8f(M[IC[ZURR*C/:
%^n_2MS:K*c=slR"Vn=T`!?Y4oHeqkR_&YtW!Hir_S8'fSb:5l%I!saVN/Y^8UKpO`H&*m(o=)"F-KKrUI1J,eOGcRJQ@]\,R<FQ-
%aS$O<,k@Rf^#q0@adkL^g]h/F]Ia/IQO`Fp/]=c\n&eX^SQ4Y+'kS`p]r@LG_/Fm@YP>&409I"jOGf0;qG9GGhbI^OF_Bfed89n9
%BPuK')ZAAF9?nb+d[l6U]cA4+52Eo)mlPko8;YNBSS\_.NQIn/8k.*7P':Q[om!Q,/\E#(=kfCO-q:<8.7+t./K)6QfL?6Z"UAm(
%*9\3Z$jXie0@VQ)EN7ZIZ7au#(n^0%]P%rCg0/^[,8QU=Mhk*;NcloQVB4ZBQN7qBn=-`Y`1LlSP@n:>2U)]&%@&@-!j^E$M7PqX
%52>'s-YaoZkUJm)"g[e6jq1K;Z#M\3Fi*QU#0=@[CU't$!3)AFn!9hR5?p7f$[*pA6Nd\ZkIKPn=N(mKE!sErXHP2PD)Z.5NpL+P
%@l8jKLf=2IF6>1n&YZ8Ld*gCf'Kh)Flk>Q:#g2@#ns/dFZF5Zk:+*rRjf#J&J@n7)b$$1):]f<Lj^"/!3nVqCFOgnaD0q@]cL*u2
%NJQi##=pm+O?A,L9#qXUAif5^ac-tTYaiR%XL)kUgK*E8=t=.C(dVll8?L;S/$2';af!Qj-[T$%Bluh.<X46)WaJe0"/sL@8(@>@
%,`CEs]Uo0_f*8\n3h*:N4CBMABTB+[@D;;kmSBBefDdbWZ[+@VrE4,^[!\%E4N'lbRdbm,-6,<pIoa*EF2oX(OEtkgaq0Em!nh[&
%,.YRTH_U[bA*K.$8;Xe'=$o&r?dK[.a9-@H>%8XjqfpF363DT@]?KF=9sk_6'M,g+;KP:>^.(R-X09f<6uNHK\E"hHfX7^eB6V>r
%l)L##Bc^NX#M)eg\5*.ad>+&.%rtCpp5,"%%TgA2g7&#C5M';ZoR:rji$ctRfc%JPS<Fmp(uq!;-KJU<6mE*2M/0,lge9f"9K,r!
%/R-#H-mM5YfE"`KohdNg^qF"MaiFqBf#`FO52bikgA:c5Wk7u(T,V!_"JUa*Hl^!nf8V/-K<#7gYqNlZ*Ke=fA7tm2[f+6f@*X.M
%6S8D\"i#Ut/q<H?"&T0KSG=,ZG#(3AC**1aaT-DE8!';;BYL[C;A)l\NQmm[rDI8l\uqWAEp!7$JhnKVcYUk21ET.2.p_!'R&^rB
%p[Y"O?m*)Vr_pN+NefW$L1h]Vo7>*t]_MQcCHB-(=Mn=;2h*&o)sZ;XNGQ&d4`B3T[`(<jG[WDqj6^#%Lk^nrGpPt6filMXL?t(`
%Yrb/ok0A0)\FUrdmX--[>h7u$pKduH4uunGFQ[.u1Z];'(-)3Gc(0od:l9W[A:!CdRt2kAIgLtBo6iXKSWC02Q+P=jH6Dh%GDA9;
%G>KCq?;bur7*(oP/E,M5b\QUP4!.#T&XkZ9Gu3>mc<TY[O,1@<,KT<NLp3cu8F$0AnE5E1gLu_n7#SSI,@F:F#dRZ!,4*t&lHI(&
%TK2]HQGriQG3o+3WagN'GuUXqa$.#Ip#t$5,HV):pi`q)V-G@[IPA/jp('P2qhcDSr<T]Kf:_2^T91/k:*YdIm6IdiO,1Kri<@?N
%fR^B@hDk4O2[$FC1N,`Nq##*t6Y%P7HE1[#d^P(:T0<&jBgk^7oBZQYH^[+p5hLX*`m3.*pduZRp,>NTdm5=:HM/RmT)Ar#B-6Lc
%,fLL>moAlD@mm(^&%s#c!L[o5e/L2XcUj*T!dcdsld>^ZoD()(oFqgHEmhSu""f3n]:t_C.Z:iiXK,dLAl;#fP7uKc5r+X-n3XDY
%K?!dZVjW3US5`_#8ogK=<mjIc2BbjH$*%*k\Ii$a7s^0H/<,\gH<NnAqRMT]IuB#VIg5f67\:AHZfBhSldR^2<)(gReMVn_ids%g
%WHYr4nC+Y[gEt&cX.$^*\!Et]^ofePWnH@8M>B>rVV7K<RK2Y'2e6!)6.\41eMSSm\gENV(tq6I.p,Y(^mru3A=X_PVDS"_G;BTQ
%B1$,k"4?B_WiR3FB>4>TD-Do7e6N2n\m;=,?a:6]WgK._0%L9c:Yud:O!I#Jd&7R$\fsJp*IcC%gpK"S?>fKjW9;sb1>?c$<ap]l
%O-;+HZ:cFZhL5lB:&Ro*N!(EeRa]Tc'>]h$,TeL,k1\2sT5Uu9KZKt?/feH-4\#"!P)_t;5"G10NH/Dg8688S`CcomPGO:/\WDpq
%]_"DPg9#A0pjO;oU.X<E$Abq2>[iKr);P'$7)O48*QGg,ii@rN"#*;_$8;*B.U./-q&)-4aOecL#s?LA#=Z3`T]-2@=N+EW1.o1@
%U(#jriW<S/VlP&5752jq5;*Dj%aus6ThG9ZXFSBI*<uC,eoun$6pD4tr!,b_%GDnZWssKUp#`4;E16HEe6r;8nJt5#HhaXsF%dk$
%lD^@c,[3T6NHL]](Un'/URYkaT6!!I,3!*k+A[\^fe?\NOWUs:%D<VMQrKU,.kXWTVa>/XX,,tI\VHNjhYg+,BGH9S8FO$8,DT!$
%011s+%1"?:Za9#GY@3/Frf:h3#PB!I5X)(_mP_N;?G/BdP$m6tD?R7jYr_.$0TLg%(^9jVAk^k0iJ(nP\quBT0U2)Mf7?U?*VWd*
%BB+oZ0Z/Kf__$h!IL@q]=WMt'ZFa!e;0D4<AmV@Z1"FKp$WgXS<mqdDmU.$a4.(;un%^SXn:U"oZ9+ESg\s7TCcm"Ko5')hG;+(o
%s4-GkE=(ZuhSK9G^N!nq0G@ZpQFl/mAo@Td'(<ZG0G>AlMUs?l8%re<]7lZ*NJKh(YOYr7^=^NbRtbkiZU)1so37TAXHDNpbZoI*
%(2dO\-FmpP>8SJ?>e'i*WSUms!$%upONe^'MZOMD@3WdZ0L2ebIHO6?n#9[2?p(uW=JJM+N-V75Dep\C0aQ"7R(26@N0(_bA!M9H
%Z]UK*`[($X0ATVp<n3(+d5p68\e4`WRsF^k8o?[lr;,;o!>?Rg^%crn!$Q*cQ^d:Wr;O38AC9gT8lrZSfgnlujp7O)q]o?<fV<=]
%+a:"=I">u#R0d4mV&7UeE(#A_"$u]3G[/!CW!\\4C.P!6X5$sp!:4J*9*,264^PnIWkKdg,VWTkE:E0]]8<bS53%?UHq60h6.V@c
%BP^6[LftE'A4ltu[6qDn+(bj\K+*m0/W_+m0SfFEA_ZFV"u`XBUkUSG/)I<l(sO%^#MCFQkECi_:?ZsgI"2giH,)EjG:#(HfEom$
%FE_6FG*9s@akCj<i-Bm.c!)KULG*"6-G/RX87'JBjrk$%^fcC/pDFV3?_/8IRO>IBs!DPWL[9p!P"1OrK!NDGdL?oi2Y0In)mDt%
%1,p1i>oJ2hi%3')PU).a(<7u]2FugH?lLp*gb?2Y%)@_fQ#W6&'97L3>1QM<b_P9k0mp,B>iRWs6`M+9$kSO]r.n74)&$>uBI_3I
%F7'+b)>%V$Y)ilTm;0Sd1h79$ONo!pUWa?T8OtQB#^r!qZR1c*<g0s+J?2r/!E,`N8fRruF+PL`N/iSh7/=Z7?Lbl98=!Q-[\+kq
%P'IOV,+U>CV3`t:Mj6YoFGN)6S!m=gb:1#)_,\<@,c4o_;u4dK[hD89k1.uN=++p1=[F_sCC(rZFbI[V6<;D"NAqIV>'uJDQUi@0
%CqZgfnU<_o_)u?E>cH,84M\tJ>?IDO/4obq+A9?!P]/ttR6/QbX50hUDH,r[:Y[1\)[>+&;%Im3:jl5(!J"u(H?2SO_/HR\KZk/a
%73c8ZRfh_CfSE!LnNMuJB\OPBmF@s_LMEie#=i/gY?3";.5"RhaJjo?5f4YaEYgZr5"ZJE1p%2V0!Yt8b$?)r'!BB+FCICH^0nsK
%;oh4K@Lh5:'\cQ3d*<5V@Z2bK1*S!L+2WeD/4%U/]E(%Lck09*J4ss(OFAJ2TSk@&UX7b2oq6'%l@JK&Ofccc\Djq/MUQP+DFsQF
%iRCtK3$6Q05c31FXA0gm)Z0h2$LXXQQ)NW8%r:$T)6Ld4_a%6^GVh72&Cp!ZO:Oq#%qLL*?;Xk^&rOT\iX_n*7gC1uWN9&h`.o0q
%Sd>P278H$p:Mh`5X&nH<Q9[p]+Ao?!88eAqYMLB.Y-?Or3KWe)A7\J6LjW^dKX$je`e"5bl$IZC)C!;e\-?6\Q1,S%@nkeZQJX53
%Afk$%!iJ#mBEX%=UDBqdJjAKlpd?J3+C1u$S,o>!Cn'%N-@03:J4j/W7^hjp(=J&\HCl=6hP'n1!j>KDC.eee!Mj+a5aFB/+uGQe
%TLP4oYfma%Y59+T\EN&@q1BJVr4pa=Fj@eN!HFEc+LC_">LtQ5(FPqISh@%**b8EEPHm@g?\+imGR;'ep(_&?R3O>u#Ws!fi`M&Q
%?\Ts6)W8&uJTQ,Z]3WkPY9mD6jImo>l7$=k&H!Aca2HBWFRq!hW>#aak8HoQ;HE"ES0Hsn,c!bt+J_Sd,r(1&f]>#FI/F97Ss.u2
%S7hslK";5LY9ZRh:t:u0+fOQO,,k_Xb=F.\N[KhV@g-Ki22Rn+8"G[Df,/R^Bh4EYbAK)-(d[6#c$Rj-7fFCT*@R?^PHJ4OMPPa[
%Q*>^Wf[F02;o`&1(:l-s^a1rgq`lm8NBgB/Z(g20e:C)*MHo+$*I6T3W-6*FAdD,JM.!KXNXmH%i3JRe0sqLE<_L2;Y_]g#1u1Y"
%YJc`qXUITY8jsF(Z;ELY*&]Mpj^S5%qUOq"^0RgV+j5!#+ds0`Dp7+h-#a,?N`if(/D<,qIMTjbp?^#MUL[259tURO9Pe>H`4R^%
%2rQ(dP/*2HZlt]H)'`AeUSc5)rJ3?7VY1^`S;YLR@%7:tZ_,'g"I9l3$H1a10[3?\g_pDgMD[9AU-1biR'D[e'9A7Q&qOk4HBg8X
%n<>T\$&BR:DR46Kh#DjcrpCP'/&?r?VcgTQ>,A#9!Tj-A1f;hV%1+"0IG!$LEkXm%!((eQ2:rIJ8Yqtg-'s"dA:Ok'*[&]^2;_pC
%$6bkG7IjeLP^\Hp93koB.gLa4Gd&?B>rQCt1/0+U9np2^l)Yj9-IBgdFW*lV@6cs-n,OoiOH<U.fT:W2;`]H[YiZL5#\<!u3WR5Y
%e__h,i&9/sI!jR>PEVQ]'aCIoG1I-G:oc<1fi:DDiIP[H@/rICn,V^#,pZ'8+T254(ERB`S^!9(K,g=]Y=PWrF$O1DBd;[V@L[%c
%<qTQ^Rcc3++&?AU_eM`D+Y@h.+c)3kNJc4f_m"[nRBVjm)BO^S)P5k5]PHo@U'3q3:Lah9$VIL/i%9dC4:mK04@$>/,=4\LKVXFF
%LU37hP)3`.=Mk6f=Mk6:?5s5b$+)b"S[!nPQ<6Nt/??]-!_FUkU9THkoW<jM6fK=SFbOZmml)\Z$*,.1/[:$XP30UAnJ")N]#4_<
%#DC&7"r`O[,d:Suer]`tH3b_5QptFqXJ,"c-VG*.EZi<`1"MF3k/FgiM8`%a)d>W<J^gCp)A6dU+<,G9C.QEJ+k.&o.lTm"!&Aag
%1-m28n3Ah[n,V,TJbIVD@`-'0je7DcU7i&&h!*L#'p+@>QGq$4bk+n&Q516gC7,7s9b-@8b*+(J+A3VF,%_lK.pE;P&2f'B+q?BC
%O2TU3&@Z0pa9Jh]4McK!fiHBp_kJHg%PeucR!F>ENDD?Kpf*';#BsYfAHW:tHgGG.Z/uk(49a6Ue%_Z;GGA)oWgTO)M??2g#Afg5
%\ZUWc@j'3$.3Dqg/0Ah]m+4L$HoEA5"7V4C]o],iV5ChbPRf1Ao-Q6)BV4eg.;"CaGDHp41K#g:MBF2^^skCG;EOreq+=Or'4qO^
%b$R&^D4u8[HFp+jEAh)ne_:L\8ZHKENd*rKeNJEq-q6qU-<CO"/q@WD:_#]l7!50^!<J>B!JFu<M)CQj^pHGu!#cE6K@Hn$KQ%A(
%0-5Y3TX_BpL>tO8&(80%`.'Ll<'1-dM%D0Y!//386Lb%*PaGZ'*e5Q#^8m*rfD1m.SC3'0e6"j6>XW$qWs8VI\Rjk)*gl%.qu3F>
%!"`QD.3B*40-=SpPn-+rbjWH;d(?&pDe$j%Q_^u^9.$FnC9`-d1#O?>?-<ILOif:6"c,<Ua\iH,!skSh$0;8JH*)IEXhO7<@CK?&
%^tA:Pb#Q;PaPD+a>!V!GWIb+-IuR8jJ/DgR>gs)^"DS@6%.OttH:\8@R[\S$5lb<,63.,2E]G>;NlB@i.BJq+#RVG%SAk*@::4_4
%nVO)R_4HXLou-rhpiSh*FM[<K2r6TG,DK\0.5g8O!Z@HhC^11PWE<[<SM):I&&?I5e4p"]+)YC!>Ign^P*MQtWHTHt/TZMc*2EHW
%o9oGODSe--d--FRIS,/bR'@qgXsde'rW=_AI\YuC:'tng0+n$M#>mbIWoYL9ItF6k&[Cs-!,3d1oGDsINL+cg&Ya._^0`!@,$l@U
%):>/Y^5Nk$hlth$#VtS!/LNLf2DPcb23o0Vb7J5N"+glQTS3D1hLZ:D!1IGE,oQt!0"WOQ"4s/>C)%BVaIleOlF0%T-%_Aie:Al"
%F;6oS!!d(7%d:^U$]U1Pq#RGimlZS//$"CT5p2DPGH=>)XG^,+ie?^ZFUi3A3SXD_<rg8X-Q0IU"#iY:pXK:"S+iDa$gL'947.lO
%>)j!%65AchC^D7hrO`[e:ogK"=`O+7=t6-6i]gO)%,i=mUVc_)5^\A"jI+XkNC%:\-,kCHq2PrOK8`tCX&J)03#8d/p+:&c305BS
%"2)dYhloi*1Xik7qC0PqBL(3N$:`Q,JEj=\6li^=S67SpN^2-Lp_ZEn@6;#kK:.h:*E,W>4)E\\/(5Ipe\XAfiNLMFK-cIMHDUVp
%"-G&5#KVK1m@2"XHs5aN&Q9h\/)GLq';dV<X0QX8f*[!hNU22B9]NdB(r65L*%c`cS\a+OJGAm`aOAN2fF:ceOjr^AN$9>dL33J>
%5@[fb`k'[)JrQNW#U<%TEpStEBm(G-WB;4br%:d)Y7*/B$SkfDljf-TF,r9<<rTWG-I\qRfHL(tdDJB`#m0d=dBeM@NQ2L;+-E7\
%(dZnT%dLPDdBNf<2d6WV<\38_KnHg*%%D(4I:i5&0$$pXeWt&4ccOTf<eF-W=DSZlA88[_0*T-Nc8";$,phE=G8GW$cOI;[qM**k
%Ha:nj3`b$4U51ghW+r#oUdaObL+8%6BctTm&g)6Y+u[(9Ue*gMo87`\5ZH7dFJ9_#SRZ2?Q72),\>c&=$JKUQpf?*Fd("--c?V`/
%WAeHO9(hqo<JD@R)%q,B1\3l%/7f3>-,KHmJb=W2OfHop,#`8%;^7GR<.@]_k$0naa!D\,heTf#YJeZ@F/;:*n*KC(Q2_nI:aNI*
%,Hq&sQt@=(53UBn4$kRHLR`7(L-6TXo,l&B=)Si@^Y*:*q/;j*+B8#_N0jkN,hIF=r1c)W/glo1L@>^D`((Y0R>B"Jcsa5!2;N1m
%s4@](1\[k":\EhS26;0Y72S$oJP7NGQ1B_2ni#SZ#2kYZg#SrS4@$Gq/G/LaKSZsk<$8J6/Ad$5F.2]rW]>cR5<pWtcb*HmJTL5X
%^'o9^!Y-DPcr$]9doJ?dW76_m8niXFOFF0U,I<YmHpUfIW`f"1acF7KDR).\IZ?$#*sM#Z$f7()Z)a@i3lF+AQ:0>t,=#E_QcaX.
%Q7+V'A_'Gi<4N#i"Auil*rR4N>.p06L'Jp=]EcNe`j'rXU=F.]JnV?ESO.l9cSpOLAcO_-8T+f&ZPeTJ=sp[U_Ik@Q2^mOn5\:ZX
%4V*>Z0S2CtKstHW/%@*JePC]c<%O,0D66++<7/G#A+d2'r8'u2F.Yo?!KuF4)4_D)b*D(&&-ogll"YBM`ic.t=E5o83m0#0N6HnE
%BKg)1a-$eY:qhVa>E^`mapl:4O`[n.L-I;m,ik8'Lr@PG-QB$WHpBqic0XPg#C"%F7:>K1%==[2E\>n9p%!\rb<[k/*)O6Q#b.-r
%HpSRU9:U)d"s@ZPYpDjSg@Xl4K<7o%L1]%7A\&VqC/m3)4ONFNPLlbE*g^\Y*f,^N"/M'Qq0<rnkX*%%/siSkF9OFJ"j*5PDQ_`N
%<kHCj$<_!^0f7E;LG]!>;ZRcWke>eIj,!II,KNg2DIT$5EV8;DObRb4_j+>V"%(S:ZVWlQZ$ZFA=m^Z:3eNO&DYQ]Vpjp*e;%>E*
%R,&)j-A$lMW&^Tp>a:.-C]o85a4LkB&'5Xq.)n[E"\L`_pO'+"6`gcc_/uW`\r*ELCL5Q:aQt[?2<4j:766%%DsPgU\IDOoAkC&\
%bq9S`iCcB`KR9JfTKF9P/@&.,_:;elboti#U0S;8dUGbtJbT3iaR_+a[$%tg*<0tQl/YC`K?SqbA9EX]06Wiof%&PRJ:q^C4;]61
%D.Aku[4kNhXq5h-$tr29'V7m&:Q7"Z.4]^ZHiPHM^,1+(M`OT&>c8R>72Ig=^7`p&81g!ub3'Kh'F2QTisiBFGVj"%fX*;/rhlcs
%9d3e<oMlDt-ISh9]0L[#^aIHfa3RZU8jQnn:-acP?[@6&\^BZ?s#LE.<Hn2!GD.4(9F'`$<-lZ>L?M%oKAT?)6:r/^#6ctU*F85,
%%O$3@<5,t*&IEMB5q(igWMY(\U+Ri<+,]\!A5Yr8H-u-7p7\WgYmona'='%_%SlCc%L.lS:>9+:^/>Q3)r,'!)Tab@3$Di2ZmE2F
%9CrYj@N-4++9=-V]PJ4l0]_d@<NMQ"Q<]S&EYnri('tkoMi'C+'0qMii`cI[]H]n*?pT3<Q5c:Qi/!^C0[L.YTIC8Pk:=@qCO4bU
%U1.'&a++Ur1f8nMbDj_=!^5&cHcFHoB.\eb&M2=a98FAhW.Mr"'fJ<t52QYKkcZ&T8_1kck1XiO]NS/<p>k?YMom)->?RJ>Me*8o
%[pNsr*Fs8T])Y&,%Jkl'*sY('I4[W<cj0.OlTs*c>GXZ@gn7I\(I1i1XdVZtX6-u;U7q[,ekY2;E#`C"/c>rCmNpBOjdl^q%^H2t
%GprDMB)!"#D_qQ<U7;m#]]ZRY"dP>C\Uqf`.\WLi7_DXkGAVk>rJjeb@+VEL=f,+/@m38s.H]R-kOW0`.>353QX2L,5[r,S@[bg5
%UBnC8&P22"@V_oD=,H/m5uFkfV>fSl6(+;_9&]rGEZ8':JqU2[k*(WG!d@3FlV+R6W-lN@p(lgI)FD!qLd@j*$k-mKK/R)cZY*fD
%V`G^TAt>BGC7CLc(&$qN.*c>!LE$$*%nJ%,_>$8Xldf0R\<k%Qh"SWI3c6"0H]ep,Grk*_Tu#Nm.u"9mq-G)Se:DFV.'@L+WVV,q
%SQuXf-X+!g92mi$h^G$7CcB%2D!cqJ#K6@O"F2%(LVSSR65ddlj2+&?1k!BbCk.8%U3!EpF;GK=SK"790Po@?I[diQV[I`Z/UNW+
%fM@U=>n*#8i5YgqTIg=uU\7`T6:;f[g8/%7SbPPdbIu._d>smi5hSC3p>?%Y2[[Pd:/PimFbK#OOMY3MlI0<8E19,4$cY5t*f-t%
%q@S#CG'J8bnLECVOjuW%a0(%UQ&b'M%saN&=;?AVMJ<)B='rP$8)j$Ha93`m[cABQUg&!\l/pPg4tJ]pq?A.W;?f;rh8g2hm=;'+
%4PbbQ'cd*q,S&Z<A6C#QOY$n_<.U-6R3NE>-prS8,@FYBQ=_r,^"$(*Y9P+Tf&GkoEXcRXkF4#ldJ[C4Eao)#c)%3-RF1grC.%'o
%UsYf(Q;qSGQ40EMa`drp_]17r.7rY;&2lhfUj)$hB%[/%ZINZmq,ftL%7'USEL%%Fom#u?_T\r;hQgsF!Ws=\`G1Qq!?oK1@%:[^
%lk6tbqH<6bV:]2S1tn3nCdq?3W[Tj$C,\M;c);VM+8/Q/r_T;u&Q.g\M@I@C[?HQA+L`&SLffOoK-A2\Jo&bmU(u9;=2qiaEbmW^
%TaXCke\tugj3YF`abEF1/btLPA^&egHZr)f_5),2?:_Blp!=s'/3a@GB_Djr(*;h,mpu;4PqeHafL3YuC^uPEC-qN^@KR`G<HH?g
%E<ao4)riMEYmGqlfE@-HC]_D/1ROJ1gfqLU(lV".EG>l&L];552$)amRK.;A%G%=J/ruj[!7ZcYfu**5WMqbMl"1F)2.1Up-)]=E
%IH\rNMqPLob,r<&/:R)oVUc`CUt-r;K[iMQ;enkM85r<cELMtmK+<uqel$;1?Zto/_SZO#[EpJ.7Q3RTCL3mROMSp36=.q#H3^L-
%2%[5cir;!C#-Zc/N<n%P)Lt7o0N`lD<Xqq^Ak'7o$-T@M`qi?(RSqD#o4fIYGr62pleKlF=\2oVhPlT<K)oZn#j97lnJ%)Ic3_[p
%)<G0\PD#rLTW$^$aD$%W6]=hO6E$'fAFfuBcqp9X&$`ro*>]tt&t2#"7.-q.=SUbSdQN753.A[t7.MDn&Enl>P*,!Z=?kVl4iq6d
%&CA$GEgX$RJ7ppFX@:\Y'&aluofU!EE('+;*!l9Mcd^$+Hi0FMUJJO*QM'Wh_)U66!#@e=M@:0`5<W.A<=('OT6uHVSW-uC^UP17
%$;9t8X&?A?klCF/HWu^tJB(22^DL=fKHn5"r4m$<PbBCZI$b:1M$>a"<FWr/5Y0p\iXZJDB+d)PphtVM&#5ki.#<8ZO/rr8&C7\Y
%+b"SqOXrCUk%3(H+r.JJdS>H_L8@E4?.FgpM$47"P0:rY!F[(mP.YLt(hi11K2f[I?MV:Ela4D5i@7'DaG6V!HBOOOle.LIjcUJj
%+AFZ"cd.3Z25\.@Kc.H;joX0jo24g/U+F)[V<daXfp$MO`s=Up<YN4tN28e94+:78X*6$;+&]A^KBsdp%@TUlM[8N&Y(iWOd%'<F
%i[(AA(I+(r[,XSi3m\L[8Yh9FmEm/uP>Z.kPTLH_6DS9T3r0D3oIK`DOsd<pOclrbZ:8HL[g,8!Bk`RC3B.oBnJ:1uIQ*F_qk4?K
%^YYK#^ii5H26)YX(mN98`YP-K2irb_7moa;cJ6'4,Z2PdVQZ]&afUb56$#R54*,A(Sp[sm"EtoG7f],&#=.>C'iIHO^IBF-LS<&(
%#D=iZSdr1H>Yk!*4mP2toIrq+;PdIl=bqF6n>F-ahX`?'AKjHB\51-F)rE+ba;jbK4imp0jS(WH3"YIeN/8sMlU9f_L;8DY:&D`p
%eC0Mk56F\-7=\@lM,huiWSlsY"/O^e+G4kPMNnmD)+9<0(No_nfc*/a:+"JA#knY"]M*d,K8^[NT=p3iK`I^6@&n9abaV='3R9f1
%ASX+qg8@PX)khc0ee[diB(i#PgPOmq^1Nqt&`&F'HWrWX%[P63SH=[nmgQF:6%1:g]8F[Wn\`&&D!U3<'#1Sk+Rm&/LC0?`<12U:
%TCT!>o`0]f%=-rnZ81NP0Z%E4/]h]SIm<F2a%)lOkc*gk>^2km+EEif]<e#<>G2Zb?Kcq7n05r[T^%0Ue0T%,*#"2CB@N,]TYs`1
%RS2KR5#r6+MbK'\1m/.-MTgU(9\M"ZB2":?ehY1rcOf'`o0ZR,6A>9!pjnV\f(gS=_-lGp?;f_Z+<+97$4&"i$M#=A&MHVZZK/Vk
%&#N!VeFU;#fPmdKKW3@_eVaim9F;uWR=.pb&Dr>n\<aiLSGA$MLmT*K@u:S$CJ#06E4=4iZG]UFTd`?6VhuU^Rfp#HcN>J;++9e]
%:&2al-;OaJ4(?G#+[D;[Ul#/7ppf<*(*oL#(lK(H`sgCA0@sb<bSlQjr_D<m#\:I]BrTN2eqana!t.RX7hZFnC%::O$]$p3:q1bg
%F09d$CB-"jjaLA8L8d$A!3latPUg%T#AX=c[e(Q)Ppo]Ke/1Fo[5(Nf^`J@kA&)geR$NeX`#K?a:nF0eA6T'Pd23,pBrUZsJRT#r
%Xc..Drm6VUBF_hb*]9,>.T)[E[=2kFDXued)0X`(JIDs+j`Vh:gJ6$+Z=p9:;hdSJZ\Z.0=U8WL%!gEZneFV%8j)2l*/ZrN*bniU
%4TLS'fgrQS)4QM>g&hptHN6UY3S4Gt"-l'+p4.?\m/bAj8AQFQd6rTe+Ls)K+=LF/dklKqctMf'#]'hmg#sls5nF'DYeWN1#_4b@
%#9\ZN`?QPgO^IG+Pi3?[$&N#P=U7n.Q,$,,2NgqGQ^3puO]X#p=rcTF*Y*2K(<AlD;X;B\?&GU##&Q;UU(f:^eF@!8ku#4I*[i3q
%.''a@<hus"5a"5UTpCLlZ,QQ^d04AM[9sk[2ER+ak,@V!gap75j9m]%+'_'[gh7JU[Y\P35(ep)"#7\9Jnu:Bp9X90`EPjM_"g_7
%"(sCrJ34B8>!Ei7R_%hj!?-a,d(I_.V22E`<eE`\=IoMdk<L'P*)gp7*UUgsj;(^OBG^`fb@GK-fSW;&+#lQ0Ep'/ZLFN>/'kYkI
%`.h`j7Ls/5*[7Ke,%4T[$3EOS7OPB0Wuuq7HU8!`oCT#<5Z9YZld/;5,"O.l`;d0JZ8dq]JcRd0FJ?hiO'4GqOX33>&#>,HY#0)T
%ItMoQ&T5ZpQ&HDQB"uR/@&Tj#;,ZA,MesB4(.SXa^L2`e<XdMe&A*]/OmMsuD`;3a:a4bIcnF7)aH,L";7KkHp0Pl<C!tO2e.08X
%o!?K$KK$dg&BQ_*=Oa<*?F;f[(Hn@b!MbF[&a;=EQ3fPqer9\tFY-B=o's9didb5d!Ft.YeK)+k[Uc)k`J<uXd>a9)/"na;06$OG
%Ht0f3PXf=SN#-#/#X=4:Jp32h].mVclSIS?&2RW$M8m_u:?cbPCr"uW"1lgK/9>.QJ.rU[#Te<-K1>q:M5:UKGDYep@&GLH5aIqM
%K;E>G[h&l1nr@Wc^]1lI=Q^m%7"k%11aE8u&RoO[O>t+FXBq?OTI5')q*lpC\>Bd#UnfH0i:NTF'V^I*\9K4%Q0n&.kD`o0UPdD,
%(T,$d0[NiKDf"o(dCgQT="al#1GOHZThF%2d/KBkiJ,_CL>9-r=dQ_Z1NPa`cfZi!66Pl&PK:qk(+>nR4%kc'LCH",R<pQg>&NY]
%f83<2,B,uu]l$AR>N+OP>kAjS1.1a^HOtl_?Q>_ZY9V3K5d#.fq*@=k)@9j\hWVlKK4IJM>3"0aE!H%TFsmtmg#8sC(hoAh](&`6
%N<5/OS8)MRj$6ST7$(skOJ0rB&l\#3<KeY'4@[%gFL!4o==P)K#2E0/Wd<DZ"4E#14njKAq0e)Tj^LuI-g&]8;?4POX^&`HA-UU9
%KuN9;,^KD-.<(2U?KI+'9F6?8[@Bj@_i`6b-N0ZiP?lRLC+Ik_J&&d:j=kc6Zt*c>:V$2NP2_>*s#HQMX[%i5'CLIWLg4K95qk'C
%%j[Ni3har%UhLo0A@sbUP"*G55?LqR"YtD>`=:XZQouET2Of7kYrgXG7f"gpk:6$:\MTJ/U3Al0MV&!,*#:cI'0/Y7/V$Q^_usU\
%#7)(1')08\Z$k./&J=S435>dF_okHaGoH4RIs(;&&"d$2l6fE#=sRTj)%]Q2%)+HHBr":S2ilMs:,V,/Xd*fgS<>8&5.*GikH$kT
%C*akQVa`4p4S[<V,HS`ghIgen!@cF>p:qcm$f?N:%rmS3;hgZHiW.(.!JI(0=.`[_K=T"qGS7cUU->tWn&V]j;kknE;,<f&j]RTb
%HtnmV3EP^9<N6"E37ToH3&`.FnSO(BeZ_(Kn>T/?q8KH^kMT=oa>PS>E2l'2)f_lT$D!R"l;VguQo+rhcW0887&LqLe]e^"7`AT_
%Abl&!>2V.%Z&3QNia3=<MG#f=>J+*SeN0PCWs8&s-^AdGV*dZ;L-:,>CT9K5m.(EfBNGaU1-gk.EjDj9=t0Q(9PmB*-*daN\JlcW
%Wn.J27mEPZ^1ce2X35G$Kq2YiWJjoV>",j;'Q;!B9^s(-\#`c\[GY!d36Mc].e@Ju&bW+lOF:k/8rZ"lFCC#`C-FNDQho3^FE%\n
%Wi:W-4uIjne5fF`iPQHb)`u4s2/KDuT:4#4,g3k*T3;BAVe2Ute:=d(=1i:0_OMYe]P7HBSPJjX@<8SM#<+YP?8]gU2NH&3n#$Ao
%YR]%Q;4-9@F6OI]6isYm/cMkI28b#E/Rmd?"#*7;Q<=`m;[r]$_qiH.n7j$m_U!'gVja/=k#DN`;n4[TWaRf@>`tR\bn`VdCB3Qa
%-M*UU'snA2=L5+Cab5H!Yndp1F99OD[Ffpdk+d]5ULVQ::E=5rC[,#[LcO$1W1-*RopB0&W,bXTX9$Q,UgfHqIPjWI?S-lr=,TUe
%6(Ng\[7]Rj]lUrW0<.(a:_o]0@ZE<G-d8b`C";Kt,?7kWl/5W!Ae.;HZg(VMM##R@%">SiZ<s_KX_RI.3DK"DR;QJ_[48A2\9eWa
%)sYrn&V_+!$"WrjZQmKZ_6F4D)a1aN]RcZmIPph/V(FaZ.N[<.!O6,D8/6cI4_>G#WHR<("#tV=+]F%7CCr;A=p3N`L0pH"3nCrF
%_6Jao=1K\ke(W*JLi@HOoW2&Mh`3m=gTJ)tiFceFYR^%G2^1EOc,t^6P5C5OX_Ns2PJN4)&':u6Lmc!_863$q4_@8e"R+nXIA-KM
%)k0;DO%HqM?4fHSdqRf/)p?*Nlj9Uo_:.#1h*6fEEU?P-&!!T8_NEb]]@AKOS856_%oiL905a#b5m("X$nQ0_T>/#5!X1g>:leLZ
%?.],dVP9T[PR%H20"hMk]/2q4?R(_Vra@kd&V:^YaanL)Tn.Mh1aI'H/H"_^%Ns@\=fbI0iWoJ%;+,(p$k&.h&bYeY0TEX5/\D-\
%4MZE*'r_bU,[j=+CneJ/,,?[1r^!Eg>hsbcP7.S'lp)urqVbun'`D&A/CVVpiO<i()8d%t*[''*-]bYdjj8r"JPb$3j48t?@s(<k
%;`ANu/,HAOQ5al!*t?g3EF[+G=3^+X1ClV:a90hL)aW?<5__>k8Hq"#XUs;h)qt^;MH"Qej:M4l+;L5BZ3Y$;i3mBF/\T*LVcNJR
%/I84S=m\2i<fNFN&YS(hRlSQr;"a\=Ar<+42tMmI^"#lX\umHIYU=M*M)iIkVJI8[B\hRk%!Y=WhoI,,=^s$NN;X.kE[`b*NmGaM
%Crp/=[UBn!mOgh:40tFX.&@61*DIY"I.Q(RX`kmM4l'p_aG)f&%'YNna^_RlO_U/Ci#.6>l4c*OWs6>1-mhp:!f4BPq1(q_M([D)
%<-sKd7&Ht*6c]K5Z?h@o79!V<pQNAgA_pA&*Z=:DXRN.d'%`jpQA?C,*?['WPq+;Gl%#"EZ\poH`d1PM_6+GC6\>%\7tQJTm"6S.
%_da'bpI7!H9RK(`+_7IFC*O6O?hB".AtP]+Di"2QXCK`>L/d3p@b'!cj#6\GD),[apAeai_hCi#.+J5Tlg1pYL='ipOJMRj#AlD1
%!0udrVOUE*2R(46HLC-3c3rC3dDpei3n:fSZD'W-lDfA*C=,2GEpCdPR0l&p$@_R3`YmPCV/Sl,8jehp\hqJo'+sir7$-4f5irKC
%(tA>_0A%Pb;e6D6;&9q,Q.#!WW5=CU>Bb!$:9l]dj9q'<:1pf'JEf7T#l3'lE+e[HoCZ\?@$K]uk\Ri#Gemc*,*DZ?!_?fYKVP@g
%#o.]]]`c_[fJA+L"!7[c&miMj$7bKf)$l8H=m\:c$beVUhrk:d"\_R*?*[?<KY*->2[RFDRW.b4Qr+HHm-%H0!@57k&@oS2nV,4e
%&e%@=G<'7NYF;"X%kJRoPd?Seido`FPoOUb_k7,A>Wt"?@:U[B>#8?DN//La!>Krkan82h^oaFUD+/-8.p=!]M&+SI.Kq&oQDtU(
%nk#C.l?c"."NgYp'r%8\]6-Pf:WVb)h[skU*^Q4u+>k0+)o6GiBZi'W)mKT21>$?#4pSCH;6633h(XM^*_SEpe4Vk;nDRSS`1SJq
%W_-B8Q\l)W4\hHb2T2H\UO[EC[6nOe$7k0]kmf*J7EE]j&_Rr4+G._<QkV.8T0d[!@gYC-+=f#M]GAJ]_d+LrV)6Cd!@?<Mc0\%j
%.T])rM-=fL^/Jcdi-GAAiDV2Ej$8]Ir?U:n^gbgi>`leZf.+TVVOnftNutlG9>2;(mPF.>oGaX8;k;*S;WX`6^!)02EA!1m%gT"M
%[%]W^^'jic5H(+aWmFP0W=]4'j^juV7EgG*.0hY-/K)sV=WaD*C(gD#V'7D6hiJfq8nc&p-[q(M*QT8_#)XBg;H*nZPXIsSr'a0g
%]acB#'M.D;90qXN0(I(ReV;jIn/VK=J^W6E]Hl82\_+SEad!+:W`O@Lp;I&)@)^]?jT]aGeQMsCLrI([9FC>r7:m.0"#-&RV%i$R
%\JL"IGIXTP4d)Ka8W#.0!@,0rW*GLLE+<?D8r6mtS9g.AdcgdC>Wi!7$*XQ<8%D/We"E%e`LTKT"<_228"TLn]qYHNCNXUW$G5(;
%18P]/!E-$%C7joii%_$/g:aPT]K8/Bh=4H%O-"MfY)OV9!Cm)-ZCQo.;(rm98Ob[``[0lkiS5:eHgk;n5^bV4C,ujAGfUJdX_0_E
%8Xd*Vpji."O!'o+b7f_C1ZNV.EKeS!DNo0>fl5T(71gd;S!b;/5tf7,(',V]ZPhM;T9OW+b_u]rL%!6EF[XJV7tMWETXiYU-E:V[
%=Si6L`c6&-W+`%T.C/0K7Q$:1Mb.Sr*""E4Wi;0*B<"_3WR`*A"BW+VPn,MT^NHi!FLL%X/ft[(q'3tH!LcV47\$+^[G@3-`be0L
%-;E2.fdk(NdB"2s\g:\=U=N,a^*[8fA'g-MP<!)*I,e>d,@VfK&`f?F;fflK*V?@"82?<7,h=rrg/8$0eqZm)paXF1.:(Cu',Sc6
%LBt.Z)775_ED`m/'bOn=#McJ-Ft?1es6/`lnj!>u[(ua`Df-iPH*B(YIUZ@2H,-I@PI!'qY0]EX@:tgk+RbOj=2.OdTh(GQAj<gD
%[9?$\eu*5[C^gJUg`/W=#\[![g;<'j&],grm/4_cOhn)k9ei-S,F!,*oRYrY)C)\F^*@%,`-Z2KT90EN'&Sg?,"u*@RT`(@#kQIo
%n0&EQ,&L1.E/l$-f=e!WY]_`5e@L7G+eM>3Z:NOl>eq>!6j"#FaFOWl4cN?LPljS'i<!=LPhU<j6^Zk-YqQ;"8IRtR<)o80o/I.e
%nu]KY(BDOUh]5Q"2LCRF"6D?H+T`F5@%]q3!(l18TI>I"a.-gY(57;3)mohqEaE#=e"[J/<L^BEKX'T1_fsOnJ9R=h;_C(>(rAPC
%(Ys[:2XWHd!Ih->VZn:m'OhUT6m2j2]<2uB@)!aM&CAOj;C#Hb\f).'Wj**<n32O1=U5'UN]jZdJq3YK6=V/E[L*q)!.^f4/@Js7
%l_G]Y8,9(6>I#:p&-?5?#Q`tdT\+KIIMrhR@.=KIFrGkg>c.#r&[D+`#jQ:=5U-Xj03.Gd/cGb!`sLjY9YA^jJD`s(5_pP0h]n;0
%K5rAPFL-S"]=@Ak!5Y"$!tb1Kb=2sB#Qq=S/OgkA.64OL>VIM^0STQ1@rnDBL=Q'O!*K#I@3PIi?lXOo+EoOdpo%+(M*946VO&YM
%HN;o@ie&$TB5+A>Lct5:Tk'OhgtRYkVh`oW.E+D#p0^M/@?3R=QW/9gYm18A&(^0WRA@3S=ZA\C.ZP&faCEI"R3?B=8&SjI,08%@
%ZsR$2L%eo-fE6Yjgbc6l@qSb/`1J,gUUceqjCfJUc(tVgL`O[d2U]LtM"H'RUBaf%DB]Ua)>#GO7-W,:#-s13@MbC:8=#D'3G.hq
%0uq0cJpp*`haXnt\<;BL.[;C*1)d+!;<(Y/oWakEFmnO?>o?<\=813$E^WVH7tPGsX%\8:"A%7GA:oT#Sd9@/O!0t?"/&YnQD5ll
%&`f/t+B-JAYWPA4<0reE;gNE'1GrHn)%*9[%gb?`jQ5ZgdK<dQ911h)/X]R&a;8T'h]3"dX%I'"-1mi]5?W6"dGmJ_l#BO@H;N6X
%?(@?M3BaEV]O/bE5pZ#$6\H)H[$Nhl-s;=I@kl"UV[)LKYS^:^j.XVUV2QIbcC!!HUP]@@=9`oR:dPZm%NYln4goa(dGp1Y)*O"5
%N1OZU'JC^ic`qgL7RfA9N9c9T2je`qS('?H<Pf25Adp2iCYK/q5q=ngl;LVECi_ps\U(p1J@9E2&K'?e)s$R.Oc80@2i2Ms.Tdn9
%nd!6uWAF39L3ShH]$GBRJ]no<?BFPVA*edu!^EBS7&6fcR*e9eS4GQ]kWqmi:G%`0.9'oG"%u\ZaQQc1QHV+1(>S'3Qfj;K7m]\+
%K::2oRYLfU7aJ(Qh\]7;&EU):(A@$VR9&=D.Rm/&@*q<2l^m#,<[pe/<C1(T:T$#fLc4cuVMjJ/%=Pf9rZG[AZu-#1D5?BL1Kh1!
%0dAZ0Cb#T*,F[F%f*19UhdL=>a\'t/I'ejb"(m?jhbZn-29?YbNC^l(B&iq@a\.@N*#i!c%hTuRKELZ1GU<i:h;fuC-rJR\p+T%k
%%=dt&"5pYuh<=t,]&G.-GebU;E&:D@l.=W43ZBJKH6cjj9P6P:F"$1<k"SD\Pj'/h439rEd;]m5>OMhQ>:`JPG*X2^G7G,#qhCEc
%^gp*$GE#bWnr%nUl",Qr">#lbX%.\>bNSQM3jVqNl<aP.`RWN%!JDQ-$U,)Om4,qP5tG9)qZ;QfgMj>$Ja,O@1@hQfVAp2O`rY`E
%S+oFSa$Sr0+XHbJqF0V8pcSo)P2SkX\;_j14_WVD8enY,k)u&sbbIH0^!IW:+$PC@N1T!)a2\4Zj240*Hk=/Un$(gS!9_'#`s43U
%cl.p5-Lbb%G^g'cQ1hL.oN@>fJ)<sn=[YCkCP>SbFaS"EFT#%XfO,?<8,QRs+,0sV8&WLE!MIH\,h@P1q`mC#Ef<J3`EJ&8r^4&&
%Fa_UPTJG?gqOjgOe9J^=_$!]Qo&0?5AJ!/m!Lh]_<X]gro<$j?iB-3F@h'.'a+9=EWZN]]cB"b!Ccli=m4`LNpc\bSkt?U?;;]Cp
%lAcE@S/O4?[>+N(b'Fs>D.MXm'&Q2Eh"Pf=e;FFN]LeqJNVbnqZ24gK(L^%WpAmZ?ZhlodEeuIBI2%q@:)XU9C(2f)<k4.6%qG8t
%,TNlAO,02#_nk:2L`ecEJ7Q2uQ=FjDlbTk[!0/&"RU?BM(6U(ZJ="4$WWsg9Ma1m*Y(@M2]*Eul@Ms(<ORsPDA7#<[;_NG^#UBGK
%*Y9Ile<RU'#jG5176ManV%cWH1PG/%Lo:R>!'002au>'!k`pK[#eWc#U@@b(,3EQ:%nO65+`Rb._Gt:X,o>s)%[t$Nj@5qX]ibK:
%-U-^Q$NtcB>EN[Ac&Z!M&[At,"!i65ZlZQ!J?4&1j99Bl)+hoH%u79gKrc=MfZY2Mo-uQQ%7<.V.@PBE32e6-J#<(ANG*j2OTks_
%a,NhCO0tdAX/<pfMu\`@9F.,S*0@E_C,<$Sc4CQ!0/OjT8Ccta,-NH=X*Pp5@o(H0<lRF+j<\0fF9t&mNee*OCIpW1gT[["P<TtJ
%5tI9`0H-'>?rK!6Bd5lb\+9.KWJZbQ"#>C0V%TQ_df$T^,GG2V#KX+DTm>H.'T`oQC&o3f,hGlp1'l!A1LV'!#0,D`9Bfc@<X@5%
%(7"55!$V=*JQG"bYi3#2"_05G'7nM'X`;8Gp>r+R-_#o"/AC-S6sTmB8.KDX8*(j[eenUH?LV1]::50t[,(41:KQ1d!8EIKSj<'&
%Go(j$Ssfr^%3WEcVAh-1l4S'3"lX?lmC@bP+a3o;>_)>(`+E]rG%k89"fS/rRR9aM&!N)48>'/<h&[n<Z7/fn%1#2c*DAJDr%jI/
%H6oHDJZ(#AJ7LML18AW8qN-;5i/)g'b[si4a/-3bNBMR7H[W(HaU<BF..KA`hG058XQ%R&,YK6$7eBAB^d]+oScc@K@WXUR8RD]6
%^BF5'`/#3PV=tO-%YX.9HQ36E2u+anM8O:(XL86T]cDiWOPn8\&L"l0^`4$6:P8.aDAnZAkY^HWa:W#,+altQ3GCR;7`3AARaRQl
%PnR[3-:eoMaVrudLi-a#jWuL@i?>4k5ZRM\q`5;Vl66Zp#*hClA8pLn,h9qF9KBo9j[e=ZkL;m*R@$Q'BFXgL9aWnTbao-[B4;-'
%&G(IAoLi3@<0(QaRcem-+s?/F`)n:[nPhiV*He$qPdMk[TH%6,-LY@<;:7<04<,]=+(L0rr'ZFO1YB9!%[/a9f#alOP/97$&3EMp
%O=+K3<LD"Zi4:<!FEUS!25$K9g*-fUs$IO\"4;Yi!#FD??2`.`:_&.YJ.PS<Y"<*-8!F+?PJ*q2UlQR4=?%Jr*cd&bhs2S,*J]_s
%!iOi-n@*XB,RG>+@Y>FEYULaW,q!%k%4NZ$MefR0&]s7X/Q>Sp"t`q\PM]?JV^GPV<Hons,!k;q8.:d6koBaS4/bI,"]b#,]FZ[*
%"E%4mgiNcGAuJ_CS7Ijhjd[/"j2;&\nIuMJAbJBCqc1rZe"[jOAmL\Db'XpqLr>P\[%`Z[[LXkbQ]U?b\RBDD#V2g\i&r;njUd:8
%jtXnY$Is;WX;iASQejtm0_=hAe:7atmTPT#-i%&s4NYSM[:SP=BTgE<ETPM8n*O'"GbcUM,>^(%EoKN<"`gbPb?0hN>eSVqX$Cn6
%A->=/:P[0#?kG)<1J*Z!>kDlU4n?E,2_K0g9$8TI4F3hb7RTo`M'2+7BWB),(@&b=+h^[kGEas7oF=PGq-A%4p!lQ`!4$EsA/:4R
%9kfF!nUk,\["5;P%34HC#K2B75adJ3Fk(<:\ia:;PV$:p3/Oa&Z8hDEag$LnBBt_1bY8jH<@n4KlB,lE^hBc.<s=6pcN%%S*0XH(
%*Y5Kt.>Ej0<\HFo2^:k9Kuf\f*q9l.J.Gd4paWS&'H5IX>lgUDROT#9B\i!n.,1O$mXDEma[3n+Tc>affMIJ@%guo>IH$_#8%QJ#
%l(FM5NlbNpJ>X(%Fi:-Z@U7CTW-(]kBt7ci@>08<V+!RM=uF0A"oe+/hX&[5;eh8Q_[m*(1[qt1.0/uWQqflT@aqOh:[T9g$u[on
%)/UO]+Kt<5Q3N`OV<EP*?3%@01;@1Erh<\^"L=a<I,+ORfFT:K'1#'M;n)rU7!iL7']%.8)qd(Y)p)jUa#-PbJ=/ho:OpA6QVu?%
%'XfGEG)7&C"b^%)!8jZ6M?!MD!1QA/T_<N"iI&T_;LZ+n#/UqOK_'Cjhh7S(*)KdF6r\iR)uT86+RA/gAY[XA7q"@T"3Yuu\mr(j
%cbM#sqMn*LJqo\_VrB9ZaFTL&&CPE%0R.:@*n!Ucd9=jA=<^"Jpa>m?Lg.Jg?ilE-h2VK$PR\jD^]T'6&LCG%%gWE<<)KEAYV/lc
%q8(j^Ck@d(Y6#jn0-[s[B*sL.1IV1lW&UePHW.h?$?7)/60Z`KTf('5V=UItL<qR`YMCF66QTNd+JpaL89I+QTJ3phT4Y?3KrPtc
%^?s$?-jLcf-dq6SVK?8<.L%GUMeM+-c8afO8Gd?o@TI$Z6mu<7P1[QEnO%`X-MQJP8H8M2c,k]B'2,CL(W8LOrBl!M\=b*l5/c5u
%2\8^*#-82U7p[NL/0/9(S$30h2nFkDT^*qHn,SS3Isatb5`"6QfLT/Z8t)5<4Bs611?EHM1#[mQPU%l;PtV2EdU)iFK7:inA[sW.
%o5sdj>rN[@Th#t8W:7(mE1'@f&P?`'LcdC*%4uuNAF3]UBNWS]5R/L*0fJ-&Z8B6?R%eKWkH\>Jdkr_:Xt.ip)hBhmHF_+8MP<d(
%H_d,.LEkflQ'F(#G.B61hK]h,D.PWa+*b)oXr6sbNB2iC\Zd^aPk$!GYp5.YQU4\0of!8V4qkC9k)Nr<<6b!X:NX_[9K@F1:kO1R
%Y/r7c)KX&p`\d(ai0C?301==q=3[0C8B\!g7B[]rWE(I4@pV0G9e-"E=7/>`YP#o3q!bS/b'AXinX;%H/iaX/Sf3P_0"D>(E<nGY
%2M>@sQtHI(k1(Qn`cbMU`i^3?"n`kp6Z)C&d@(G4`Xdin1[76T,o8jj.%mPAAV[iNUDMpH#C$tXRjBi6"$^WI^6"4bi:Q#">]TN.
%*.K;%ia4_"8N0C*qC_$_>9I-r9?nQ=Lj;;sOJW%Q*?G^gi&X6JJb>_5kg^t\;olGu:K_/]+W1l5aZ6:P\Z/M*k)uc:h(c_lL\gCA
%'[p<-.'\5GjJ_5;`?'*oW`:K)I<agL9Xk:#Fp"(Jp.m3r;7],T8e+Mm:3FY.`^QL0LKs6*Pmh]S75@%nCD2JIi-Jd"Z^-I6CU5<q
%pJh@G+VQPAV5@"4"aUFW:hLd5GP:@\,RkuWaGOmqdW\V`(8lbOYL+j?&a-q8nmJ?7h\[G0I=EU7T_CdO6:YUYL?E'6/$9A+m'/(D
%i_=Vgp0_5Il@isiZ2*B5JOp2tYV30Eh66Y6C68jtd2,k1m)=Bm[HPNjW^Hm062?]4m+j^tU=92;`RQ0l0)FS!akU*->f/)DiiF@7
%Hm,/s6,C+pc(dVX+5SWtA`AA\E+qlrReF1TYRtZ$!QiZ@8Ac:a3m!7)hQnnnJ;WE<0j=\*4=Ol*FJ.MR5Cm^XK&^C.KI>N7=Q7F/
%&p`_'>>A*jCb):(X'=b9kV7Z15dPf_](h:Vg^Xh"5b=]H`pM,c/D2Bm=tbiY2@+5V("U@4_fF)48>RVpU_(RWj#OC_*m'90U$7om
%e;*/";YH=W;70bu=D[eceX$DF74Pa(/Mn6dV:W5UAG$LZ<m$15Wq&^CgQ]lL<<(.9^Q?9#bQ-Zrc30=,.(n--4rg&KXm=6'7%hoq
%F`Crj`UG;6-0=\H]osq'8ng4bl;:DXhdSOn^SsY7^93H7nu):b;#Y=OGjQmXd,*_814)cK05h>r:&e$U5&t01Ci)"nP.gAr2]NQf
%m=oA1.D@_I`/QtR8>F8^cqjfk)\QcJ9grjFIW:#OR;D^69&B_;6_m;5+OA!U\!(X:b^,/13`tp/<$V7A!E_sJqRWV_TJ.KK2$"s/
%>\550&9Vd1GN/QL>ds:o!7amHU6:J[JrOG+?^@cMRcPj3CdOtVJX4B4":!J^9]nZG$d1sd8$"Usial/IBP^,fK[.&P,)"X1#A]CG
%6AX7EfV?`9MRm/'E_+.6ZZAWq"P!&^j#i>ueOtOlpc(SPYq-2HHlhsVBl652p$Bdf/GN%":G9dl2PMst?.,\XmFa@B,I:`fBm_$Q
%Zm3Y)&t3R?Zn(h.MC67SO--'kE3ePm=6Lak^7"@<B2Su8[;`7*R\$G*es:9"4HiT(o/sT\9!@MG8V^23CjZK/#BQgJ/nanc94:><
%k_@;pLgZFc\^WbWfC3fRO&%(%;(AZiVii:`<9iGr_+l9]oi+6m/A6Sno;8QK(6>;@Bo8%8,mdqc@gNn8/>c(d-"C7EQ[2NlO.K"C
%%G0]m908JdfBPkH/p0o?n7)c9bEbU\lER_4*co[L"`*sN?0A)R3gTP?lGIQ!<$ZRN-$C^0Y4(,D+@HC?,DAe%DKhR>`W=[<M@W*$
%Fp(sPa7`[2G7B4dB1*i)f^*-9KU*W;?,M6RWRUSQ,bpg2=%c1BHtP[RmZ3eh!4W'uH9ck2&`eeqVa#U8(,PJ@VkH_GOA1b$57hF_
%E%5_+W`P6VV*=RgCH[pkM5LtO/XL(IP(S'1p$(lY5&X8_Y=(c^j$Uf-6?"h)93=Qd<1F,I#))3>e=/W+X/Aj^,0Is*e0UBq:F-9K
%p5eO=AD8s]9=Ms&S4Wn6^caOH7>+'a%=dubL*hraBC/M#KO'9A*)YNjr&4G!(k=6u8.pMm3tWd?N^qQKA.?hgX3dQa(s.pJ5k^R5
%`,5o,a:8h><T?!152<dY#Ad[INDqpVDA)7G9hgG1T`F8\?UkK*T8HT`>]]g4e!`3Ver<@]18S1_'P4"Z&1[>ppd6hffYrNt:tLii
%#=NJj/]WpP0?Doc)8BZ!RrUpc0-\Ib#26Q\kV)nR*-;&=6g:!#pedHYc4ZX&=DTfK`t)S,\&KllK*kWg^7=-B4j4]!0SLK2S&.^.
%&"-A%8H^TbcTo\D"#=CLFM\%9]:P,ELIEa,3QpiSNEB%'h@HBe6d/L,2I\B`ZC=I2Ng6tL.Ng0O)DoEo^`6;NJ4KYA(QjT)98]?O
%T&Os%j:"N,l&+/@eq9(E#EXQBS.+s^*`NcJaea>Xo"uNio)<j\-'\`Hc18bgY1kKl>6rLE_]#j2XM-D3g',[jZb7$oKSMD-0-XSE
%iW)!^0=IL4q'^;5AGJ7SBpPBtRV)@a`3T:bW-^i2:#?%>U*O@H@Cl6n/Wfd<k+ka6'!hEZaJVs)12g)AiDd^tPks.'jl_Q%b0@.m
%J<8jtI]kbDq14O&'WS(U!G5hYgp6jJgB3QlX^q5JLh?Gdd'NW[O=t*pki4F=ns/\i\C<O5?Kc50+3j"sP2\lG6D,$m7S['OT5P,_
%CDs;eOM5V=r4mh\S;>jlHSlsT^L.@P*XKR8@rr!</f$M2%AAjn45rVj+):&enJ'(R@?W)`QK/iJ2K>ZlO8>Ql8)h2h8UaW(8<kUo
%:"k0[8FnT6Q>na=?R,mp-7R^^N0li.N0HI-LPbZ12_u)88rF`md6])c/s&YZZ'rcH0l-@\.HeeE*]#%?+D*/,XU7ukDY[+5;occf
%s!Y^/h.6>D3`]`O!&V,7B)*%5hE]7F1@7l$NXX:),6L9Td>_<YFYj]^XjrtUB>"itR5,rf*s5We3OEGo0mrsu0Rj!CYJ0S&='tdu
%eQ9Kbl7;2gof);f]`7mqq!W>![GUPY8F`UrGAF-rJIDuG1m;!@<tIUP2IC/Gl1:6nnakS#a1#E(jgD:?Zb?D,a1m$"i4hJRoZ]<R
%nCmV#puoVFq=K;HrT;!n?[_%2hgb-F5J6mOj,ZG#m"<VJr9aK]]8o/SnFrQ'o'(pR^]0?jrY#Q$Z4C8gmG75[rRG!K+".`+KE~>
%AI9_PrivateDataEnd
