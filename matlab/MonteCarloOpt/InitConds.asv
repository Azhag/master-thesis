function InitConds(alpha)

% parameters
arena_radius = 2.8;  % 1.85 for smaller arena (CHECK WHICH VALUE IS USED)
piece_comm_range = 0.35;
robot_comm_range = 0.6;
robot_speed = 0.128;
arena_size = 3*arena_radius^2*sqrt(3)/2;
timestep = 1.0;
% probability of encountering a piece
p_encounter = robot_speed*timestep*2*piece_comm_range/arena_size;
% probability of two robots encountering each other
p_encounter_robot = robot_speed*timestep*2*robot_comm_range/arena_size;


% Define the connectivity pattern
NComplexes = 12;
Connections = [1 2; 2 1; 3 4; 4 3; 5 6; 6 5; 7 8; 8 7; 9 10; 10 9; 11 12; 12 11];
NConnections = size(Connections,1);
% generate an initial distribution %
s = 60;
Xinit = s*[1 2 1 1 zeros(1,6)]';
Yinit = [Xinit1*Xinit2; Xinit5; Xinit3*Xinit4; Xinit6; Xinit2*Xinit7; Xinitf1; Xinit5*Xinit6; Xinit7; Xinit2*Xinit5; Xinit8; x6*x8; xf2];
% Define the desired occupancies %
x1 = 0.5; % independent
x2 = 2.5; % independent
x3 = 1; % independent
x5 = 0.5; % independent
x4 = x3;
x7 = x2-2*x1-x5;
xf1 = (Xinit(1)-x1-x5-x7-1)*alpha; % independent
xf2 = (Xinit(1)-x1-x5-x7-1)*(1-alpha); % independent
x8 = Xinit(1)-x1-x5-x7-xf1-xf2;
x6 = Xinit(3)-x3-x7-xf1-xf2;
Xdes = [x1 x2 x3 x4 x5 x6 x7 x8 xf1 xf2]';
Ydes = [x1*x2; x5; x3*x4; x6; x2*x7; xf1; x5*x6; x7; x2*x5; x8; x6*x8; xf2];

Y = [1     0     0     0     0     0     0     0     0     0     0     0; ...
     1     0     0     0     1     0     0     0     1     0     0     0; ...
     0     0     1     0     0     0     0     0     0     0     0     0; ...
     0     0     1     0     0     0     0     0     0     0     0     0; ...
     0     1     0     0     0     0     1     0     1     0     0     0; ...
     0     0     0     1     0     0     1     0     0     0     1     0; ...
     0     0     0     0     1     0     0     1     0     0     0     0; ...
     0     0     0     0     0     0     0     0     0     1     1     0; ...
     0     0     0     0     0     1     0     0     0     0     0     0; ...
     0     0     0     0     0     0     0     0     0     0     0     1];

Constraints;