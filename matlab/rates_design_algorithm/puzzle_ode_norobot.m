function dx = puzzle_ode_norobot(t, x, rates)
%PUZZLECASE_ODE Definition of the derivatives of the Puzzle Test Case
%   system

k1 = rates(1);
k2 = rates(2);
k3 = rates(3);
k4 = rates(4);
k5 = rates(5);
k6 = rates(6);
k7 = rates(7);
k8 = rates(8);
k9 = rates(9);
k10 = rates(10);
k11 = rates(11);
k12 = rates(12);

% Take care of null/negative populations
x(x<0) = 0;

K = [  -k1,   k2,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0; ...
        k1,  -k2,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0; ...
        0,    0,  -k3,   k4,    0,    0,    0,    0,    0,    0,    0,    0; ...
        0,    0,   k3,  -k4,    0,    0,    0,    0,    0,    0,    0,    0; ...
        0,    0,    0,    0,  -k5,   k6,    0,    0,    0,    0,    0,    0; ...
        0,    0,    0,    0,   k5,  -k6,    0,    0,    0,    0,    0,    0; ...
        0,    0,    0,    0,    0,    0,  -k7,   k8,    0,    0,    0,    0; ...
        0,    0,    0,    0,    0,    0,   k7,  -k8,    0,    0,    0,    0; ...
        0,    0,    0,    0,    0,    0,    0,    0,  -k9,  k10,    0,    0; ...
        0,    0,    0,    0,    0,    0,    0,    0,   k9, -k10,    0,    0; ...
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0, -k11,  k12; ...
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  k11, -k12];
    
Y = [1     0     0     0     0     0     0     0     0     0     0     0; ...
     1     0     0     0     1     0     0     0     1     0     0     0; ...
     0     0     1     0     0     0     0     0     0     0     0     0; ...
     0     0     1     0     0     0     0     0     0     0     0     0; ...
     0     1     0     0     0     0     1     0     1     0     0     0; ...
     0     0     0     1     0     0     1     0     0     0     1     0; ...
     0     0     0     0     1     0     0     1     0     0     0     0; ...
     0     0     0     0     0     0     0     0     0     1     1     0; ...
     0     0     0     0     0     1     0     0     0     0     0     0; ...
     0     0     0     0     0     0     0     0     0     0     0     1];

y = [x(1)*x(2); x(5); x(3)*x(4); x(6); x(2)*x(7); x(9); x(5)*x(6); x(7); ...
     x(2)*x(5); x(8); x(6)*x(8); x(10)];  % x(9) = xf1; x(10) = xf2

dx = Y*K*y;
              

